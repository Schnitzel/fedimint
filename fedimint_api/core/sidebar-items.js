window.SIDEBAR_ITEMS = {"constant":[["LEGACY_HARDCODED_INSTANCE_ID_LN",""],["LEGACY_HARDCODED_INSTANCE_ID_MINT",""],["LEGACY_HARDCODED_INSTANCE_ID_WALLET",""],["MODULE_INSTANCE_ID_GLOBAL","Special ID we use for global dkg"]],"enum":[["FinalizationError",""]],"macro":[["erased_eq_no_instance_id",""],["newtype_impl_display_passthrough","Implementes the `Display` trait for dyn newtypes whose traits implement `Display`"],["newtype_impl_display_passthrough_with_instance_id",""],["newtype_impl_eq_passthrough_with_instance_id",""],["try",""]],"mod":[["client",""],["encode",""],["server","Fedimint Core Server module interface"]],"struct":[["ConsensusItem","An owned, immutable output of a [`Transaction`] before it was finalized"],["Decoder","Decoder for module associated types"],["Input","An owned, immutable input to a [`Transaction`]"],["KeyPair","Opaque data structure that holds a keypair consisting of a secret and a public key."],["ModuleKind","A type of a module"],["Output","An owned, immutable output of a [`Transaction`]"],["OutputOutcome","An owned, immutable output of a [`Transaction`] before it was finalized"],["Signature",""],["Transaction","Transaction that was already signed"],["__Visitor",""]],"trait":[["ModuleConsensusItem",""],["ModuleDecode",""],["ModuleInput","Something that can be an [`Input`] in a [`Transaction`]"],["ModuleOutput","Something that can be an [`Output`] in a [`Transaction`]"],["ModuleOutputOutcome",""],["PluginConsensusItem",""],["PluginDecode","Module Decoder trait"],["PluginInput",""],["PluginOutput",""],["PluginOutputOutcome",""]],"type":[["ModuleInstanceId","Module instance ID"]]};