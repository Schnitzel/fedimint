window.SIDEBAR_ITEMS = {"enum":[["DatabaseSource",""],["UpdateStreamOrOutcome","Either a stream of operation updates if the operation hasn’t finished yet or its outcome otherwise."]],"fn":[["box_up_state","Not sure why I couldn’t just directly call `Box::new` ins [`states_to_instanceless_dyn`], but this fixed it."],["caching_operation_update_stream","Wraps an operation update stream such that the last update before it closes is tried to be written to the operation log entry as its outcome."],["client_decoders",""],["get_client_root_secret","Fetches the client secret from the database or generates a new one if none is present"],["get_client_root_secret_encoding","Fetches the client secret encoding from the database or generates a new one if none is present"],["set_client_root_secret","Sets the client secret in the database, returns if an old secret was overwritten"],["states_add_instance",""],["states_to_instanceless_dyn",""]],"macro":[["sm_enum_variant_translation",""]],"mod":[["backup","Client backup"],["db","Database keys used by the client"],["module","Module client interface definitions"],["secret","Secret handling & derivation"],["sm","Client state machine interfaces and executor implementation"],["transaction","Structs and interfaces to construct Fedimint transactions"]],"struct":[["Client",""],["ClientBuilder",""],["ClientInner",""],["ClientModuleInstance","Resources particular to a module instance"],["ClientSecret","Secret input key material from which the [`DerivableSecret`] used by the client will be seeded"],["DynGlobalClientContext","Global state and functionality provided to all state machines running in the client"],["ModuleGlobalClientContext","Global state given to a specific client module and state. It is aware inside which module instance and operation it is used and to avoid module being aware of their instance id etc."],["OperationLogEntry",""],["TransactionUpdates","See [`Client::transaction_updates`]"]],"trait":[["IGlobalClientContext",""]],"type":[["InstancelessDynClientInput",""],["InstancelessDynClientOutput",""],["ModuleGlobalContextGen",""]]};