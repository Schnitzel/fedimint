var searchIndex = JSON.parse('{\
"aead":{"doc":"","t":[3,3,17,3,11,11,12,11,11,11,11,11,11,11,12,5,11,5,11,11,11,11,11,11,11,5,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Aad","LessSafeKey","NONCE_LEN","UnboundKey","algorithm","algorithm","algorithm","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cpu_features","decrypt","empty","encrypt","fmt","fmt","from","from","from","from","from","get_random_nonce","inner","into","into","into","key","new","new","open_in_place","open_within","seal_in_place","seal_in_place_append_tag","seal_in_place_separate_tag","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["aead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The additionally authenticated data (AAD) for an opening …","Immutable keys for use in situations where <code>OpeningKey</code>/…","All the AEADs we support use 96-bit nonces.","An AEAD key without a designated role or nonce sequence.","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","","","","","","","","","Decrypts a <code>ciphertext</code> using <code>key</code>.","Construct an empty <code>Aad</code>.","Encrypt <code>plaintext</code> using <code>key</code>.","","","Returns the argument unchanged.","Construct the <code>Aad</code> from the given bytes.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a random nonce.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Constructs an <code>UnboundKey</code>.","Constructs a <code>LessSafeKey</code> from an <code>UnboundKey</code>.","Like <code>OpeningKey::open_in_place()</code>, except it accepts an …","Like <code>OpeningKey::open_within()</code>, except it accepts an …","Deprecated. Renamed to <code>seal_in_place_append_tag()</code>.","Like <code>SealingKey::seal_in_place_append_tag()</code>, except it …","Like <code>SealingKey::seal_in_place_separate_tag()</code>, except it …","","","","","","","","","","","",""],"i":[0,0,0,0,1,3,1,4,4,1,3,4,1,3,1,0,4,0,1,3,4,4,1,1,3,0,1,4,1,3,3,1,3,3,3,3,3,3,4,1,3,4,1,3,4,1,3,4,1,3],"f":[0,0,0,0,[1,2],[3,2],0,[4],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,5],[[],4],[[[7,[6]],3],[[5,[[7,[6]]]]]],[[1,8],[[10,[9]]]],[[3,8],[[10,[9]]]],[[]],[[],4],[[]],[[[11,[2]]],1],[[]],[[],12],0,[[]],[[]],[[]],0,[2,[[10,[1,13]]]],[1,3],[[3,12,4],[[10,[13]]]],[[3,12,4,[15,[14]]],[[10,[13]]]],[[3,12,4],[[10,[13]]]],[[3,12,4],[[10,[13]]]],[[3,12,4],[[10,[16,13]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],17],[[],17],[[],17],[[]],[[]],[[]]],"p":[[3,"UnboundKey"],[3,"Algorithm"],[3,"LessSafeKey"],[3,"Aad"],[6,"Result"],[15,"u8"],[3,"Vec"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Okm"],[3,"Nonce"],[3,"Unspecified"],[15,"usize"],[3,"RangeFrom"],[3,"Tag"],[3,"TypeId"]]},\
"dbtool":{"doc":"","t":[4,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["DbCommand","Delete","List","Options","Write","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command","command_for_update","database","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","hex_parser","into","into","main","open_db","print_kv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","key","prefix","prefix","value"],"q":["dbtool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dbtool::DbCommand","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,3,2,2,3,3,2,3,2,3,2,3,2,3,2,2,2,2,2,3,2,3,2,3,2,3,2,3,0,2,3,0,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,17,18,19,17],"f":[0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[],1],0,[[],1],0,[[2,4],5],[[3,4],5],[[]],[[]],[6,[[8,[2,7]]]],[6,[[8,[3,7]]]],[6,[[8,[2,7]]]],[6,[[8,[3,7]]]],[[],[[10,[9]]]],[11,12],[11,[[14,[13]]]],[[]],[[]],[[]],[11,[[14,[15]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[2,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[[2,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[[]],[[]],0,0,0,0],"p":[[3,"Command"],[3,"Options"],[4,"DbCommand"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Bytes"],[6,"Result"],[3,"Database"],[3,"TypeId"],[13,"Write"],[13,"List"],[13,"Delete"]]},\
"distributedgen":{"doc":"","t":[3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Cli","Command","ConfigDecrypt","ConfigEncrypt","CreateCert","Run","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","salt_file_path_from_file_path","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","api_url","bind_api","bind_p2p","certs","dir_out_path","dir_out_path","federation_name","finality_delay","in_file","in_file","max_denomination","name","network","out_file","out_file","p2p_url","password","password","password","password","salt_file","salt_file"],"q":["distributedgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","distributedgen::Command","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Creates a connection cert string that must be shared with …","All peers must run distributed key gen at the same time to …","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Our API address for clients to connect to us","Address we bind to for exposing the API","Address we bind to for federation communication","Comma-separated list of connection certs from all peers …","Directory to output all the generated config files","Directory to output all the generated config files","Federation name, same for all peers","The number of confirmations a deposit transaction requires …","Encrypted config file","Plaintext config file","Max denomination of notes issued by the federation (in …","Our node name, must be unique among peers","The bitcoin network that fedimint will be running on","Plaintext config file output","Encrypted config file output","Our external address for communicating with our peers","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …","Encryption salt file, otherwise defaults to the salt file …","Encryption salt file, otherwise defaults to the salt file …"],"i":[0,0,7,7,7,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,4,7,4,7,4,7,4,7,4,7,4,7,16,17,17,17,16,17,17,17,18,19,17,16,17,18,19,16,16,17,18,19,18,19],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[],12],[13,14],[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[6,"Result"],[3,"Path"],[3,"PathBuf"],[3,"TypeId"],[13,"CreateCert"],[13,"Run"],[13,"ConfigDecrypt"],[13,"ConfigEncrypt"]]},\
"fedimint_api":{"doc":"","t":[3,8,18,16,3,16,18,13,8,3,4,3,2,2,3,13,18,14,14,14,14,11,11,10,11,11,11,10,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,14,14,14,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,10,11,0,11,0,14,14,5,12,11,0,11,12,11,11,11,11,14,11,11,11,5,12,11,11,11,11,11,11,2,11,11,11,11,0,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,4,13,13,17,17,17,11,11,11,11,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,13,3,3,16,13,3,8,3,4,4,3,4,13,13,3,13,13,13,8,3,16,18,13,3,8,16,13,13,8,3,13,4,3,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,11,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,5,12,12,0,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,12,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,11,11,11,5,11,11,11,11,11,16,8,3,3,3,3,3,4,8,8,8,8,8,8,16,3,17,17,17,17,8,6,3,8,16,8,16,3,13,3,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,10,11,10,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,0,11,11,11,11,11,11,10,10,10,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,12,11,11,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,3,8,18,16,10,11,11,11,11,10,10,11,11,11,11,10,11,11,10,11,11,11,11,11,5,3,3,8,8,8,10,10,10,10,10,10,10,10,11,11,11,11,10,10,11,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,10,11,11,13,4,13,13,3,18,3,3,8,8,8,3,8,4,8,8,3,16,17,13,13,6,8,13,4,16,13,13,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,12,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,12,12,11,11,11,11,11,11,11,11,11,12,0,12,11,11,11,11,12,11,10,11,10,11,10,11,11,10,11,11,11,10,11,10,11,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,4,13,3,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,17,3,13,3,3,3,3,13,17,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,3,8,24,3,8,8,24,3,24,11,11,11,11,11,11,0,11,11,11,10,11,10,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,12,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,3,11,11,11,11,11,5,11,11,11,11,11,0,5,5,0,3,11,11,11,11,11,11,12,11,11,11,11,11,11,3,3,16,16,16,3,6,6,8,16,3,8,18,18,4,8,13,16,16,18,16,16,3,8,16,16,3,8,16,18,12,12,14,10,10,10,0,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,10,10,10,10,11,11,10,10,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,10,10,0,11,11,11,11,11,11,11,10,12,10,11,11,11,10,12,11,12,0,11,11,10,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,8,10,6,2,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,8,3,3,10,10,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,12,11,12,11,12,11,11,12,11,11,3,3,3,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,12,11,11,11,11,11,12,12,12,11,11,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,5,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Amount","BitcoinHash","DISPLAY_BACKWARD","Engine","Feerate","Inner","LEN","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","ServerModule","Tiered","TransactionId","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_define_with_instance_id_inner","_dyn_newtype_impl_deref_mut","add","add_assign","all_zeros","all_zeros","as_bits","as_hash","as_inner","as_inner","as_ref","base32_len","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","cancellable","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","db","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","div","dyn_newtype_define","dyn_newtype_define_with_instance_id","dyn_newtype_impl_dyn_clone_passhthrough","dyn_newtype_impl_dyn_clone_passhthrough_with_instance_id","encoding","engine","engine","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_utils","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_msats","from_sats","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","hash","hex","index","into","into","into","into","into","into","into_inner","into_inner","macros","max_evil","module","module_dyn_newtype_impl_encode_decode","module_plugin_trait_define","msats","msats","mul","net","one_honest","out_idx","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl","provide","rem","rem_assign","sats","sats_per_kvb","saturating_sub","serialize","serialize","serialize","serialize","serialize","server","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_usize","total","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","BitcoinRpcBackendType","Bitcoind","Bitcoind","BitcoindRpcBackend","Electrum","Electrum","FM_BITCOIND_RPC_DEFAULT_FALLBACK","FM_BITCOIND_RPC_ENV","FM_ELECTRUM_RPC_ENV","borrow","borrow","borrow_mut","borrow_mut","fm_bitcoind_rpc_env_value_to_url","fm_electrum_rpc_env_value_to_url","from","from","into","into","read_bitcoin_backend_from_global_env","select_bitcoin_backend_from_envs","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Cancellable","Cancelled","borrow","borrow_mut","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","ApiEndpoint","ClientConfig","ClientModuleConfig","Commit","ConfigGenParams","ConfigResponse","Consensus","DistributedGen","Dkg","DkgGroup","DkgKeys","DkgMessage","DkgPeerMsg","DkgRunner","DkgStep","Done","Extract","FederationId","G1","G2","HashedCommit","ISupportedDkgMessage","JsonWithKind","Local","MODULE_NAME","Messages","ModuleConfigResponse","ModuleGenParams","Private","PublicKey","Result","SGroup","ServerModuleConfig","Share","SupportedDkgMessage","ThresholdKeys","TypedClientModuleConfig","TypedServerModuleConfig","TypedServerModuleConsensusConfig","add","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","cast","client","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitments","consensus","consensus_encode","consensus_encode_dyn","consensus_hash","consensus_hash","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","dkg_config","dummy","epoch_pk","eq","eq","eq","eq","eq","eq","eq","eq","f1_poly","f2_poly","federation_id","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_msg","from_msg","from_msg","from_parts","from_str","gen_g","gen_h","get","get_first_module_by_kind","get_module","hash","hash","hash","hashed_commits","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_kind","is_kind","kind","kind","kind","kind","local","modules","multi","name","new","new","new","new","new","nodes","our_id","our_id","peers","peers","pk_shares","private","public_key_set","public_key_set","run","run_g1","run_g2","scalar","secret_key_share","secret_key_share","serde_commit","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","sk_shares","step","tbs","threshold","threshold_crypto","to_bytes","to_client_config","to_erased","to_erased","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_string","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","Wrap","borrow","borrow_mut","deserialize","deserialize","from","into","serialize","serialize","try_from","try_into","type_id","vzip","ConsensusItem","Decoder","DynDecoder","DynInput","DynModuleConsensusItem","DynOutput","DynOutputOutcome","FinalizationError","IDecoder","IInput","IModuleConsensusItem","IOutput","IOutputOutcome","Input","Input","KeyPair","LEGACY_HARDCODED_INSTANCE_ID_LN","LEGACY_HARDCODED_INSTANCE_ID_MINT","LEGACY_HARDCODED_INSTANCE_ID_WALLET","MODULE_INSTANCE_ID_GLOBAL","ModuleConsensusItem","ModuleInstanceId","ModuleKind","Output","Output","OutputOutcome","OutputOutcome","Signature","SomethingWentWrong","Transaction","add_xonly_tweak","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_str","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode_consensus_item","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_input","decode_output","decode_output","decode_output","decode_output_outcome","decode_output_outcome","decode_output_outcome","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","display_secret","dyn_hash","dyn_hash","dyn_hash","dyn_hash","encode","eq","eq","eq","eq","eq","eq","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_static_str","from_str","from_typed","from_typed","from_typed","from_typed","from_typed","hash","hash","hash","hash","hash","inputs","into","into","into","into","into","into","into","into","into","into","module_instance_id","module_instance_id","module_instance_id","module_instance_id","new","new_global","newtype_impl_display_passthrough","newtype_impl_display_passthrough_with_instance_id","newtype_impl_eq_passthrough_with_instance_id","outputs","partial_cmp","partial_cmp","public_key","secret_bytes","secret_key","serialize","serialize","server","sign_schnorr","signature","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x_only_public_key","ClientModule","Decoder","DynClientModule","IClientModule","KIND","Module","as_any","borrow","borrow_mut","clone","clone_into","decoder","decoder","deref","fmt","from","from","input_amount","into","module_kind","output_amount","to_owned","try_from","try_into","type_id","vzip","module_decode_key_prefixed_decodable","DynServerModule","DynVerificationCache","IServerModule","IVerificationCache","VerificationCache","api_endpoints","apply_input","apply_output","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone_into","consensus_proposal","decoder","deref","deref","deref_mut","end_consensus_epoch","fmt","fmt","from","from","from","from","into","into","output_status","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate_input","validate_output","vzip","vzip","AltTest","AutocommitError","ClosureError","CommitFailed","CommitTracker","DB_PREFIX","Database","DatabaseInner","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyPrefixConst","DatabaseTransaction","DatabaseValue","DecodingError","IDatabase","IDatabaseTransaction","IsolatedDatabaseTransaction","Key","MODULE_GLOBAL_PREFIX","Other","PercentTestKey","PrefixIter","SerializableDatabaseValue","Test","TestDbKeyPrefix","Value","WrongLength","WrongPrefix","_marker","autocommit","begin_transaction","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_tracker","commit_tx","commit_tx","commit_tx","db","decoders","deref","deref_mut","drop","expect_write_conflict","find_by_prefix","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","get_value","has_writes","inner_tx","insert_entry","insert_new_entry","into","into","into","into","into","into","into","is_committed","mem_impl","module_decoders","new","new","new","other","prefix","provide","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","remove_by_prefix","remove_entry","rollback_tx_to_savepoint","rollback_tx_to_savepoint","set_tx_savepoint","set_tx_savepoint","tests","to_bytes","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module_prefix","wrong_length","wrong_prefix","error","last_error","retries","retries","expected","expected","found","found","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseOperation","Delete","DummyError","Insert","MemDatabase","MemDbIter","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","data","db","default","default","default","dump_db","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","key","key","new","next","num_pending_operations","num_savepoint_operations","operations","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","rollback_tx_to_savepoint","savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ALT_MODULE_PREFIX","AltDbPrefixTestPrefix","AltTest","AltTestKey","DbPrefixTestPrefix","PercentPrefixTestPrefix","PercentTestKey","PercentTestKey","TEST_MODULE_PREFIX","Test","TestDbKeyPrefix","TestKey","TestVal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","expect_write_conflict","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CountWrite","Decodable","Decodable","DecodeError","DynEncodable","Encodable","Encodable","SerdeEncodable","UnzipConsensus","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc","clone","clone_into","cmp","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_to_vec","consensus_hash","count","emit_bool","emit_i16","emit_i32","emit_i64","emit_i8","emit_slice","emit_u16","emit_u32","emit_u64","emit_u8","eq","flush","fmt","fmt","fmt","from","from","from","from_bytes","from_err","from_str","hash","impl_encode_decode_num","impl_encode_decode_tuple","inner","into","into","into","new","new_custom","partial_cmp","provide","secp256k1","tbs","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_all","impl_encode_decode_bridge","impl_external_encode_bls","AbbreviateHexBytes","borrow","borrow_mut","fmt","from","into","rust_log_full_enabled","to_string","try_from","try_into","type_id","vzip","serde","deserialize","serialize","tests","Data","borrow","borrow_mut","deserialize","eq","fmt","from","inner","into","serialize","try_from","try_into","type_id","vzip","ApiEndpoint","ApiError","ConsensusItem","Decoder","Decoder","DynModuleGen","HandlerFn","HandlerFnReturn","IModuleGen","Input","InputMeta","IntoModuleError","KIND","KIND","ModuleError","ModuleGen","Other","Output","OutputOutcome","PATH","Param","Response","SerdeModuleEncoding","ServerModule","State","Target","TransactionItemAmount","TypedApiEndpoint","VerificationCache","ZERO","amount","amount","api_endpoint","api_endpoints","apply_input","apply_output","audit","audit","await_consensus_proposal","bad_request","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone","clone_into","clone_into","clone_into","code","consensus_proposal","decoder","decoder","decoder","deref","deserialize","distributed_gen","distributed_gen","end_consensus_epoch","eq","eq","fee","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_typed","handle","handler","hash","hash","init","init","interconnect","into","into","into","into","into","into","into","into_module_error_other","message","module_kind","module_kind","new","not_found","output_status","path","provide","puk_keys","registry","serialize","source","to_config_response","to_config_response","to_owned","to_owned","to_owned","to_string","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Audit","AuditItem","add_items","borrow","borrow","borrow_mut","borrow_mut","default","fmt","fmt","from","from","into","into","items","milli_sat","name","sum","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ModuleInterconect","call","ModuleDecoderRegistry","ModuleInstanceId","ModuleRegistry","ServerModuleRegistry","borrow","borrow_mut","clone","clone_into","decoder_registry","decoder_registry","default","fmt","from","from","from_iter","get","get_expect","into","iter_modules","new","register_module","register_module","to_owned","try_from","try_into","type_id","vzip","peers","IMuxPeerConnections","IPeerConnections","MuxPeerConnections","PeerConnections","ban_peer","ban_peer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","fake","from","from","into","into","into_dyn","into_dyn","receive","receive","send","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FakePeerConnections","ban_peer","borrow","borrow_mut","from","into","make_fake_peer_connection","peer_id","receive","rx","send","task_handle","try_from","try_into","tx","type_id","vzip","Elapsed","RwLock","RwLockReadGuard","RwLockWriteGuard","TaskGroup","TaskGroupInner","TaskHandle","TaskPanicGuard","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","clone","clone","clone_into","clone_into","completed","const_new","const_with_max_readers","data","data","default","default","default","deref","deref","deref_mut","downgrade","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_mut","imp","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into","into_inner","into_mapped","is_shutting_down","is_shutting_down","is_shutting_down","join","join_all","make_handle","make_shutdown_rx","make_subgroup","map","map","marker","marker","mr","name","new","new","on_shutdown","on_shutdown","payment_path_failed","payment_path_successful","permits_acquired","probe_failed","probe_successful","provide","read","read_owned","s","s","s","shutdown","shutdown","shutdown_join_all","sleep","sleep_until","spawn","spawn_local","timeout","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","c","data","data","marker","marker","mr","permits_acquired","s","s","s","sleep","sleep_until","spawn","spawn_local","timeout","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","consensus_decode","consensus_encode","consensus_encode_dyn","default","deserialize","deserialize","entry","eq","eq","fmt","fmt","fmt","from","from","from_bytes","from_iter","get","get_mut","get_mut_or_default","hash","hash","insert","into","into","iter","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_bytes","to_owned","to_owned","to_public","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TieredMulti","TieredMultiZip","_pd","all_tiers_exist_in","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","count_items","count_tiers","default","deserialize","eq","extend","fmt","from","from","from_bytes","from_iter","get","get_mut","hash","into","into","into_iter","into_iter","into_iter_items","is_empty","iter","iter_items","iter_tiers","iters","longest_tier_len","map","new","new","next","represent_amount","select_notes","serialize","structural_eq","to_bytes","to_owned","total_amount","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_apifedimint_api::bitcoin_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::cancellable","","","","","","","","","","","","","","fedimint_api::configfedimint_api::config::serde_commit","","","","","","","","","","","","","fedimint_api::corefedimint_api::core::client","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::core::encode","fedimint_api::core::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::AutocommitError","","","","fedimint_api::db::DecodingError","","","","fedimint_api::db::mem_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding::btc","fedimint_api::encoding::tbs","fedimint_api::fmt_utils","","","","","","","","","","","","fedimint_api::hex","fedimint_api::hex::serde","","","fedimint_api::hex::serde::tests","","","","","","","","","","","","","","fedimint_api::module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::audit","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::interconnect","","fedimint_api::module::registry","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::net","fedimint_api::net::peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::net::peers::fake","","","","","","","","","","","","","","","","","fedimint_api::taskfedimint_api::task::imp","","","","","","","","","","","","","","","","","","","fedimint_api::tiered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::tiered_multi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents an amount of BTC inside the system. The base …","Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","Length of the hash, in bytes.","","for consensus-related calculations given the number of …","<code>OutPoint</code> represents a globally unique output in a …","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","Example","","","","","","Returns an all zero hash.","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint Core API (common) module interface","","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","","Implement <code>Clone</code> on a “dyn newtype”","","This module defines a binary encoding interface which is …","Constructs a new engine.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","Copies a byte slice into a hash object.","","","","","","Hashes some bytes.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","number of peers that can be evil without disrupting the …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","Define a “plugin” trait","Shorthand for <code>Amount::from_msats</code>","","","","number of peers to select such that one is honest (under …","As a transaction may have multiple outputs, this refers to …","","","","","Implements the necessary traits for all associated types …","","","","Shorthand for <code>Amount::from_sats</code>","","","","","","","","","","","","","","number of peers required for a signature","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","The referenced transaction ID","","","","","","","","","","","","","","","Bitcoin Core RPC","","Bitcoin RPC backend","Electrum RPC","","Default url that will be used if <code>FM_BITCOIND_RPC_ENV</code> is …","Name of the env value used for passing bitcoind rpc url to …","Name of the env value used for passing electrum rpc url to …","","","","","Get the value of bitcoin rpc url to use, from the value of …","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the value of url the module would use by reading it …","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Total client config","Config for the client-side of a particular Federation …","","Global Fedimint configuration generation settings passed …","The API response for configuration requests","Shared consensus-critical config","","","Defines a group (e.g. G1 or G2) that we can generate keys …","","","Things that a <code>distributed_gen</code> config can send between peers","","","","","The federation id is a copy of the authentication …","","","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","Local non-consensus, not security-sensitive settings","","","Response from the API for this particular module","","Private for this federation member data that are security …","","","","Config for the server-side of a particular Federation …","","<code>enum</code> version of <code>SupportedDkgMessage</code>","Our secret key share of a threshold key","Typed client side module config","Module (server side) config","Consensus-critical part of a server side module config","Create another DKG with <code>threshold</code> signatures required","Add params for a module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The client config","The client configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the consensus config (for validating against peers)","Hash of the consensus configuration","","","","","","","","","","","","","","","Non-unique dummy id for testing","Threshold pubkey for authenticating epoch history","","","","","","","","","","","","name of the federation","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Assemble from the three functionally distinct parts","","","Get a second generator by hashing the first one to the …","Retrieve a typed config generation parameters for a module","(soft-deprecated): Get the first instance of a module of a …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Configs from other client modules","Create multiple DKGs with the same <code>threshold</code> signatures …","human-readable name","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","","","API endpoints for each federation member","","","","","","","","","Runs the DKG algorithms with our peers","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","","Handling the Group serialization with a wrapper","","","","","","","","","","","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","Derive client side config for this module (type-erased)","Turn the typed config into type-erased version","","","","","","","","","","","","","","","","","","","","Split the config into its three functionally distinct parts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s API websocket network address and port (e.g. …","Validate the config","","","","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Module Decoder trait","Decoder for module associated types","An owned, immutable input to a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","An owned, immutable output of a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","","","Something that can be an <code>DynInput</code> in a <code>Transaction</code>","","Something that can be an <code>DynOutput</code> in a <code>Transaction</code>","","","","Opaque data structure that holds a keypair consisting of a …","","","","Special ID we use for global dkg","","Module instance ID","A type of a module","","","","","","","Transaction that was already signed","Tweaks a keypair by first converting the public key to an …","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>ConsensusItem</code> compatible with this module, after …","Decode <code>ConsensusItem</code> compatible with this module, after …","","Decode <code>Input</code> compatible with this module, after the module …","Decode <code>Input</code> compatible with this module, after the module …","","Decode <code>Output</code> compatible with this module, after the …","Decode <code>Output</code> compatible with this module, after the …","","Decode <code>OutputOutcome</code> compatible with this module, after …","Decode <code>OutputOutcome</code> compatible with this module, after …","","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","Create <code>Self</code> form a typed version defined by the plugin","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","Implementes the <code>Display</code> trait for dyn newtypes whose …","","","","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","","","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","","","","","","","Return the type-erased decoder of the module","","","","Returns the argument unchanged.","","Returns the amount represented by the input and the fee …","Calls <code>U::from(self)</code>.","","Returns the amount represented by the output and the fee …","","","","","","","","","Backend side module interface","","","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","Returns the decoder belonging to the server module","","","","This function is called once all transactions have been …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Retrieve the current status of the output. Depending on …","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","Error returned when the autocommit function fails","Error returned by the closure provided to <code>autocommit</code>. If …","Committing the transaction failed too many times, giving up","A handle to a type-erased database implementation","","","","","","","A handle to a type-erased database implementation","","","","Fedimint requires that the database implementation …","IsolatedDatabaseTransaction is a wrapper around …","","","","","","","","","","","","","Runs a closure with a reference to a database transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Default implementation is a combination of …","","","","","","","Create a savepoint during the transaction that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error returned by the closure","Last error on commit","Number of retries","Retry on which the closure returned an error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper counting bytes written","Data which can be encoded in a consensus-consistent way","","","Object-safe trait for things that can encode themselves","Data which can be encoded in a consensus-consistent way","","Wrappers for <code>T</code> that are <code>De-Serializable</code>, while we need …","","","","","","","","","","","","Decode an object with a well-defined format","","Encode an object with a well-defined format. Returns the …","","","","","<code>Self::consensus_encode</code> to newly allocated <code>Vec&lt;u8&gt;</code>","Generate a SHA256 hash of the consensus encoding","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Use for displaying bytes in the logs","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Deserialize a hex String to a <code>Vec&lt;u8&gt;</code>","Serialize a <code>&amp;[u8]</code> to a hex String","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Definition of an API endpoint defined by a module <code>M</code>.","","","","","","","","Interface for Module Generation","","","Extension trait with a function to map <code>Result</code>s used by …","","","","Module Generation trait with associated types","","","","example: /transaction","","","Creates a struct that can be used to make our …","","","","Information about the amount represented by an input or …","","","","","","Example","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Handler for the API call that takes the following …","","","Initialize the <code>DynServerModule</code> instance from its config","Initialize the <code>DynServerModule</code> instance from its config","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Retrieve the current status of the output. Depending on …","Path under which the API endpoint can be reached. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Provides an interface to call APIs of other modules","Simulates a call to an API endpoint of another module. …","Collection of decoders belonging to modules, typically …","","Module Registry hold module-specific data <code>M</code> by the …","Collection of server modules","","","","","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","","","Returns the argument unchanged.","","","Get module data by instance id","Return the module data belonging to the module identified …","Calls <code>U::from(self)</code>.","Return an iterator over all module data","Create <code>Self</code> from an iterator of pairs","Add a module to the registry","Add a module to the registry","","","","","","","Like <code>IPeerConnections</code> but with an ability to handle …","Connection manager that tries to keep connections open to …","Owned <code>MuxPeerConnections</code> trait object type","Owned <code>PeerConnections</code> trait object type","Removes a peer connection in case of misbehavior","Removes a peer connection in case of misbehavior","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the struct to a <code>PeerConnection</code> trait object","Converts the struct to a <code>PeerConnection</code> trait object","Await receipt of a message from any connected peer.","Await receipt of a message from any connected peer.","Send a message to a specific peer.","Send a message to a specific destination at specific peer.","","","","","","","","","","","Removes a peer connection in case of misbehavior","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a fake link between <code>peer1</code> and <code>peer2</code> for test …","","","","","","","","","","","","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A group of task working together","","","","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","Did the future completed successfully (no panic)","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a mutable reference to the underlying data.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","","Is task group shutting down?","Was the shutdown requested, either externally or due to …","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Create a sub-group","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","","Represents notes of different denominations.","","","Verifies that all keys in <code>self</code> are present in the keys of …","","","","","","","","","","Returns the number of items in all vectors","Returns the number of tiers","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns an <code>Option</code> with a reference to the vector of the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an consuming iterator over every <code>(Amount, T)</code>","Verifies whether all vectors in all tiers are empty","Returns an borrowing iterator","Returns an iterator over every <code>(Amount, &amp;T)</code>","Returns an iterator over the keys","","Returns the length of the longest vector of all tiers","Applies the given closure to every <code>(Amount, T)</code> pair","Creates a new MultiZip Iterator from <code>Notes</code> iterators. …","Returns a new <code>TieredMulti</code> with the given <code>BTreeMap</code> map","","Determines the denominations to use when representing an …","Select notes with total amount of <em>at least</em> <code>amount</code>. If more …","","Verifies whether the structure of <code>self</code> and <code>other</code> is …","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","","","",""],"i":[0,0,201,201,0,201,201,24,0,0,0,0,0,0,0,24,1,0,0,0,0,1,1,201,2,2,2,201,2,2,2,0,2,2,13,1,14,24,6,2,13,1,14,24,6,6,0,2,2,13,1,14,6,2,13,1,14,6,2,13,1,6,0,2,13,1,14,6,2,13,1,14,6,2,13,1,14,6,0,0,202,2,2,13,1,14,6,1,0,0,0,0,0,201,2,2,13,1,14,6,2,2,2,13,13,1,1,14,14,24,24,6,0,2,2,13,13,1,1,14,24,24,24,6,2,2,13,1,14,6,201,2,2,201,2,1,1,201,2,2,2,1,1,201,2,13,1,14,6,0,2,2,13,1,14,24,6,201,2,0,202,0,0,0,0,1,1,0,202,14,2,13,1,6,0,24,1,1,0,6,1,2,13,1,14,6,0,24,1,1,1,0,202,0,0,2,13,1,14,6,2,2,13,1,14,6,2,13,1,14,24,13,202,2,2,13,1,14,24,6,2,13,1,14,24,6,14,2,13,1,14,24,6,2,13,1,14,24,6,2,0,47,203,0,47,203,0,0,0,47,203,47,203,0,0,47,203,47,203,0,0,47,203,47,203,47,203,47,203,0,0,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,54,0,0,83,65,0,0,0,0,0,0,0,65,54,0,66,66,54,0,0,83,51,55,0,0,83,65,55,0,0,54,0,0,0,0,0,49,50,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,53,56,61,63,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,53,64,59,59,61,63,50,58,59,60,61,62,63,56,64,65,66,54,204,49,62,60,58,59,60,61,62,56,64,54,53,53,60,60,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,53,49,58,59,60,61,62,50,63,56,64,64,65,66,55,68,69,54,205,54,54,83,62,53,53,50,60,60,53,59,62,53,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,58,56,57,58,56,58,64,60,49,59,53,49,58,50,56,60,53,49,53,49,53,64,68,69,49,49,49,0,68,69,0,58,59,60,61,62,63,56,64,65,66,54,204,53,53,68,53,68,59,206,83,57,205,54,54,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,83,62,64,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,62,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,59,83,58,56,58,53,49,58,59,60,61,62,50,63,56,64,65,66,55,68,69,54,58,0,84,84,0,84,84,84,0,84,84,84,84,84,103,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0,0,0,0,0,0,0,0,103,0,103,0,207,0,85,208,209,210,211,85,85,74,207,85,74,95,91,92,93,94,96,97,207,85,74,95,91,92,93,94,96,97,0,208,209,210,211,85,74,95,91,92,93,94,74,85,74,95,91,92,93,94,85,74,85,91,92,93,94,96,97,85,91,92,93,94,96,97,85,91,92,93,94,96,97,85,103,212,95,103,212,95,103,212,95,103,212,95,95,91,92,93,94,91,92,93,94,85,74,85,208,209,210,211,0,85,74,91,92,93,94,208,209,210,211,0,85,74,74,95,91,91,92,92,93,93,94,94,207,85,85,74,74,95,95,91,92,93,94,96,97,85,91,92,93,94,85,85,85,85,74,85,95,91,92,93,94,85,91,92,93,94,97,207,85,74,95,91,92,93,94,96,97,91,92,93,94,85,85,0,0,0,97,85,74,85,85,85,85,74,0,85,97,85,85,91,92,93,94,85,74,95,91,92,93,94,74,91,92,93,94,207,85,74,95,91,92,93,94,96,97,207,85,74,95,91,92,93,94,96,97,85,207,85,74,95,91,92,93,94,96,97,207,85,74,95,91,92,93,94,96,97,85,0,213,0,0,213,213,214,110,110,110,110,214,213,110,110,110,110,213,110,213,213,110,110,110,110,110,0,0,0,0,0,0,215,215,215,216,215,215,215,215,116,112,116,112,215,216,112,112,215,215,116,112,116,215,116,112,116,116,112,112,116,112,215,112,116,112,116,112,116,112,215,215,116,112,138,0,123,123,0,217,0,0,0,0,0,0,0,0,0,0,0,217,0,30,138,0,0,138,0,217,30,30,125,122,127,122,126,125,115,122,129,123,30,126,125,115,122,129,123,30,122,122,115,130,125,115,129,115,115,115,126,0,115,122,129,123,30,30,126,125,115,122,129,123,30,218,219,115,126,125,115,115,126,125,115,122,129,123,30,126,0,129,125,115,122,30,125,30,130,125,130,125,130,125,130,130,125,115,115,130,125,130,125,0,220,221,122,30,126,125,115,122,129,123,30,126,125,115,122,129,123,30,115,126,125,115,122,129,123,30,0,0,0,0,0,0,0,0,0,0,0,0,0,126,125,115,122,129,123,30,115,30,30,222,223,223,222,224,225,224,225,0,0,0,136,0,136,0,0,0,131,137,133,134,136,131,132,135,137,133,134,136,131,132,135,132,137,131,132,133,134,131,131,135,133,134,136,131,132,135,137,133,134,136,131,132,135,137,133,134,136,131,132,135,137,133,134,131,137,132,132,132,132,132,132,132,132,132,132,137,133,134,136,131,132,135,137,133,134,136,131,132,135,132,137,133,134,136,131,132,135,133,137,133,134,136,131,132,135,0,0,138,0,0,0,0,138,0,138,0,0,0,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,138,139,140,141,142,143,144,145,139,140,141,142,143,144,145,139,140,141,142,143,144,145,145,0,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,139,139,140,140,141,141,142,142,143,143,144,144,145,138,139,140,141,142,143,144,145,139,139,140,140,141,141,142,142,143,143,144,144,145,138,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,0,0,0,0,0,0,0,0,0,0,0,0,0,138,139,140,141,142,143,144,145,0,0,0,0,0,0,0,0,0,154,17,146,154,17,146,0,146,146,146,163,146,124,148,146,148,146,124,124,154,154,154,154,154,154,154,154,154,154,154,146,154,17,17,146,154,17,146,146,17,17,146,0,0,154,154,17,146,154,17,146,17,0,0,146,146,17,154,17,146,154,17,146,154,17,146,154,17,146,154,154,0,0,0,159,159,159,159,159,0,159,159,159,159,159,0,0,0,0,0,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,226,227,226,0,0,0,0,226,0,0,227,226,0,0,166,226,226,228,228,228,0,0,228,229,0,0,226,111,230,111,0,226,226,226,0,226,226,161,226,230,113,111,161,166,162,164,230,113,111,161,166,162,164,226,111,162,164,111,162,164,161,226,231,227,226,162,164,231,227,226,111,164,111,111,161,166,166,162,164,230,113,111,161,166,166,162,162,164,164,113,228,113,111,164,231,227,0,230,113,111,161,166,162,164,229,161,231,226,161,161,226,113,166,230,0,164,166,231,227,111,162,164,166,231,227,230,113,111,161,166,162,164,230,113,111,161,166,162,164,164,230,113,111,161,166,162,164,231,227,226,226,230,113,111,161,166,162,164,0,0,120,168,120,168,120,120,168,120,168,120,168,120,120,168,168,120,168,120,168,120,168,120,168,120,168,120,0,114,0,0,0,0,29,29,29,29,169,29,29,29,29,29,29,29,29,29,29,29,169,29,29,29,29,29,29,0,0,0,0,0,232,233,171,79,171,79,79,79,171,79,171,0,171,79,171,79,232,233,232,233,232,233,79,171,79,171,79,171,79,171,79,0,172,172,172,172,172,0,172,172,172,172,172,172,172,172,172,172,0,0,0,0,0,0,0,0,0,174,174,180,181,179,165,173,175,176,174,180,181,179,165,173,175,176,174,174,176,165,173,165,173,180,174,174,175,176,179,165,174,175,176,176,176,180,175,176,181,181,179,165,173,175,175,176,176,174,180,181,179,165,173,175,176,174,174,174,174,0,180,165,173,165,180,181,179,165,173,175,176,174,174,176,180,173,179,179,165,165,173,165,175,176,175,176,174,180,165,174,173,179,176,176,176,176,176,181,174,174,175,176,174,179,165,165,0,0,165,165,0,165,173,181,175,176,180,181,179,165,173,175,176,174,180,181,179,165,173,175,176,174,175,176,174,174,174,174,180,181,179,165,173,175,176,174,180,181,179,165,173,175,176,174,174,174,174,0,0,0,0,174,175,176,175,176,174,176,175,176,174,0,0,0,0,0,0,0,193,194,193,194,193,194,193,194,193,194,193,193,193,193,194,193,193,194,193,194,194,193,194,193,193,193,193,193,193,194,193,193,194,193,193,194,194,193,193,193,193,193,194,193,193,194,194,193,194,193,194,193,194,193,0,0,200,199,200,199,200,199,199,199,199,199,199,199,199,199,199,199,199,199,200,199,199,199,199,199,199,200,199,200,199,199,199,199,199,199,200,199,199,200,199,200,199,199,199,199,199,199,199,200,199,200,199,200,199,200,199],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[]],[[],2],[[],3],[2,4],[[]],[2],[2],[[],5],0,[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,7],8],0,[[],[[12,[[11,[9,10]]]]]],[2,2],[13,13],[1,1],[14,14],[6,6],[[]],[[]],[[]],[[]],[[]],[[2,2],15],[[13,13],15],[[1,1],15],[[6,6],15],0,[16,[[12,[2,17]]]],[16,[[12,[13,17]]]],[16,[[12,[1,17]]]],[16,[[12,[14,17]]]],[16,[[12,[6,17]]]],[2,[[12,[5,18]]]],[13,[[12,[5,18]]]],[1,[[12,[5,18]]]],[14,[[12,[5,18]]]],[6,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],0,0,[[],5],[2],[20,[[12,[2]]]],[[],[[12,[13]]]],[[],[[12,[1]]]],[[],[[12,[14]]]],[[],[[12,[6]]]],[[1,1]],0,0,0,0,0,[[]],[[]],[[2,2],21],[[13,13],21],[[1,1],21],[[14,14],21],[[6,6],21],[[2,22],23],[[2,22],23],[[2,22],23],[[13,22],23],[[13,22],23],[[1,22],23],[[1,22],23],[[14,22],23],[[14,22],23],[[24,22],23],[[24,22],23],[[6,22],23],0,[4,2],[[]],[25,13],[[]],[8,1],[[]],[[]],[26,24],[[]],[27,24],[[]],[[],[[12,[28]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[[]],[[],2],[4,2],[[]],[[],2],[7,1],[7,1],[[],[[12,[31]]]],[[],[[12,[2,31]]]],[[],[[12,[2,31]]]],[32,[[12,[2]]]],[32,[[12,[1]]]],[[32,33],[[12,[1,24]]]],[[]],[2],[13],[1],[14],[6],0,[[2,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],0,[[],5],0,0,0,[7,1],0,[[1,7]],0,[[],5],0,[[2,2],[[35,[15]]]],[[13,13],[[35,[15]]]],[[1,1],[[35,[15]]]],[[6,6],[[35,[15]]]],0,[36],[[1,1]],[[1,1]],[7,1],0,[[1,1],1],[[2,37],12],[13,12],[1,12],[14,12],[6,12],0,[24,[[35,[38]]]],[[1,1]],[[1,1]],[39,1],0,[[],5],0,0,[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],41],[[]],[[]],[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[13,5],[[],5],[[],[[12,[3,42]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[35,[44]]],[[46,[45]]]],[44,[[46,[45]]]],[[]],[[]],[[]],[[]],[[],[[46,[47]]]],[[[35,[44]],[35,[44]]],[[46,[47]]]],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,0,[[]],[[]],[[48,22],23],[[48,22],23],[[]],[[]],[36],[[],41],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[49,5]],[[50,51],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[52]],[54,[52]]],[[55,[52]]]],[56,[[46,[57]]]],0,0,[58,58],[59,59],[60,60],[61,61],[62,62],[50,50],[63,63],[56,56],[64,64],[65,65],[66,66],[[[55,[[0,[67,52]]]]],[[55,[[0,[67,52]]]]]],[[[68,[67]]],[[68,[67]]]],[69,69],[[[54,[[0,[67,52]]]]],[[54,[[0,[67,52]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[59,[[12,[5,18]]]],[19,[[12,[5,18]]]],0,0,[[],50],[[],[[12,[58]]]],[[],[[12,[59]]]],[[],[[12,[60]]]],[[],[[12,[61]]]],[[],[[12,[62]]]],[[],[[12,[63]]]],[[],[[12,[56]]]],[[],[[12,[64]]]],[[],[[12,[65]]]],[[],[[12,[66]]]],[[],[[12,[[54,[52]]]]]],[20,12],0,[[],62],0,[[58,58],21],[[59,59],21],[[60,60],21],[[61,61],21],[[62,62],21],[[56,56],21],[[64,64],21],[[[54,[[0,[70,52]]]],54],21],0,0,0,0,[[58,22],23],[[59,22],23],[[60,22],23],[[61,22],23],[[62,22],23],[[50,22],23],[[63,22],23],[[56,22],23],[[64,22],23],[[65,22],23],[[66,22],23],[[[55,[[0,[71,52]]]],22],23],[[[68,[71]],22],23],[[69,22],23],[[[54,[[0,[71,52]]]],22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[58,58,58],64],[[]],[[]],[[]],[[]],[[]],[[]],[66,46],[66,[[46,[[54,[72]]]]]],[66,[[46,[[54,[73]]]]]],[[]],[32,[[12,[62]]]],0,[[[53,[52]]],52],[50,[[46,[51]]]],[[60,[75,[74]]],46],[[60,76],[[46,[77]]]],[[[53,[52]],[11,[52]]],4],[59],[62],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[58,74],21],[[56,74],21],[[],74],[58,74],[56,74],0,0,0,[[11,5,13],49],0,[[52,13,[11,[13]],5]],[[5,13],49],[[74,78],58],[[],50],[[74,78],56],0,0,0,0,0,0,0,0,0,[[49,76,52,79],[[81,[[80,[[68,[52]]]]]]]],[[49,76,79],[[81,[[80,[[68,[72]]]]]]]],[[49,76,79],[[81,[[80,[[68,[73]]]]]]]],[13,82],0,0,0,[58,12],[59,12],[60,12],[61,12],[62,12],[63,12],[56,12],[64,12],[65,12],[66,12],[[[54,[52]]],12],[37,12],0,[[[53,[52]],13,[54,[52]]],[[55,[52]]]],[[[68,[73]]]],0,[[[68,[72]]],69],[[],[[11,[40,10]]]],[[],56],[[],64],[[],56],[[],66],[[[54,[73]]],66],[[[54,[72]]],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,41],[64,[[46,[83]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[35,[62]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,[13,46],[58,78],[56,78],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,58],0,[[]],[[]],[20,[[12,[[11,[52]]]]]],[20,[[12,[[84,[52]]]]]],[[]],[[]],[37,12],[[[84,[52]],37],12],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,86,87],[[12,[85,88]]]],[[],89],[[],89],[[],89],[[],89],[85,90],[85,90],[74,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[76,91],[76,92],[76,93],[76,94],[85,85],[74,74],[95,95],[91,91],[92,92],[93,93],[94,94],[32,74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,85],15],[[74,74],15],[16,[[12,[85,17]]]],[16,[[12,[91,17]]]],[16,[[12,[92,17]]]],[16,[[12,[93,17]]]],[16,[[12,[94,17]]]],[16,[[12,[96,17]]]],[16,[[12,[97,17]]]],[85,[[12,[5,18]]]],[91,[[12,[5,18]]]],[92,[[12,[5,18]]]],[93,[[12,[5,18]]]],[94,[[12,[5,18]]]],[96,[[12,[5,18]]]],[97,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[85,98],[99,[[12,[17]]]],[[99,76],[[12,[94,17]]]],[[95,99,76],[[12,[94,17]]]],[99,[[12,[17]]]],[[99,76],[[12,[91,17]]]],[[95,99,76],[[12,[91,17]]]],[99,[[12,[17]]]],[[99,76],[[12,[92,17]]]],[[95,99,76],[[12,[92,17]]]],[99,[[12,[17]]]],[[99,76],[[12,[93,17]]]],[[95,99,76],[[12,[93,17]]]],[95],[91],[92],[93],[94],[91],[92],[93],[94],[[],[[12,[85]]]],[[],[[12,[74]]]],[85,100],[[],7],[[],7],[[],7],[[],7],0,[[85,85],21],[[74,74],21],[[91,91],21],[[92,92],21],[[93,93],21],[[94,94],21],[91,21],[92,21],[93,21],[94,21],0,[[85,22],[[12,[101]]]],[[74,22],23],[[74,22],23],[[95,22],23],[[91,22],23],[[91,22],23],[[92,22],23],[[92,22],23],[[93,22],23],[[93,22],23],[[94,22],23],[[94,22],23],[[]],[98,85],[[]],[32,74],[[]],[[]],[[],95],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[86,[[12,[85,88]]]],[[86,32],[[12,[85,88]]]],[32,[[12,[85,88]]]],[[86,102],85],[32,74],[32,[[12,[85]]]],[[[0,[103,104,105]]],95],[76,91],[76,92],[76,93],[76,94],[85],[91],[92],[93],[94],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,76],[92,76],[93,76],[94,76],[86,85],[[],85],0,0,0,0,[[85,85],[[35,[15]]]],[[74,74],[[35,[15]]]],[85,106],[85],[85,102],[85,12],[74,12],0,[[85,107],108],0,[[85,86,[35,[109]]],98],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[85,86,87],[[12,[88]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85],0,0,0,0,0,0,[[],89],[[]],[[]],[110,110],[[]],[[],95],[[]],[110],[[110,22],23],[[]],[[],110],[[],111],[[]],[[],74],[[],111],[[]],[[],12],[[],12],[[],43],[[]],[16,[[12,[17]]]],0,0,0,0,0,[[],[[11,[[113,[112]]]]]],[[114,115,91,116],[[119,[[118,[117]]]]]],[[115,92,14],[[119,[[118,[117]]]]]],[[],89],[[],89],[[115,120],[[119,[[118,[117]]]]]],[115,[[119,[[118,[117]]]]]],[[115,11],[[119,[[118,[117]]]]]],[[]],[[]],[[]],[[]],[[],116],[[],116],[112,112],[[]],[[115,76],[[119,[[118,[117]]]]]],[[],95],[116],[112],[116],[[121,115],[[119,[[118,[117]]]]]],[[116,22],23],[[112,22],23],[[],116],[[]],[[],112],[[]],[[]],[[]],[[115,14,76],[[119,[[118,[117]]]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[114,115,116,91],[[119,[[118,[117]]]]]],[[115,92],[[119,[[118,[117]]]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[122,[35,[5]]],[[46,[123]]]],[[],[[119,[[118,[117]]]]]],[122,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[[]],0,[118,[[119,[[118,[117]]]]]],[[[118,[[125,[[0,[104,124]]]]]]],[[119,[[118,[117]]]]]],[115,46],0,0,[115],[115],[126],[122],[115,39],[[122,22],23],[[[129,[[0,[71,127,128]]]],22],23],[[[123,[71]],22],23],[[30,22],23],[[30,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[46,[30]]]],[16,[[46,[30]]]],[115,[[46,[35]]]],0,0,[115,[[46,[35]]]],[115,[[46,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[115,[0,[104,124]]],[[125,[[0,[104,124]]]]]],[[[118,[130]],16],115],[[127,16],122],[[[0,[38,104,105]]],30],0,[36],[[],[[119,[[118,[117]]]]]],[[[125,[[0,[104,124]]]]],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[[125,[[0,[104,124]]]]],[[119,[[118,[117]]]]]],[[[11,[40]]],[[119,[[118,[117]]]]]],[[[125,[[0,[104,124]]]],[11,[40]]],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[[125,[[0,[104,124]]]]],[[119,[[118,[117]]]]]],[115,46],[115,[[46,[35]]]],[[],[[119,[[118,[117]]]]]],[[[125,[[0,[104,124]]]]],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[[125,[[0,[104,124]]]]],[[119,[[118,[117]]]]]],0,[[],[[11,[40]]]],[[],[[11,[40]]]],[[]],[[],41],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[115,76],115],[[5,5],30],[[40,40],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[131,[[119,[[118,[117]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[118,[132]]],[[119,[[118,[117]]]]]],0,0,0,[[],133],[[],134],[[],131],[131],[[135,135],21],[[133,22],23],[[134,22],23],[[136,22],23],[[131,22],23],[[132,22],23],[[135,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],131],[137,35],0,0,0,[132,[[119,[[118,[117]]]]]],[132,[[119,[[118,[117]]]]]],[[132,[11,[40]]],[[119,[[118,[117]]]]]],[132,[[119,[[118,[117]]]]]],[132,[[119,[[118,[117]]]]]],0,[132,[[119,[[118,[117]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[[]],[16,[[12,[139,17]]]],[16,[[12,[140,17]]]],[16,[[12,[141,17]]]],[16,[[12,[142,17]]]],[16,[[12,[143,17]]]],[16,[[12,[144,17]]]],[16,[[12,[145,17]]]],[139,[[12,[5,18]]]],[140,[[12,[5,18]]]],[141,[[12,[5,18]]]],[142,[[12,[5,18]]]],[143,[[12,[5,18]]]],[144,[[12,[5,18]]]],[145,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[145,145],21],[122],[[139,22],23],[[140,22],23],[[141,22],23],[[142,22],23],[[143,22],23],[[144,22],23],[[145,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[[146,[67]]],[[146,[67]]]],[[]],[[[146,[147]],146],15],[16,[[12,[17]]]],[16,[[12,[146,17]]]],[[],[[12,[5,18]]]],[148,[[12,[5,18]]]],[146,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[],[[12,[[11,[40]],18]]]],[[],[[46,[4]]]],0,[21,[[12,[18]]]],[149,[[12,[18]]]],[150,[[12,[18]]]],[151,[[12,[18]]]],[152,[[12,[18]]]],[[],[[12,[18]]]],[25,[[12,[18]]]],[153,[[12,[18]]]],[7,[[12,[18]]]],[40,[[12,[18]]]],[[[146,[70]],146],21],[154,155],[[17,22],23],[[17,22],23],[[[146,[71]],22],23],[[]],[[]],[[]],[29,[[12,[30]]]],[[[0,[38,104,105]]],17],[32,17],[[[146,[156]]]],0,0,0,[[]],[[]],[[]],[[],154],[157,17],[[[146,[158]],146],[[35,[15]]]],[36],0,0,[[],[[11,[40,10]]]],[[]],[[],41],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[]],[[]],[[]],[154,[[155,[5]]]],[[],[[12,[18]]]],0,0,0,[[]],[[]],[[159,22],23],[[]],[[]],[[],21],[[],41],[[],12],[[],12],[[],43],[[]],0,[20,[[12,[[11,[40]]]]]],[[],12],0,0,[[]],[[]],[[],[[12,[160]]]],[[160,160],21],[[160,22],23],[[]],0,[[]],[160,12],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[11,[113]]]],[[114,115],[[119,[[118,[117]]]]]],[[115,14],[[119,[[118,[117]]]]]],0,[[115,120],[[119,[[118,[117]]]]]],[115,[[119,[[118,[117]]]]]],[41,161],[[115,11],[[119,[[118,[117]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[39,104]]]],[111,111],[162,162],[[[164,[[0,[67,124,163]]]]],[[164,[[0,[67,124,163]]]]]],[[]],[[]],[[]],0,[115,[[119,[[118,[117]]]]]],[[],95],[[]],[[]],[162],[[],[[12,[[164,[[0,[124,163]]]]]]]],[[79,13,76,50,165],[[119,[[118,[117]]]]]],[[79,13,76,50,165],[[119,[[118,[117]]]]]],[[121,115],[[119,[[118,[117]]]]]],[[111,111],21],[[[164,[[0,[70,124,163]]]],164],21],0,[[111,22],23],[[161,22],23],[[166,22],23],[[166,22],23],[[162,22],23],[[[164,[[0,[71,124,163]]]],22],23],[[]],[[]],[[]],[[]],[157,166],[[]],[[]],[[],162],[[],[[164,[[0,[124,163]]]]]],[[]],[[],113],[115,[[119,[[118,[117]]]]]],0,[111],[[[164,[[0,[156,124,163]]]]]],[[64,122,167,165],[[119,[[118,[117]]]]]],[[64,122,167,165],[[119,[[118,[117]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],74],[[],74],[[150,41],161],[41,161],[[115,14],[[119,[[118,[117]]]]]],0,[36],0,0,[[[164,[[0,[124,163]]]]],12],[166,[[35,[38]]]],[78,[[46,[63]]]],[78,[[46,[63]]]],[[]],[[]],[[]],[[],41],[50,[[167,[13,64]]]],[50,[[167,[13,64]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[164,[[0,[124,163]]]],16],[[12,[[0,[124,163]],17]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[13,64],46],[[13,64],46],[[114,115],[[119,[[118,[117]]]]]],[115,[[119,[[118,[117]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[120,115]],[[]],[[]],[[]],[[]],[[],120],[[168,22],23],[[120,22],23],[[]],[[]],[[]],[[]],0,0,0,[120,168],[[],41],[[],41],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,[[76,41,78],[[119,[[118,[117]]]]]],0,0,0,0,[[]],[[]],[[[29,[67]]],[[29,[67]]]],[[]],[169,16],[[[29,[112]]],16],[[],29],[[[29,[71]],22],23],[[]],[[[167,[76]]],29],[170,29],[[29,76],35],[[29,76]],[[]],[29,39],[170,29],[[169,76,112]],[[[29,[112]],76,112]],[[]],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,[13,[[119,[[118,[117]]]]]],[13,[[119,[[118,[117]]]]]],[[]],[[]],[[]],[[]],[[[79,[67,67]]],[[79,[67,67]]]],[[]],[171],[79],[171],0,[[]],[[]],[[]],[[]],[[],171],[[],79],[[],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[],[[119,[[118,[117]]]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,[[172,13],[[119,[[118,[117]]]]]],[[]],[[]],[[]],[[]],[[13,13,5,173]],0,[172,[[119,[[118,[117]]]]]],0,[172,[[119,[[118,[117]]]]]],0,[[],12],[[],12],0,[[],43],[[]],0,0,0,0,0,0,0,0,[[]],[174,175],[174,176],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[7,177,177,178],7],[165,165],[173,173],[[]],[[]],0,[[],174],[153,174],0,0,[[],179],[[],165],[[],174],[175],[176],[176],[176,175],[180],[175],[176],[[181,22],23],[[181,22],23],[[179,22],23],[[165,22],23],[[173,22],23],[[175,22],[[12,[101]]]],[[175,22],[[12,[101]]]],[[176,22],[[12,[101]]]],[[176,22],[[12,[101]]]],[[174,22],[[12,[101]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[182],[[],174],[174],0,0,0,0,[165],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[174],[176,183],[180,21],[173,21],0,0,[165,46],[165,173],[173,184],[165,165],[175,175],[176,183],0,0,0,0,[[],165],[[],174],[[173,[118,[185]]]],0,[7],[[]],0,[7],[[]],[36],[174,117],[[[186,[174]]],117],0,0,0,[179],[165],[165,46],[187],[188],[[165,[75,[41]],[0,[185,104]]]],[[165,[75,[41]],185]],[187,[[12,[181]]]],[[]],[[]],[[],41],[[],41],[[],41],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[175,[[12,[175,175]]]],[176,[[12,[183,176]]]],[174,[[12,[175,189]]]],[[[186,[174]]],[[12,[190,189]]]],[174,[[12,[176,189]]]],[[[186,[174]]],[[12,[191,189]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,174],[174,117],[[[186,[174]]],117],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,[187],[188],[[],[[35,[192]]]],[[],[[35,[192]]]],[187,[[12,[181]]]],0,0,[193,167],[[]],[[]],[[]],[[]],[194,194],[[[193,[67]]],[[193,[67]]]],[[]],[[]],[[194,194],15],[16,[[12,[193,17]]]],[193,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[],193],[[],[[12,[194]]]],[[],[[12,[193]]]],[[193,1],[[195,[1]]]],[[194,194],21],[[[193,[70]],193],21],[[194,22],23],[[194,22],23],[[[193,[71]],22],23],[[]],[[]],[29,[[12,[30]]]],[170,193],[[193,1],35],[[193,1],35],[[193,1]],[194],[[[193,[156]]]],[[193,1],35],[[]],[[]],[193,39],[[194,194],[[35,[15]]]],[194,12],[193,12],[[193,193],21],[[193,1],[[12,[194]]]],[193,196],[[],[[11,[40,10]]]],[[]],[[]],[[[193,[197]]],[[193,[198]]]],[[],41],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,0,0,[[199,193],[[12,[194]]]],[[]],[[]],[[]],[[]],[[[199,[67]]],[[199,[67]]]],[[]],[16,[[12,[199,17]]]],[199,[[12,[5,18]]]],[19,[[12,[5,18]]]],[199,5],[199,5],[[],199],[[],[[12,[199]]]],[[[199,[70]],199],21],[[199,170]],[[[199,[71]],22],23],[[]],[[]],[29,[[12,[30]]]],[170,199],[[199,1],[[35,[11]]]],[[199,1],[[35,[11]]]],[[[199,[156]]]],[[]],[[]],[[]],[199],[199,[[0,[39,196]]]],[199,21],[199,39],[199,[[0,[39,196]]]],[199,39],0,[199,5],[199,[[12,[199]]]],[11,200],[[[167,[1,11]]],199],[200,35],[[1,199,193,25],[[193,[5]]]],[[199,1],[[35,[199]]]],[199,12],[[199,199],21],[[],[[11,[40,10]]]],[[]],[199,1],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]]],"p":[[3,"Amount"],[3,"TransactionId"],[3,"BitSlice"],[3,"Hash"],[15,"usize"],[3,"Feerate"],[15,"u64"],[3,"Amount"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[3,"PeerId"],[3,"OutPoint"],[4,"Ordering"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"ParseAmountError"],[15,"u16"],[3,"ParseIntError"],[4,"ParseAmountError"],[4,"Error"],[3,"ModuleRegistry"],[4,"DecodingError"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"SliceIndex"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[8,"Iterator"],[15,"u8"],[3,"String"],[4,"BitSpanError"],[3,"TypeId"],[3,"OsStr"],[3,"Url"],[6,"Result"],[4,"BitcoindRpcBackend"],[3,"Cancelled"],[3,"DkgRunner"],[3,"ConfigGenParams"],[8,"ModuleGenParams"],[8,"DkgGroup"],[3,"Dkg"],[4,"DkgMessage"],[4,"DkgStep"],[3,"ClientModuleConfig"],[8,"TypedClientModuleConfig"],[3,"JsonWithKind"],[3,"ApiEndpoint"],[3,"ClientConfig"],[3,"ConfigResponse"],[3,"FederationId"],[3,"ModuleConfigResponse"],[3,"ServerModuleConfig"],[4,"DkgPeerMsg"],[4,"SupportedDkgMessage"],[8,"Clone"],[3,"DkgKeys"],[3,"ThresholdKeys"],[8,"PartialEq"],[8,"Debug"],[3,"G1Projective"],[3,"G2Projective"],[3,"ModuleKind"],[8,"Into"],[6,"ModuleInstanceId"],[8,"DeserializeOwned"],[4,"Value"],[3,"MuxPeerConnections"],[3,"HashMap"],[6,"Cancellable"],[3,"Scalar"],[8,"TypedServerModuleConfig"],[3,"Wrap"],[3,"KeyPair"],[3,"Secp256k1"],[3,"Scalar"],[4,"Error"],[8,"Any"],[3,"KeyPair"],[3,"DynInput"],[3,"DynOutput"],[3,"DynOutputOutcome"],[3,"DynModuleConsensusItem"],[3,"DynDecoder"],[3,"Signature"],[3,"Transaction"],[3,"TweakedKeyPair"],[8,"Read"],[3,"DisplaySecret"],[3,"Error"],[3,"SecretKey"],[8,"Decoder"],[8,"Send"],[8,"Sync"],[3,"PublicKey"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[3,"DynClientModule"],[3,"TransactionItemAmount"],[3,"DynServerModule"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"DynVerificationCache"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Audit"],[3,"HashSet"],[3,"Database"],[4,"AutocommitError"],[8,"Encodable"],[3,"IsolatedDatabaseTransaction"],[3,"CommitTracker"],[8,"IDatabase"],[8,"Sized"],[3,"DatabaseInner"],[8,"IDatabaseTransaction"],[3,"MemDatabase"],[3,"MemTransaction"],[3,"DatabaseInsertOperation"],[3,"DatabaseDeleteOperation"],[3,"DummyError"],[4,"DatabaseOperation"],[3,"MemDbIter"],[4,"TestDbKeyPrefix"],[3,"TestKey"],[3,"DbPrefixTestPrefix"],[3,"AltTestKey"],[3,"AltDbPrefixTestPrefix"],[3,"PercentTestKey"],[3,"PercentPrefixTestPrefix"],[3,"TestVal"],[3,"SerdeEncodable"],[8,"Ord"],[8,"DynEncodable"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u32"],[3,"CountWrite"],[6,"Result"],[8,"Hash"],[3,"Error"],[8,"PartialOrd"],[3,"AbbreviateHexBytes"],[3,"Data"],[3,"ApiError"],[3,"DynModuleGen"],[8,"Decodable"],[3,"SerdeModuleEncoding"],[3,"TaskGroup"],[4,"ModuleError"],[3,"BTreeMap"],[3,"AuditItem"],[6,"ServerModuleRegistry"],[8,"IntoIterator"],[3,"PeerConnections"],[3,"FakePeerConnections"],[3,"TaskHandle"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"NodeId"],[3,"ChannelUsage"],[3,"TaskGroupInner"],[3,"TaskPanicGuard"],[3,"Elapsed"],[15,"never"],[3,"RwLockMappedWriteGuard"],[3,"Receiver"],[8,"FnOnce"],[3,"Arc"],[3,"Duration"],[3,"Instant"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"JoinHandle"],[3,"Tiered"],[3,"InvalidAmountTierError"],[4,"Entry"],[8,"DoubleEndedIterator"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[3,"TieredMulti"],[3,"TieredMultiZip"],[8,"BitcoinHash"],[8,"NumPeers"],[4,"BitcoinRpcBackendType"],[8,"SGroup"],[8,"ISupportedDkgMessage"],[8,"TypedServerModuleConsensusConfig"],[4,"FinalizationError"],[8,"IInput"],[8,"IOutput"],[8,"IOutputOutcome"],[8,"IModuleConsensusItem"],[8,"IDecoder"],[8,"ClientModule"],[8,"IClientModule"],[8,"IServerModule"],[8,"IVerificationCache"],[8,"DatabaseKeyPrefixConst"],[8,"DatabaseKey"],[8,"DatabaseValue"],[8,"DatabaseKeyPrefix"],[8,"SerializableDatabaseValue"],[13,"ClosureError"],[13,"CommitFailed"],[13,"WrongPrefix"],[13,"WrongLength"],[8,"ServerModule"],[8,"ModuleGen"],[8,"TypedApiEndpoint"],[8,"IntoModuleError"],[3,"InputMeta"],[8,"IModuleGen"],[8,"IPeerConnections"],[8,"IMuxPeerConnections"]]},\
"fedimint_bitcoind":{"doc":"","t":[3,8,6,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,12,11,11,11,11,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,3,3,3,17,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DynBitcoindRpc","IBitcoindRpc","Result","RetryClient","backend_type","backend_type","bitcoincore_rpc","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","fmt","fmt","from","from","from","get_block","get_block","get_block_hash","get_block_hash","get_block_height","get_block_height","get_fee_rate","get_fee_rate","get_network","get_network","inner","into","into","new","retry_call","sleep","submit_transaction","submit_transaction","task_handle","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","was_transaction_confirmed_in","was_transaction_confirmed_in","Client","ElectrumClient","ErrorReporting","RPC_VERIFY_ALREADY_IN_CHAIN","addr","backend_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","fmt","fmt","fmt","from","from","from","from_url_to_url_auth","get_block","get_block","get_block_hash","get_block_hash","get_block_height","get_block_height","get_fee_rate","get_fee_rate","get_network","get_network","inner","into","into","into","make_bitcoin_rpc_backend","make_bitcoind_rpc","make_electrum_rpc","new","new","submit_transaction","submit_transaction","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","was_transaction_confirmed_in"],"q":["fedimint_bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_bitcoind::bitcoincore_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Trait that allows interacting with the Bitcoin blockchain","<code>Result&lt;T, Error&gt;</code>","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","<code>true</code> if it’s real-bitcoin (not electrum) backend and …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the block with the given hash","","Returns the block hash at a given height","","Returns the current block height","","Estimates the fee rate for a given confirmation target. …","","Returns the Bitcoin network the node is connected to","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Submits a transaction to the Bitcoin network","","","","","","","","","","","","Check if a transaction was included in a given (only …","","","","Wrapper around <code>bitcoincore_rpc::Client</code> logging failures","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,27,2,0,3,2,3,2,3,3,3,3,2,3,3,2,27,2,27,2,27,2,27,2,27,2,2,3,2,2,2,2,27,2,2,3,3,2,3,2,3,2,3,2,27,2,0,0,0,0,19,18,18,19,23,18,19,23,19,18,19,23,18,19,23,0,18,23,18,23,18,23,18,23,18,23,19,18,19,23,0,0,0,18,19,18,23,18,19,23,18,19,23,18,19,23,18,19,23,18],"f":[0,0,0,0,[[],1],[2,1],0,[[]],[[]],[[]],[[]],[3,3],[[]],[3],[[3,4],5],[[[2,[6]],4],5],[[],3],[[]],[[]],[7,[[10,[[9,[8]]]]]],[[2,7],[[10,[[9,[8]]]]]],[11,[[10,[[9,[8]]]]]],[[2,11],[[10,[[9,[8]]]]]],[[],[[10,[[9,[8]]]]]],[2,[[10,[[9,[8]]]]]],[12,[[10,[[9,[8]]]]]],[[2,12],[[10,[[9,[8]]]]]],[[],[[10,[[9,[8]]]]]],[2,[[10,[[9,[8]]]]]],0,[[]],[[]],[13,2],[2,14],0,[15,[[10,[[9,[8]]]]]],[[2,15],[[10,[[9,[8]]]]]],0,[[]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[]],[[]],[[15,11],[[10,[[9,[8]]]]]],[[2,15,11],[[10,[[9,[8]]]]]],0,0,0,0,0,[18,1],[[]],[[]],[[]],[[]],[[]],[[]],[[19,20],[[22,[21]]]],[[18,4],5],[[[19,[6]],4],5],[[[23,[6]],4],5],[[]],[[]],[[]],[24,14],[[18,7],[[10,[[9,[8]]]]]],[[23,7],[[10,[[9,[8]]]]]],[[18,11],[[10,[[9,[8]]]]]],[[23,11],[[10,[[9,[8]]]]]],[18,[[10,[[9,[8]]]]]],[23,[[10,[[9,[8]]]]]],[[18,12],[[10,[[9,[8]]]]]],[[23,12],[[10,[[9,[8]]]]]],[18,[[10,[[9,[8]]]]]],[23,[[10,[[9,[8]]]]]],0,[[]],[[]],[[]],[[25,13],[[14,[3]]]],[[24,13],[[14,[3]]]],[[24,13],[[14,[3]]]],[24,[[14,[18]]]],[26,19],[[18,15],[[10,[[9,[8]]]]]],[[23,15],[[10,[[9,[8]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[18,15,11],[[10,[[9,[8]]]]]]],"p":[[4,"BitcoinRpcBackendType"],[3,"RetryClient"],[3,"DynBitcoindRpc"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"BlockHash"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u64"],[15,"u16"],[3,"TaskHandle"],[6,"Result"],[3,"Transaction"],[4,"Result"],[3,"TypeId"],[3,"ElectrumClient"],[3,"ErrorReporting"],[15,"str"],[8,"Deserialize"],[6,"Result"],[3,"Client"],[3,"Url"],[4,"BitcoindRpcBackend"],[3,"String"],[8,"IBitcoindRpc"]]},\
"fedimint_build":{"doc":"","t":[5],"n":["print_git_hash"],"q":["fedimint_build"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fedimint_cli":{"doc":"","t":[13,13,13,13,3,3,4,3,4,6,4,4,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,10,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlreadySpent","Api","Backup","Backup","Cli","CliError","CliErrorKind","CliNoWorkdir","CliOutput","CliResult","Command","CommandNoWorkdir","ConnectInfo","ConnectInfo","ErrorHandler","Fetch","Fetch","GeneralFailure","GeneralFederationError","IOError","Info","Info","InsufficientBalance","InvalidValue","JoinFederation","JoinFederation","ListGateways","ListGateways","LnInvoice","LnInvoice","LnPay","LnPay","NetworkError","OSError","PayRequest","PegIn","PegIn","PegInAddress","PegInAddress","PegOut","PegOut","Reissue","Reissue","Restore","SerializationError","Spend","Spend","SwitchGateway","SwitchGateway","Timeout","UntypedApiOutput","Validate","Validate","VersionHash","VersionHash","VersionHash","WaitBlockHeight","WaitBlockHeight","WaitInvoice","WaitInvoice","WipeNotes","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","coins","command","command","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","handle_command","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","invoice","kind","main","message","or_terminate","provide","raw_error","serialize","serialize","serialize","serialize","to_string","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workdir","address","all_valid","connect_info","contract_id","details","details","federation_id","federation_name","gateways","hash","id","id","invoice","issuance","joined","network","new_gateway","num_gateways","paid_in_tx","reached","token","total_amount","total_num_notes","tx_id","value","address","amount","amount","arg","bolt11","coins","connect","description","expiry_time","gap_limit","height","invoice","method","notes","pubkey","satoshis","transaction","txout_proof"],"q":["fedimint_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_cli::CliOutput","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_cli::Command","","","","","","","","","","","","","","","","",""],"d":["","Send direct method call to the API, waiting for all peers …","","Upload the (encrypted) snapshot of mint notes to federation","","","","","","","","","","Config enabling client to establish websocket connection …","","","Fetch (re-)issued notes and finalize issuance process","","","","","Display wallet info (holdings, tiers)","","","","Join a federation using it’s ConnectInfo","","List registered gateways","","Create a lightning invoice to receive payment via gateway","","Pay a lightning invoice via a gateway","","","","","Issue tokens in exchange for a peg-in proof (not yet …","","Generate a new peg-in address, funds sent to it can later …","","Withdraw funds from the federation","","Reissue tokens received from a third party to avoid double …","Restore the previously created backup of mint notes (with …","","","Prepare notes to send to a third party as a payment","","Switch active gateway","","","","Validate tokens without claiming them (only checks if …","","Print the latest git commit hash this bin. was build with","Print the latest git commit hash this bin. was build with","","Wait for the fed to reach a consensus block height","","Wait for incoming invoice to be paid","Wipe the notes data from the DB. Useful for testing backup …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working directory of the client containing the config …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","JSON args that will be serialized and send with the request","","","","","","The amount of nonces to look ahead when scanning epoch …","","","","","node public key for a gateway","","",""],"i":[3,19,6,19,0,0,0,0,0,0,0,0,6,19,0,6,19,3,3,3,6,19,3,3,6,19,6,19,6,19,6,19,3,3,0,6,19,6,19,6,19,6,19,19,3,6,19,6,19,3,6,6,19,6,18,19,6,19,6,19,19,15,17,15,17,18,19,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,15,17,15,17,15,17,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,3,5,6,3,9,15,17,18,19,5,6,3,9,9,5,6,3,9,9,15,17,18,19,5,15,17,18,19,15,17,18,19,15,17,0,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,9,0,9,28,9,9,6,3,9,5,6,9,28,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,15,17,18,19,15,17,18,19,6,3,9,15,17,18,19,5,15,29,30,31,32,30,33,33,33,34,35,36,37,38,39,40,33,41,34,42,43,44,33,33,45,46,47,48,49,50,51,52,53,49,49,54,55,56,50,57,58,47,59,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],0,0,[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[5]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[6,7],8],[[3,7],8],[[9,7],8],[[9,7],8],[[5,7],8],[[]],[[]],[[3,10,[13,[[12,[11]]]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[[],[[13,[20]]]],[[],[[13,[20]]]],[[15,[22,[21]],23],[[4,[6,9]]]],[10,24],[10,24],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,[[3,10]],[25],0,[6,4],[3,4],[9,4],[5,4],[[],26],[[],26],[[3,10],[[4,[6,9]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[4,"CliErrorKind"],[4,"Result"],[3,"PayRequest"],[4,"CliOutput"],[3,"Formatter"],[6,"Result"],[3,"CliError"],[15,"str"],[8,"Error"],[3,"Box"],[4,"Option"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[3,"CliNoWorkdir"],[4,"CommandNoWorkdir"],[4,"Command"],[3,"Id"],[3,"UserClientConfig"],[3,"Client"],[3,"OsRng"],[15,"bool"],[3,"Demand"],[3,"String"],[3,"TypeId"],[8,"ErrorHandler"],[13,"PegInAddress"],[13,"Validate"],[13,"ConnectInfo"],[13,"LnPay"],[13,"Info"],[13,"ListGateways"],[13,"VersionHash"],[13,"PegIn"],[13,"Reissue"],[13,"LnInvoice"],[13,"Fetch"],[13,"JoinFederation"],[13,"SwitchGateway"],[13,"WaitInvoice"],[13,"WaitBlockHeight"],[13,"Spend"],[13,"PegOut"],[13,"UntypedApiOutput"],[13,"PegOut"],[13,"Spend"],[13,"LnInvoice"],[13,"Api"],[13,"LnPay"],[13,"Validate"],[13,"JoinFederation"],[13,"Restore"],[13,"WaitBlockHeight"],[13,"WaitInvoice"],[13,"Reissue"],[13,"SwitchGateway"],[13,"PegIn"]]},\
"fedimint_client":{"doc":"This is a sketch/frame of future “modularized” …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"fedimint_core":{"doc":"","t":[4,13,13,11,11,0,11,11,11,0,11,11,11,11,11,11,0,0,11,11,0,11,11,11,0,11,5,0,5,5,4,3,3,3,13,4,13,13,13,8,13,13,13,13,6,6,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,2,2,2,13,13,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,13,13,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,13,13,6,3,4,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,4,13,13,13,13,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CoreError","MismatchingVariant","PendingPreimage","borrow","borrow_mut","config","deref","deref_mut","drop","epoch","fmt","fmt","from","init","into","is_retryable","modules","outcome","provide","to_string","transaction","try_from","try_into","type_id","util","vzip","load_from_file","serde_binary_human_readable","deserialize","serialize","ConsensusItem","EpochOutcome","EpochOutcomeSignature","EpochOutcomeSignatureShare","EpochOutcomeSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","MissingPreviousEpoch","MissingSignature","Module","NotEnoughValidSigShares","SerdeConsensusItem","SerdeEpochHistory","SignedEpochOutcome","Transaction","UnzipConsensusItem","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_outcome_signature_share","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","items","last_hash","module","new","outcome","rejected_txs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ln","mint","wallet","Accepted","Rejected","SerdeOutputOutcome","TransactionStatus","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","hash","init","into","legacy","serialize","to_owned","try_from","try_into","type_id","vzip","epoch","outputs","LN","Mint","OutputOutcome","TryIntoOutcome","Wallet","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref_mut","drop","eq","fmt","from","from","from_bytes","hash","init","into","to_bytes","to_owned","try_from","try_into","try_into_outcome","try_into_variant","type_id","vzip","InvalidSignature","MissingSignature","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","agg_keys","agg_sign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","from","from","from_bytes","hash","init","init","inputs","into","into","legacy","new_pre_session","outputs","provide","signature","to_bytes","to_owned","to_string","try_from","try_from","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","validate_signature","vzip","vzip","fee","inputs","outputs","Input","LN","LN","Mint","Mint","Output","Transaction","Wallet","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","init","init","init","inputs","into","into","into","into_type_erased","outputs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","SanitizedUrl","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","new_borrowed","new_owned","to_string","try_from","try_into","type_id","vzip"],"q":["fedimint_core","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::config","","fedimint_core::config::serde_binary_human_readable","","fedimint_core::epochfedimint_core::modules","","","fedimint_core::outcome","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::outcome::TransactionStatus","","fedimint_core::outcome::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::transaction::TransactionError","","","fedimint_core::transaction::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::util","","","","","","","","","","","","","","","","",""],"d":["","","","","","Fedimint toplevel config","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","All the consensus items along with the <code>PeerId</code> of the peer …","","","","","Transactions from <code>items</code> that turned out to be invalid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","<code>DynInput</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Old transaction definition used by old client.","Precompute a combined public key and the hash of the given …","<code>DynOutput</code>s created as a result of the transaction","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","","","Wrapper for <code>Url</code> that only prints the scheme, domain, port …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,2,0,2,2,2,0,2,2,2,2,2,2,0,0,2,2,0,2,2,2,0,2,0,0,0,0,0,0,0,0,18,0,17,17,17,0,17,17,18,17,0,0,0,18,0,15,18,37,19,20,15,21,17,18,37,19,20,15,21,17,18,19,20,15,21,18,19,20,15,21,18,19,20,15,21,18,19,20,15,21,18,19,20,15,21,18,37,19,20,15,21,17,18,37,19,20,15,21,17,19,20,18,37,19,20,15,21,17,21,37,18,19,20,15,21,17,18,19,20,15,21,17,18,37,19,20,15,21,17,18,19,20,15,21,18,19,20,15,21,15,18,37,19,20,15,21,17,18,37,19,20,15,21,17,21,21,37,15,15,21,19,20,15,18,19,20,15,21,18,19,20,15,21,37,18,37,19,20,15,21,17,18,37,19,20,15,21,17,18,37,19,20,15,21,17,55,15,15,18,37,19,20,15,21,17,0,0,0,39,39,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,39,39,56,56,40,40,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,42,40,40,40,47,47,0,0,0,47,0,0,46,47,46,47,46,46,46,46,46,46,47,46,47,46,47,46,46,47,47,46,47,46,46,46,47,46,46,47,0,0,46,47,46,46,46,47,46,47,46,47,46,46,46,47,46,46,47,57,57,57,0,51,52,51,52,0,0,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,50,51,52,50,50,51,52,50,50,51,52,50,51,52,50,51,52,50,51,52,50,50,50,51,52,50,50,51,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53],"f":[0,0,0,[[]],[[]],0,[1],[1],[1],0,[[2,3],4],[[2,3],4],[[]],[[],1],[[]],[2,5],0,0,[6],[[],7],0,[[],8],[[],8],[[],9],0,[[]],[10,[[8,[11,12]]]],0,[13,[[8,[11]]]],[14,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,16,15],[[8,[15,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[19,19],[20,20],[15,15],[21,21],[[]],[[]],[[]],[[]],[[]],[22,[[8,[18,23]]]],[22,[[8,[19,23]]]],[22,[[8,[20,23]]]],[22,[[8,[15,23]]]],[22,[[8,[21,23]]]],[18,[[8,[1,24]]]],[19,[[8,[1,24]]]],[20,[[8,[1,24]]]],[15,[[8,[1,24]]]],[21,[[8,[1,24]]]],[25,[[8,[1,24]]]],[25,[[8,[1,24]]]],[25,[[8,[1,24]]]],[25,[[8,[1,24]]]],[25,[[8,[1,24]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[8,[19]]]],[[],[[8,[20]]]],[1],[1],[1],[1],[1],[1],[1],0,0,[[18,18],5],[[19,19],5],[[20,20],5],[[15,15],5],[[21,21],5],[[17,17],5],[[18,3],4],[[19,3],4],[[20,3],4],[[15,3],4],[[21,3],4],[[17,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[8,[27]]]],[26,[[8,[27]]]],[26,[[8,[27]]]],[26,[[8,[27]]]],[26,[[8,[27]]]],[18],[19],[20],[15],[21],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[28,[31,[29,[30,[18]]]],[33,[32]],[34,[15]]],15],0,0,[19,8],[20,8],0,[[],[[30,[35,36]]]],[[],[[30,[35,36]]]],[[],[[30,[35,36]]]],[[],[[30,[35,36]]]],[[],[[30,[35,36]]]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],37],[[15,34],[[8,[17]]]],[[15,38],[[8,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[39,39],[[]],[1],[1],[[],[[8,[39]]]],[1],[[39,39],5],[[39,3],4],[[]],[39],[[],1],[[]],0,[39,8],[[]],[[],8],[[],8],[[],9],[[]],0,0,0,0,0,0,0,[[]],[[]],[40,40],[[]],[22,[[8,[40,23]]]],[40,[[8,[1,24]]]],[25,[[8,[1,24]]]],[1],[1],[1],[[40,40],5],[[40,3],4],[[]],[41,40],[26,[[8,[27]]]],[40],[[],1],[[]],[[],[[30,[35,36]]]],[[]],[[],8],[[],8],[40,[[8,[2]]]],[40,[[8,[42,2]]]],[[],9],[[]],0,0,0,0,0,0,[[],43],[44,45],[[]],[[]],[[]],[[]],[46,46],[[]],[22,[[8,[46,23]]]],[46,[[8,[1,24]]]],[25,[[8,[1,24]]]],[1],[1],[1],[1],[1],[1],[[46,46],5],[[46,3],4],[[47,3],4],[[47,3],4],[[]],[[]],[26,[[8,[27]]]],[46],[[],1],[[],1],0,[[]],[[]],0,[44,48],0,[6],0,[[],[[30,[35,36]]]],[[]],[[],7],[[],8],[[],8],[[],8],[[],8],[46,32],[[],32],[[],9],[[],9],[[46,49],[[8,[47]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[51,51],[52,52],[[]],[[]],[[]],[22,[[8,[50,23]]]],[22,[[8,[51,23]]]],[22,[[8,[52,23]]]],[50,[[8,[1,24]]]],[51,[[8,[1,24]]]],[52,[[8,[1,24]]]],[25,[[8,[1,24]]]],[25,[[8,[1,24]]]],[25,[[8,[1,24]]]],[1],[1],[1],[1],[1],[1],[[],[[8,[51]]]],[[],[[8,[52]]]],[1],[1],[1],[[50,50],5],[[51,51],5],[[52,52],5],[[50,3],4],[[51,3],4],[[52,3],4],[[]],[[]],[[]],[26,[[8,[27]]]],[26,[[8,[27]]]],[26,[[8,[27]]]],[50],[51],[52],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[50,46],0,[51,8],[52,8],0,[[],[[30,[35,36]]]],[[],[[30,[35,36]]]],[[],[[30,[35,36]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[50,32],[[],32],[[],9],[[],9],[[],9],[[50,49],[[8,[47]]]],[[]],[[]],[[]],0,[[]],[[]],[1],[1],[1],[[53,3],4],[[53,3],4],[[]],[[],1],[[]],[54,53],[54,53],[[],7],[[],8],[[],8],[[],9],[[]]],"p":[[15,"usize"],[4,"CoreError"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Path"],[8,"DeserializeOwned"],[3,"Error"],[8,"Deserializer"],[8,"Serializer"],[3,"SignedEpochOutcome"],[3,"PublicKeySet"],[4,"EpochVerifyError"],[4,"ConsensusItem"],[3,"EpochOutcomeSignatureShare"],[3,"EpochOutcomeSignature"],[3,"EpochOutcome"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[3,"ModuleRegistry"],[4,"DecodingError"],[15,"u64"],[3,"PeerId"],[3,"Vec"],[3,"BTreeMap"],[3,"TransactionId"],[3,"BTreeSet"],[4,"Option"],[15,"u8"],[3,"Global"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[4,"TransactionStatus"],[4,"OutputOutcome"],[3,"DynOutputOutcome"],[8,"TryIntoOutcome"],[3,"XOnlyPublicKey"],[3,"Secp256k1"],[3,"Signature"],[3,"Transaction"],[4,"TransactionError"],[3,"MusigKeyAggCache"],[8,"Iterator"],[3,"Transaction"],[4,"Input"],[4,"Output"],[3,"SanitizedUrl"],[3,"Url"],[8,"IterUnzipConsensusItem"],[13,"Accepted"],[13,"UnbalancedTransaction"]]},\
"fedimint_dbdump":{"doc":"","t":[3,3,17,3,17,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,12,11,14,14,14,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","DatabaseDump","RANGES","SerdeWrapper","USAGE","arg_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dump_database","erased_serialize","filter_prefixes","flag_prefix","flag_range","fmt","fmt","from","from","from","from_encodable","get_client_data","get_consensus_data","get_lightning_data","get_ln_client_data","get_mint_client_data","get_mint_data","get_wallet_client_data","get_wallet_data","include_all_prefixes","init","init","init","into","into","into","main","prefixes","print_database","push_db_key_items","push_db_pair_items","push_db_pair_items_no_serde","ranges","read_only","serialize","serialized","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["fedimint_dbdump","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Structure to hold the deserialized structs from the …","","","","","","","","","","","","","","","","","","","","","Iterates through all the specified ranges in the database …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Iterates through each of the prefixes within the consensus …","Iterates through each of the prefixes within the lightning …","Iterates through each of the prefixes within the lightning …","Iterates through each of the prefixes within the mint …","Iterates through each of the prefixes within the mint …","Iterates through each of the prefixes within the wallet …","Iterates through each of the prefixes within the wallet …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Prints the contents of the BTreeMap to a pretty JSON string","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,2,4,8,2,4,8,2,4,8,2,4,8,2,2,4,8,2,4,8,0,2,2,8,2,4,8,2,8,4,4,4,4,4,4,4,4,4,4,8,2,4,8,2,0,4,4,0,0,0,4,4,8,4,4,8,2,4,8,2,4,8,2,4,8,2],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],[1],[1],[1],[4],[5,[[3,[6,7]]]],0,0,0,[[8,9],10],[[2,9],10],[[]],[[]],[[]],[11,8],[4],[4],[4],[4],[4],[4],[4],[4],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[4],0,0,0,0,0,[8,3],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],12],[[],12],[[],12],[[]],[[]],[[]]],"p":[[15,"usize"],[3,"Args"],[4,"Result"],[3,"DatabaseDump"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"SerdeWrapper"],[3,"Formatter"],[6,"Result"],[8,"Encodable"],[3,"TypeId"]]},\
"fedimint_derive":{"doc":"","t":[24,24,24,5,5],"n":["Decodable","Encodable","UnzipConsensus","do_not_ignore","panic_if_ignored"],"q":["fedimint_derive","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,0,0,[1,2],[1,2]],"p":[[3,"Field"],[15,"bool"]]},\
"fedimint_derive_secret":{"doc":"Scheme for deriving deterministic secret keys","t":[17,17,17,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BLS12_381_TAG","CHACHA20_POLY1305","CHILD_TAG","ChildId","DerivableSecret","SECP256K1_TAG","borrow","borrow","borrow_mut","borrow_mut","child_key","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","fmt","fmt","from","from","from_bytes","into","into","kdf","level","level","new_root","tagged_derive","to_bls12_381_key","to_bytes","to_chacha20_poly1305_key","to_owned","to_owned","to_secp_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_derive_secret","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Describes a child key of a <code>DerivableSecret</code>","Secret key that allows deriving child secret keys","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get derivation level","Derivation level, root = 0, every <code>child_key</code> increments it","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,1,2,1,1,2,1,2,1,2,2,2,2,1,2,1,2,2,1,1,1,1,1,0,1,2,1,2,1,1,2,1,2,1,2,1,2,1],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],1],[2,2],[1,1],[[]],[[]],[3,[[5,[2,4]]]],[2,[[5,[6,7]]]],[8,[[5,[6,7]]]],[[2,9],10],[[1,9],10],[[]],[[]],[11,[[5,[12]]]],[[]],[[]],0,[1,6],0,[[],1],[2],[1,13],[[],[[16,[14,15]]]],[1,17],[[]],[[]],[[1,18],19],[[],5],[[],5],[[],5],[[],5],[[],20],[[],20],[[]],[[]]],"p":[[3,"DerivableSecret"],[3,"ChildId"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"Formatter"],[6,"Result"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"Scalar"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"UnboundKey"],[3,"Secp256k1"],[3,"KeyPair"],[3,"TypeId"]]},\
"fedimint_dummy":{"doc":"","t":[3,3,3,4,3,3,3,3,3,17,17,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Dummy","DummyConfigGenParams","DummyConfigGenerator","DummyError","DummyInput","DummyOutput","DummyOutputConfirmation","DummyOutputOutcome","DummyVerificationCache","KIND","MODULE_KEY_DUMMY","SomethingDummyWentWrong","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","db","decoder","decoder","decoder","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","important_param","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","module_kind","new","output_status","output_status","provide","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DummyDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","DummyClientConfig","DummyConfig","DummyConfigConsensus","DummyConfigPrivate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_parts","init","init","init","init","into","into","into","into","kind","private","serialize","serialize","serialize","serialize","something","something","something_private","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","Example","ExampleKey","ExampleKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","get","hash","idx","init","init","init","init","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["fedimint_dummyfedimint_dummy::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_dummy::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_dummy::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Dummy module","","","","","","","","","","","","","","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create new module instance","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Contains all configuration that will be encrypted such as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,28,5,5,5,5,5,5,5,19,22,24,25,26,5,5,5,5,5,5,5,19,22,36,23,24,25,26,28,5,19,22,36,23,24,25,26,28,5,5,5,19,19,22,22,23,24,24,25,25,26,26,28,19,22,23,24,25,26,28,0,0,19,24,25,26,19,24,25,26,19,24,25,26,5,5,0,5,5,36,36,24,25,5,19,22,36,23,24,25,26,28,5,19,22,36,23,24,25,26,28,19,23,24,25,26,36,36,5,19,22,36,23,24,25,26,28,19,24,25,26,5,5,19,24,25,26,28,19,24,25,26,5,19,19,22,36,23,24,24,25,25,26,26,28,28,5,19,22,36,23,24,25,26,28,19,24,25,26,19,24,25,26,28,23,5,19,22,36,36,36,23,24,25,26,28,5,19,22,36,23,24,25,26,28,36,5,5,5,28,19,23,24,25,26,19,24,25,26,36,36,19,22,23,24,25,26,28,19,24,25,26,28,36,36,5,19,22,36,23,24,25,26,28,5,19,22,36,23,24,25,26,28,5,19,22,36,23,24,25,26,28,36,36,5,5,5,5,5,19,22,36,23,24,25,26,28,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,54,64,65,66,54,64,65,66,54,64,65,66,54,64,65,66,54,64,66,64,66,54,64,65,66,54,64,65,66,54,64,65,66,54,64,65,66,66,54,64,65,66,54,64,65,66,54,54,64,65,66,54,64,65,66,66,54,54,64,65,66,64,66,65,64,66,64,54,64,65,66,54,54,64,65,66,54,64,65,66,54,64,65,66,54,54,64,65,66,0,0,68,0,0,69,68,69,70,71,68,69,70,71,68,69,70,68,69,70,70,71,70,71,70,71,68,69,70,71,68,69,70,71,68,69,70,71,70,68,68,70,71,68,69,70,71,70,70,71,71,69,70,69,68,69,70,71,68,69,70,71,69,68,69,69,69,69,69,70,69,70,70,71,71,68,69,70,68,68,69,70,71,68,69,70,71,68,69,70,71,68,69,70,71],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[],[[4,[[2,[1]],3]]]],[5,[[4,[[2,[5]]]]]],[[5,6,7],[[10,[[9,[8]]]]]],[[6,7,11,12],[[10,[[9,[8,3]]]]]],[[7,13,14],[[10,[[9,[8,3]]]]]],[[5,7,14],[[10,[[9,[8]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[5,7,16],[[10,[[9,[8]]]]]],[[7,16],[[10,[[9,[8,3]]]]]],[[5,7],[[10,[[9,[8]]]]]],[7,[[10,[[9,[8,3]]]]]],[[5,7,4],[[10,[[9,[8]]]]]],[[7,[4,[3]]],[[10,[[9,[8,3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,[0,[17,18]]]],[[],12],0,[19,19],[20,21],[[],12],[22,22],[23,23],[20,11],[24,24],[25,25],[20,13],[26,26],[20,27],[28,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[29,[[31,[19,30]]]],[29,[[31,[24,30]]]],[29,[[31,[25,30]]]],[29,[[31,[26,30]]]],[19,[[31,[32,33]]]],[24,[[31,[32,33]]]],[25,[[31,[32,33]]]],[26,[[31,[32,33]]]],[34,[[31,[32,33]]]],[34,[[31,[32,33]]]],[34,[[31,[32,33]]]],[34,[[31,[32,33]]]],[[5,7],[[10,[[9,[8]]]]]],[[7,20],[[10,[[9,[8,3]]]]]],0,[5],[[],35],[36,37],[[],35],[[],24],[[],25],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[[],[[31,[19]]]],[[],[[31,[23]]]],[[],[[31,[24]]]],[[],[[31,[25]]]],[[],[[31,[26]]]],[[38,39,20,40,41],[[10,[[9,[8,3]]]]]],[[36,38,39,42,40,41],[[10,[[9,[8]]]]]],[32],[32],[32],[32],[32],[32],[32],[32],[32],[[],43],[[],43],[[],43],[[],43],[[44,7],[[10,[[9,[8,3]]]]]],[[5,44,7],[[10,[[9,[8]]]]]],[[19,19],45],[[24,24],45],[[25,25],45],[[26,26],45],[[28,28],45],[21,45],[11,45],[13,45],[27,45],[[5,46],47],[[19,46],47],[[19,46],47],[[22,46],47],[[36,46],47],[[23,46],47],[[24,46],47],[[24,46],47],[[25,46],47],[[25,46],47],[[26,46],47],[[26,46],47],[[28,46],47],[[28,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,[[31,[49]]]],[48,[[31,[49]]]],[48,[[31,[49]]]],[48,[[31,[49]]]],[19],[24],[25],[26],[28],0,[[],32],[[],32],[[],32],[[36,50,51,52,41],[[10,[[9,[8]]]]]],[[],32],[[50,51,52,41],[[10,[[9,[8,3]]]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[54,5],[[7,14,20],[[10,[[9,[8,3]]]]]],[[5,7,14],[[10,[[9,[8]]]]]],[55],[19,31],[23,31],[24,31],[25,31],[26,31],[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[57,[[31,[58,59]]]],[[36,57],[[60,[58]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],[[],61],[[],61],[[],61],[[],61],[40,[[52,[39,50,3]]]],[[36,40],[[52,[39,50]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[39,50],[[31,[59]]]],[[36,39,50],60],[[6,7,12,11],[[10,[[9,[8,3]]]]]],[[5,6,7],[[10,[[9,[8]]]]]],[[7,13],[[10,[[9,[8,3]]]]]],[[5,7],[[10,[[9,[8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[37,37],[[]],[[37,63],[[31,[19,30]]]],[[63,20],[[31,[21,30]]]],[[37,63],[[31,[24,30]]]],[[63,20],[[31,[11,30]]]],[[37,63],[[31,[25,30]]]],[[63,20],[[31,[13,30]]]],[[37,63],[[31,[26,30]]]],[[63,20],[[31,[27,30]]]],[[],37],[32],[32],[32],[[37,46],47],[[]],[[],32],[[]],[[]],[[],31],[[],31],[[],62],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[64,64],[65,65],[66,66],[[]],[[]],[[]],[[]],0,[64,[[31,[32,33]]]],[66,[[31,[32,33]]]],[34,[[31,[32,33]]]],[34,[[31,[32,33]]]],[32],[32],[32],[32],[32],[32],[32],[32],[[],[[31,[54]]]],[[],[[31,[64]]]],[[],[[31,[65]]]],[[],[[31,[66]]]],[32],[32],[32],[32],[[66,66],45],[[54,46],47],[[64,46],47],[[65,46],47],[[66,46],47],[[]],[[]],[[]],[[]],[[],54],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[66,53],0,[54,31],[64,31],[65,31],[66,31],0,0,0,[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[64,67],[[]],[[]],[[]],[[]],[54],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],62],[[],62],[[],62],[[],62],[[54,39],60],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,68],[69,69],[70,70],[[]],[[]],[[]],[29,[[31,[70,30]]]],[29,[[31,[71,30]]]],[70,[[31,[32,33]]]],[71,[[31,[32,33]]]],[34,[[31,[32,33]]]],[34,[[31,[32,33]]]],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[[70,70],45],[[68,46],47],[[68,46],47],[[70,46],47],[[71,46],47],[[]],[[]],[[]],[[]],[48,[[31,[49]]]],[48,[[31,[49]]]],[48,[[31,[49]]]],[48,[[31,[49]]]],[[69,32],[[72,[68]]]],[70],0,[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[],69],[69,32],0,[69,72],[69,72],[[69,32],72],[70,31],[69],[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[[],[[4,[56,3]]]],[[]],[[]],[[]],[[],61],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],62],[[],62],[[],62],[[],62],[[]],[[]],[[]],[[]]],"p":[[3,"DynServerModule"],[3,"ApiEndpoint"],[3,"Global"],[3,"Vec"],[3,"Dummy"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DynInput"],[3,"DynVerificationCache"],[3,"DynOutput"],[3,"OutPoint"],[8,"Any"],[3,"Audit"],[8,"Iterator"],[8,"Send"],[3,"DummyOutputConfirmation"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"DummyVerificationCache"],[3,"DummyConfigGenParams"],[3,"DummyInput"],[3,"DummyOutput"],[3,"DummyOutputOutcome"],[3,"DynOutputOutcome"],[4,"DummyError"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"DynDecoder"],[3,"DummyConfigGenerator"],[3,"DummyDecoder"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[6,"ModuleInstanceId"],[15,"u64"],[3,"HashSet"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"ServerModuleConfig"],[3,"Database"],[3,"BTreeMap"],[3,"ModuleKind"],[3,"DummyConfig"],[3,"Demand"],[15,"u8"],[4,"Value"],[3,"ModuleConfigResponse"],[3,"Error"],[6,"Result"],[3,"String"],[3,"TypeId"],[8,"Read"],[3,"DummyConfigConsensus"],[3,"DummyConfigPrivate"],[3,"DummyClientConfig"],[3,"ClientModuleConfig"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ExampleKey"],[3,"ExampleKeyPrefix"],[4,"Option"]]},\
"fedimint_ln":{"doc":"Lightning Module","t":[13,13,13,3,13,3,13,13,13,13,13,17,3,3,4,3,3,3,4,4,3,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,11,11,11,11,11,12,11,13,3,3,13,3,3,13,3,3,4,3,13,3,3,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelOutgoing","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","KIND","Lightning","LightningConsensusItem","LightningError","LightningGateway","LightningGen","LightningInput","LightningOutput","LightningOutputOutcome","LightningVerificationCache","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","decoder","decoder","decoder","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","hash","init","init","into","into","into","into","into","into","into","into","into","into","into","list_gateways","mint_channel_id","mint_pub_key","module_kind","new","node_pub_key","output_status","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_decryption_share","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","outcome","LightningDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigPrivate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_input","contract_output","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_parts","hash","hash","into","into","into","into","into","kind","private","serialize","serialize","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","hash","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","gateway_key","hash","hash","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","AgreedDecryptionShare","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_lnfedimint_ln::LightningOutput","","fedimint_ln::LightningOutputOutcome","","","fedimint_ln::common","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contractsfedimint_ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::dbd":["Allow early refund of outgoing contract","Fund contract","","","","","","","","","","","The lightning module implements an account system. It does …","","","","","","Represents an output of the Lightning module.","","","","","","Creat incoming contract offer","","","","While for now we only support spending the entire contract …","","","","","","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Channel identifier assigned to the mint by the gateway. …","","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","Fees charged for LN transactions","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Contains all configuration that will be encrypted such as …","","","","","","The number of decryption shares required","","The threshold public keys for encrypting the LN preimage","Our secret key for decrypting preimages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","An iterator over the variants of Self","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[21,21,24,0,47,0,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,47,47,47,21,24,47,47,19,22,23,26,1,1,1,1,1,1,1,19,21,24,27,29,1,1,1,1,1,1,0,1,19,21,22,23,24,26,27,29,37,47,1,19,21,22,23,24,26,27,29,37,47,1,1,1,19,19,21,21,22,23,24,24,26,27,27,29,29,19,21,22,23,24,26,27,29,0,0,19,21,22,23,24,26,27,29,19,21,22,23,24,26,27,29,19,21,22,23,24,26,27,29,1,1,22,23,19,27,0,0,1,1,37,37,19,21,22,23,24,26,27,29,37,37,19,21,24,27,1,1,19,21,22,23,24,26,27,29,47,19,21,24,27,1,19,19,21,21,22,23,24,24,26,27,27,29,37,47,47,1,19,21,22,23,24,26,27,29,37,47,19,21,22,23,24,26,27,29,1,1,1,19,21,22,23,24,26,27,29,37,37,1,19,21,22,23,24,26,27,29,37,47,1,26,26,37,1,26,1,1,47,1,19,21,22,23,24,26,27,29,27,19,21,22,23,24,26,27,29,37,37,19,21,22,23,24,26,27,29,19,21,24,27,47,37,37,1,19,21,22,23,24,26,27,29,37,47,1,19,21,22,23,24,26,27,29,37,47,1,19,21,22,23,24,26,27,29,37,47,37,37,1,1,1,1,1,1,19,21,22,23,24,26,27,29,37,47,19,116,116,117,118,117,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,60,72,73,74,75,60,72,73,74,75,60,72,73,74,75,60,72,73,74,75,60,72,74,75,72,74,75,75,75,75,60,72,73,74,75,74,75,72,74,60,72,73,74,75,60,72,73,74,75,60,74,75,60,72,73,74,75,74,60,60,72,73,74,75,72,74,72,73,72,74,75,72,60,72,73,74,75,60,60,72,73,74,75,60,72,73,74,75,60,72,73,74,75,60,60,72,73,74,75,79,80,81,0,0,0,0,0,0,0,0,79,80,81,85,79,80,81,0,85,0,0,85,0,52,52,52,52,52,52,52,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,52,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,52,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,119,79,80,52,52,79,80,81,82,83,84,85,70,69,52,52,79,80,81,82,83,84,85,70,69,52,52,52,79,80,81,82,83,84,85,70,69,52,52,79,80,81,82,83,84,85,70,69,52,52,79,80,81,82,83,84,85,70,69,52,52,52,52,52,52,52,79,80,81,82,83,84,85,70,69,0,52,52,79,80,81,82,83,84,85,70,69,52,70,0,52,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,79,52,79,52,79,80,81,82,83,84,85,70,69,84,52,52,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,52,79,80,81,82,83,84,85,70,69,52,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,0,0,98,55,98,98,98,98,98,55,99,100,98,98,55,99,100,98,98,55,99,100,98,55,99,100,98,98,55,99,100,98,55,99,100,98,55,99,100,98,100,99,99,98,55,99,100,98,55,99,98,55,99,100,98,55,55,99,100,98,98,98,55,99,100,98,98,98,55,99,100,98,98,98,98,98,98,98,99,55,99,100,98,55,99,55,98,55,99,100,98,98,100,98,55,99,100,98,55,99,100,98,98,55,99,100,98,98,98,55,99,100,98,55,99,100,98,55,99,100,98,55,99,100,98,98,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,0,0,102,0,0,102,0,0,0,0,102,0,0,102,0,0,102,0,0,103,102,103,104,105,107,106,108,109,110,114,111,115,112,113,102,103,104,105,107,106,108,109,110,114,111,115,112,113,102,103,104,105,106,102,103,104,105,106,104,105,107,106,108,109,110,111,112,113,104,105,107,106,108,109,110,114,111,115,112,113,104,105,107,106,108,109,110,114,111,115,112,113,102,102,104,105,107,106,108,109,110,114,111,115,112,113,102,103,104,105,107,106,108,109,110,114,111,115,112,113,104,104,105,105,107,107,106,106,108,108,109,109,110,110,111,111,112,112,113,113,103,103,102,103,104,105,107,106,108,109,110,114,111,115,112,113,103,102,103,103,103,103,103,104,107,108,110,111,112,103,104,104,105,105,107,107,106,106,108,108,109,109,110,110,114,114,111,111,115,115,112,112,113,113,102,103,104,105,106,102,102,103,104,105,107,106,108,109,110,114,111,115,112,113,102,103,104,105,107,106,108,109,110,114,111,115,112,113,102,103,104,105,107,106,108,109,110,114,111,115,112,113,102,103,104,105,107,106,108,109,110,114,111,115,112,113],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[1,6,7],[[10,[[9,[8]]]]]],[[6,7,11,12],[[10,[[9,[8,5]]]]]],[[7,13,14],[[10,[[9,[8,5]]]]]],[[1,7,14],[[10,[[9,[8]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[1,7,16],[[10,[[9,[8]]]]]],[[7,16],[[10,[[9,[8,5]]]]]],[[1,7],[[10,[[9,[8]]]]]],[7,[[10,[[9,[8,5]]]]]],[[7,[3,[5]]],[[10,[[9,[8,5]]]]]],[[1,7,3],[[10,[[9,[8]]]]]],[6,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,18]],[[],12],0,[19,19],[20,11],[20,13],[21,21],[22,22],[23,23],[24,24],[20,25],[26,26],[27,27],[20,28],[[],12],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[30,[[32,[19,31]]]],[30,[[32,[21,31]]]],[30,[[32,[22,31]]]],[30,[[32,[23,31]]]],[30,[[32,[24,31]]]],[30,[[32,[26,31]]]],[30,[[32,[27,31]]]],[30,[[32,[29,31]]]],[19,[[32,[33,34]]]],[21,[[32,[33,34]]]],[22,[[32,[33,34]]]],[23,[[32,[33,34]]]],[24,[[32,[33,34]]]],[26,[[32,[33,34]]]],[27,[[32,[33,34]]]],[29,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[[1,7],[[10,[[9,[8]]]]]],[[7,20],[[10,[[9,[8,5]]]]]],0,0,0,0,0,0,[[],36],[1],[[],36],[37,38],[[],[[32,[19]]]],[[],[[32,[21]]]],[[],[[32,[22]]]],[[],[[32,[23]]]],[[],[[32,[24]]]],[[],[[32,[26]]]],[[],[[32,[27]]]],[[],[[32,[29]]]],[[37,39,40,41,42,43],[[10,[[9,[8]]]]]],[[39,40,20,42,43],[[10,[[9,[8,5]]]]]],[[],44],[[],44],[[],44],[[],44],[[1,45,7],[[10,[[9,[8]]]]]],[[45,7],[[10,[[9,[8,5]]]]]],[[19,19],46],[[21,21],46],[[22,22],46],[[23,23],46],[[24,24],46],[[26,26],46],[[27,27],46],[[29,29],46],[[47,47],46],[11,46],[13,46],[25,46],[28,46],[[1,48],49],[[19,48],49],[[19,48],49],[[21,48],49],[[21,48],49],[[22,48],49],[[23,48],49],[[24,48],49],[[24,48],49],[[26,48],49],[[27,48],49],[[27,48],49],[[29,48],49],[[37,48],49],[[47,48],49],[[47,48],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[[1,7,52],[[53,[23]]]],[[1,7,54],[[53,[55]]]],[[1,7],[[3,[55]]]],[19],[21],[22],[23],[24],[26],[27],[29],[[56,57,58,43],[[10,[[9,[8,5]]]]]],[[37,56,57,58,43],[[10,[[9,[8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,7],[[3,[26]]]],0,0,[[],59],[60,1],0,[[1,7,14],[[10,[[9,[8]]]]]],[[7,14,20],[[10,[[9,[8,5]]]]]],[61],[[1,7,26]],[19,32],[21,32],[22,32],[23,32],[24,32],[26,32],[27,32],[29,32],0,[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[37,63],[[65,[64]]]],[63,[[32,[64,66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],67],[[],67],[[],67],[[],67],[[],67],[42,[[58,[40,56,5]]]],[[37,42],[[58,[40,56]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[37,40,56],65],[[40,56],[[32,[66]]]],[[1,40,69,70],46],[[1,6,7],[[10,[[9,[8]]]]]],[[6,7,12,11],[[10,[[9,[8,5]]]]]],[[1,7],[[10,[[9,[8]]]]]],[[7,13],[[10,[[9,[8,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[38,38],[[]],[[38,71],[[32,[27,31]]]],[[71,20],[[32,[28,31]]]],[[38,71],[[32,[19,31]]]],[[71,20],[[32,[11,31]]]],[[71,20],[[32,[13,31]]]],[[38,71],[[32,[21,31]]]],[[71,20],[[32,[25,31]]]],[[38,71],[[32,[24,31]]]],[[],38],[[38,48],49],[[]],[[]],[[]],[[],32],[[],32],[[],68],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[72,72],[73,73],[74,74],[75,75],[[]],[[]],[[]],[[]],[[]],0,[72,[[32,[33,34]]]],[74,[[32,[33,34]]]],[75,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],0,0,[[],75],[[],[[32,[60]]]],[[],[[32,[72]]]],[[],[[32,[73]]]],[[],[[32,[74]]]],[[],[[32,[75]]]],[[74,74],46],[[75,75],46],0,0,[[60,48],49],[[72,48],49],[[73,48],49],[[74,48],49],[[75,48],49],[[]],[[]],[[]],[[]],[[]],[[],60],[74],[75],[[]],[[]],[[]],[[]],[[]],[74,59],0,[60,32],[72,32],[73,32],[74,32],[75,32],[72,33],0,0,0,[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[72,76],[[]],[[]],[[]],[[]],[[]],[60],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],68],[[],68],[[],68],[[],68],[[],68],[[60,40],65],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],52],[[],77],[52,54],[52],[52],[[],33],[[]],[52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[32,[[3,[78,5]]]]]],[52,52],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[70,70],[69,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,52],86],[30,[[32,[52,31]]]],[30,[[32,[79,31]]]],[30,[[32,[80,31]]]],[30,[[32,[81,31]]]],[30,[[32,[82,31]]]],[30,[[32,[83,31]]]],[30,[[32,[84,31]]]],[30,[[32,[85,31]]]],[30,[[32,[70,31]]]],[30,[[32,[69,31]]]],[52,[[32,[33,34]]]],[79,[[32,[33,34]]]],[80,[[32,[33,34]]]],[81,[[32,[33,34]]]],[82,[[32,[33,34]]]],[83,[[32,[33,34]]]],[84,[[32,[33,34]]]],[85,[[32,[33,34]]]],[70,[[32,[33,34]]]],[69,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[[],52],[79,52],[80,52],[52],[87,[[32,[52]]]],[[],[[32,[79]]]],[[],[[32,[80]]]],[[],[[32,[81]]]],[[],[[32,[82]]]],[[],[[32,[83]]]],[[],[[32,[84]]]],[[],[[32,[85]]]],[[],[[32,[70]]]],[[],[[32,[69]]]],[[]],[[52,52],46],[[79,79],46],[[80,80],46],[[81,81],46],[[82,82],46],[[83,83],46],[[84,84],46],[[85,85],46],[[70,70],46],[[69,69],46],[[52,48],49],[[52,48],49],[[52,48],49],[[79,48],49],[[80,48],49],[[81,48],49],[[82,48],49],[[83,48],49],[[84,48],49],[[85,48],49],[[70,48],49],[[69,48],49],[[]],[54,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[32,[88]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[[],52],[54,52],[[],52],[[],[[32,[52,89]]]],[[],[[32,[52,89]]]],[90,[[32,[52]]]],[52],[79],[80],[81],[82],[83],[84],[85],[70],[69],0,[[52,91]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52],[[84,92],70],0,[[52,52],[[53,[86]]]],[[52,93],32],[79,32],[80,32],[81,32],[82,32],[83,32],[84,32],[85,32],[70,32],[69,32],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[79,14],80],[[],67],[79,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,[[32,[94,95]]]],[[],67],[[],[[32,[77,96]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],0,[[]],[[]],[97,97],[[]],[30,[[32,[97,31]]]],[97,[[32,[33,34]]]],[35,[[32,[33,34]]]],[97,52],[[],[[32,[97]]]],[[97,97],46],[[97,48],49],[[]],[50,[[32,[51]]]],[97],[[]],0,[97,32],[[],[[3,[62,5]]]],[[]],[[],32],[[],32],[[],68],[[]],0,0,0,0,[[],98],0,[[],77],[98,54],[98],[98],[[],33],[[]],[[]],[[]],[98],[[]],[[]],[[]],[[]],[[]],[[],[[32,[[3,[78,5]]]]]],[55,55],[99,99],[100,100],[98,98],[[]],[[]],[[]],[[]],[[98,98],86],[30,[[32,[55,31]]]],[30,[[32,[99,31]]]],[30,[[32,[100,31]]]],[30,[[32,[98,31]]]],[55,[[32,[33,34]]]],[99,[[32,[33,34]]]],[100,[[32,[33,34]]]],[98,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],0,[99,52],0,[98],[[],[[32,[55]]]],[[],[[32,[99]]]],[[],[[32,[100]]]],[87,[[32,[98]]]],0,0,[[]],[[55,55],46],[[99,99],46],[[100,100],46],[[98,98],46],0,[[55,48],49],[[99,48],49],[[100,48],49],[[98,48],49],[[98,48],49],[[98,48],49],[[]],[[]],[[]],[[]],[54,98],[[],[[32,[88]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[[],98],[54,98],[[],98],[[],[[32,[98,89]]]],[[],[[32,[98,89]]]],[90,[[32,[98]]]],0,[55],[99],[100],[98],0,0,[55,98],[[98,91]],[[]],[[]],[[]],[[]],[98],0,[[98,98],[[53,[86]]]],[55,32],[99,32],[100,32],[[98,93],32],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],67],[[]],[[]],[[]],[[]],[[],67],[[],[[32,[77,96]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[],32],0,0,[[]],[[]],[101,54],0,[101,101],[[]],[30,[[32,[101,31]]]],[101,[[32,[33,34]]]],[35,[[32,[33,34]]]],[101,52],[[],[[32,[101]]]],[[101,101],46],[[101,48],49],[[]],[50,[[32,[51]]]],0,[101],0,[[]],0,[101,32],0,[[],[[3,[62,5]]]],[[]],[[],32],[[],32],[[],68],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[103,103],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[]],[[]],[30,[[32,[104,31]]]],[30,[[32,[105,31]]]],[30,[[32,[107,31]]]],[30,[[32,[106,31]]]],[30,[[32,[108,31]]]],[30,[[32,[109,31]]]],[30,[[32,[110,31]]]],[30,[[32,[111,31]]]],[30,[[32,[112,31]]]],[30,[[32,[113,31]]]],[104,[[32,[33,34]]]],[105,[[32,[33,34]]]],[107,[[32,[33,34]]]],[106,[[32,[33,34]]]],[108,[[32,[33,34]]]],[109,[[32,[33,34]]]],[110,[[32,[33,34]]]],[114,[[32,[33,34]]]],[111,[[32,[33,34]]]],[115,[[32,[33,34]]]],[112,[[32,[33,34]]]],[113,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[35,[[32,[33,34]]]],[[102,48],49],[[102,48],49],[[104,48],49],[[105,48],49],[[107,48],49],[[106,48],49],[[108,48],49],[[109,48],49],[[110,48],49],[[114,48],49],[[111,48],49],[[115,48],49],[[112,48],49],[[113,48],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[50,[[32,[51]]]],[[103,33],[[53,[102]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],103],[103,33],0,[103,53],[103,53],[[103,33],53],[104,32],[107,32],[108,32],[110,32],[111,32],[112,32],[103],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[],[[3,[62,5]]]],[[]],[[]],[[]],[[]],[[]],[[],67],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Lightning"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DynInput"],[3,"DynVerificationCache"],[3,"DynOutput"],[3,"OutPoint"],[8,"Any"],[3,"Audit"],[15,"u32"],[8,"Iterator"],[3,"LightningInput"],[15,"u16"],[4,"LightningOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[4,"LightningOutputOutcome"],[3,"DynOutputOutcome"],[3,"LightningGateway"],[3,"LightningConsensusItem"],[3,"DynModuleConsensusItem"],[3,"LightningVerificationCache"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"DynDecoder"],[3,"LightningGen"],[3,"LightningDecoder"],[3,"MuxPeerConnections"],[3,"PeerId"],[6,"ModuleInstanceId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[15,"bool"],[4,"LightningError"],[3,"Formatter"],[6,"Result"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"ContractId"],[4,"Option"],[3,"Hash"],[3,"IncomingContractOffer"],[3,"ServerModuleConfig"],[3,"Database"],[3,"BTreeMap"],[3,"ModuleKind"],[3,"LightningConfig"],[3,"Demand"],[15,"u8"],[4,"Value"],[3,"ModuleConfigResponse"],[6,"Result"],[3,"Error"],[3,"String"],[3,"TypeId"],[3,"PreimageDecryptionShare"],[3,"EncryptedPreimage"],[8,"Read"],[3,"LightningConfigConsensus"],[3,"LightningConfigPrivate"],[3,"LightningClientConfig"],[3,"FeeConsensus"],[3,"ClientModuleConfig"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[4,"Ordering"],[8,"Deserializer"],[4,"Error"],[4,"Error"],[15,"str"],[8,"SliceIndex"],[3,"PublicKey"],[8,"Serializer"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKeyPrefix"],[3,"ContractUpdateKey"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"]]},\
"fedimint_mint":{"doc":"","tn":["BackupRequest","BlindNonce","CombineError","DEFAULT_MAX_NOTES_PER_DENOMINATION","DifferentNonce","DifferentStructureSigShare","ExceededMaxNotes","InvalidAmountTier","InvalidAmountTier","InvalidNote","InvalidSignature","InvalidSignature","KIND","Mint","MintConsensusItem","MintError","MintGen","MintGenParams","MintInput","MintOutput","MintOutputBlindSignatures","MintOutputOutcome","MintOutputSignatureShare","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PeerErrorType","SignedBackupRequest","SpentCoin","TooFewNotes","TooFewShares","TooFewValidShares","VerifiedNotes","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","blind_sign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","db","decoder","decoder","decoder","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","handle_backup_request","handle_recover_request","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mint_amounts","module_kind","new","out_point","output_status","output_status","process_partial_signature","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signatures","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_notes","validate_config","validate_config","validate_input","validate_input","validate_output","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BackupRequest","MintDecoder","SignedBackupRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_bytes","hash","id","init","init","init","into","into","into","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_valid","vzip","vzip","vzip","FeeConsensus","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigPrivate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_parts","hash","init","init","init","init","init","into","into","into","into","into","kind","max_notes_per_denomination","max_notes_per_denomination","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","CoinNonce","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","NonceKeyPrefix","OutputOutcome","OutputOutcomeKey","OutputOutcomeKeyPrefix","ProposedPartialSig","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSig","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","hash","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","out_point","peer_id","request_id","request_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_mintfedimint_mint::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","<code>Nonce</code> but blinded by the user key","","By default, the maximum notes per denomination when …","","","","","","","","","","Data structures taking into account different amount tiers …","A consenus item from one of the federation members …","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","Blind signature share from one Federation peer for a …","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Constructs a new mint","Reference to a Federation Transaction containing an …","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","(Partial) signatures","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The maximum amount of change a client can request","","","","The set of public keys for blind-signing all peers and …","","Contains all configuration that will be encrypted such as …","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","","","","Transaction id and output index identifying an output …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,37,37,20,37,20,20,37,20,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,20,20,38,38,0,1,1,1,1,1,1,1,26,30,32,33,34,1,1,1,1,1,1,1,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,1,1,1,26,26,19,27,28,29,17,30,30,31,32,32,33,33,34,34,36,37,38,20,26,19,27,28,29,17,30,31,32,33,34,36,37,38,20,1,0,0,26,19,27,28,29,17,32,33,34,26,19,27,28,29,17,32,33,34,26,19,27,28,29,17,32,33,34,1,1,0,1,1,46,46,32,33,1,26,19,27,28,29,17,30,46,31,32,32,33,33,34,34,36,37,38,20,1,26,19,27,28,29,17,30,46,31,32,32,33,33,34,34,36,37,38,20,26,19,27,28,29,17,31,32,33,34,46,46,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,26,32,33,34,1,1,26,19,27,28,29,17,32,33,34,36,37,38,20,26,32,33,34,33,1,26,26,19,27,28,29,17,30,46,31,32,32,33,33,34,34,36,37,38,38,20,20,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,20,26,19,27,28,29,29,17,32,33,34,1,1,26,19,27,28,29,17,32,33,34,36,37,38,20,1,26,19,27,28,29,17,30,46,46,46,31,32,33,34,36,37,38,20,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,31,46,1,26,1,1,1,38,20,1,1,1,1,26,19,27,28,29,17,31,32,33,34,26,28,26,19,27,28,29,29,17,32,33,34,46,46,29,26,19,27,28,29,17,30,31,32,33,34,36,37,38,20,26,32,33,34,38,20,46,46,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,30,46,46,1,1,1,1,28,1,26,19,27,28,29,17,30,46,31,32,33,34,36,37,38,20,0,0,0,83,62,47,83,62,47,47,47,83,83,83,47,47,47,47,47,47,47,47,47,83,62,47,83,62,47,83,62,83,62,47,83,62,47,83,62,47,83,83,83,83,62,47,83,62,47,83,62,83,62,83,62,83,83,47,83,62,47,83,62,47,83,62,47,62,83,62,47,0,0,0,0,0,70,89,90,91,92,70,89,90,91,92,70,89,90,91,92,70,89,90,91,92,70,89,91,92,89,91,92,92,70,89,90,91,92,70,89,90,91,92,70,89,90,91,92,70,89,90,91,92,91,92,89,91,70,89,90,91,92,70,89,90,91,92,70,92,70,89,90,91,92,70,89,90,91,92,91,89,91,92,92,89,91,70,70,89,90,91,92,91,90,89,91,92,89,70,89,90,91,92,70,70,89,90,91,92,70,89,90,91,92,70,89,90,91,92,70,70,89,90,91,92,94,0,0,0,94,0,0,98,98,94,0,0,0,0,94,0,0,94,0,0,94,0,0,0,98,98,95,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,97,98,99,65,94,95,96,97,98,99,65,96,100,101,102,103,104,105,97,106,98,107,108,99,65,96,100,101,102,103,104,105,97,106,98,107,108,99,65,96,100,101,102,103,104,105,97,106,98,107,108,99,65,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,96,65,94,94,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,96,96,100,100,101,101,102,102,103,103,104,104,105,105,97,97,106,106,98,98,107,107,108,108,99,99,65,95,96,95,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,95,94,95,95,95,95,95,101,103,103,104,96,101,103,97,98,99,65,95,65,96,96,100,100,101,101,102,102,103,103,104,104,105,105,97,97,106,106,98,98,107,107,108,108,99,99,65,94,95,96,97,98,99,65,94,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65,94,95,96,100,101,102,103,104,105,97,106,98,107,108,99,65],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[6,7,8,9],[[12,[[11,[10,5]]]]]],[[1,6,7],[[12,[[11,[10]]]]]],[[7,13,14],[[12,[[11,[10,5]]]]]],[[1,7,14],[[12,[[11,[10]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[1,7,16],[[12,[[11,[10]]]]]],[[7,16],[[12,[[11,[10,5]]]]]],[7,[[12,[[11,[10,5]]]]]],[[1,7],[[12,[[11,[10]]]]]],[[1,7,3],[[12,[[11,[10]]]]]],[[7,[3,[5]]],[[12,[[11,[10,5]]]]]],[[1,[18,[17]]],[[21,[19,20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[0,[22,23]]]],[[],9],0,[24,25],[26,26],[19,19],[27,27],[28,28],[29,29],[17,17],[[],9],[30,30],[31,31],[24,8],[32,32],[24,13],[33,33],[34,34],[24,35],[36,36],[37,37],[38,38],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[39,[19]],3]],0,0,[40,[[21,[26,41]]]],[40,[[21,[19,41]]]],[40,[[21,[27,41]]]],[40,[[21,[28,41]]]],[40,[[21,[29,41]]]],[40,[[21,[17,41]]]],[40,[[21,[32,41]]]],[40,[[21,[33,41]]]],[40,[[21,[34,41]]]],[26,[[21,[42,43]]]],[19,[[21,[42,43]]]],[27,[[21,[42,43]]]],[28,[[21,[42,43]]]],[29,[[21,[42,43]]]],[17,[[21,[42,43]]]],[32,[[21,[42,43]]]],[33,[[21,[42,43]]]],[34,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[[1,7],[[12,[[11,[10]]]]]],[[7,24],[[12,[[11,[10,5]]]]]],0,[[],45],[1],[46,47],[[],45],[[],32],[[],33],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[32],[42],[33],[42],[34],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[32],[42],[42],[33],[34],[42],[42],[42],[42],[42],[[],[[21,[26]]]],[[],[[21,[19]]]],[[],[[21,[27]]]],[[],[[21,[28]]]],[[],[[21,[29]]]],[[],[[21,[17]]]],[[],[[21,[31]]]],[[],[[21,[32]]]],[[],[[21,[33]]]],[[],[[21,[34]]]],[[46,48,49,50,51,52],[[12,[[11,[10]]]]]],[[48,49,24,51,52],[[12,[[11,[10,5]]]]]],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[],53],[[],53],[[],53],[[],53],[[54,7],[[12,[[11,[10,5]]]]]],[[1,54,7],[[12,[[11,[10]]]]]],[[26,26],55],[[19,19],55],[[27,27],55],[[28,28],55],[[29,29],55],[[17,17],55],[[32,32],55],[[33,33],55],[[34,34],55],[[36,36],55],[[37,37],55],[[38,38],55],[[20,20],55],[25,55],[8,55],[13,55],[35,55],[[33,56]],[[1,57],58],[[26,57],58],[[26,57],58],[[19,57],58],[[27,57],58],[[28,57],58],[[29,57],58],[[17,57],58],[[30,57],58],[[46,57],58],[[31,57],58],[[32,57],58],[[32,57],58],[[33,57],58],[[33,57],58],[[34,57],58],[[34,57],58],[[36,57],58],[[37,57],58],[[38,57],58],[[38,57],58],[[20,57],58],[[20,57],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,20],[[]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[[],29],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[[1,7,62],[[21,[63]]]],[[1,7,64],[[39,[65]]]],[26],[19],[27],[28],[29],[17],[32],[33],[34],[36],[37],[38],[20],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[46,66,67,68,52],[[12,[[11,[10]]]]]],[[66,67,68,52],[[12,[[11,[10,5]]]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],69],[70,1],0,[[1,7,14],[[12,[[11,[10]]]]]],[[7,14,24],[[12,[[11,[10,5]]]]]],[[1,7,49,14,19]],[71],[71],[1,[[74,[72,73]]]],0,0,0,[26,21],[19,21],[27,21],[28,21],[29,21],[17,21],[31,21],[32,21],[33,21],[34,21],0,[28,64],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[29,[[3,[75]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[46,76],[[78,[77]]]],[76,[[21,[77,79]]]],[29,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[46,51],[[68,[49,66]]]],[51,[[68,[49,66,5]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],0,[[49,66],[[21,[79]]]],[[46,49,66],78],[[6,7,9,8],[[12,[[11,[10,5]]]]]],[[1,6,7],[[12,[[11,[10]]]]]],[[7,13],[[12,[[11,[10,5]]]]]],[[1,7],[[12,[[11,[10]]]]]],[[28,73],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[[]],[40,[[21,[83,41]]]],[83,[[21,[42,43]]]],[44,[[21,[42,43]]]],[[47,84],[[21,[26,41]]]],[[84,24],[[21,[25,41]]]],[[84,24],[[21,[8,41]]]],[[47,84],[[21,[32,41]]]],[[84,24],[[21,[13,41]]]],[[47,84],[[21,[33,41]]]],[[47,84],[[21,[34,41]]]],[[84,24],[[21,[35,41]]]],[[],47],[42],[42],[42],[42],[42],[42],[[],[[21,[83]]]],[[],[[21,[62]]]],[42],[42],[42],[[83,57],58],[[62,57],58],[[47,57],58],[[]],[[]],[[]],[60,[[21,[61]]]],[83,85],0,[[],42],[[],42],[[],42],[[]],[[]],[[]],0,0,[83,21],[62,21],[[83,86],[[78,[62]]]],0,0,[[],[[3,[75,5]]]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],82],[[],82],[[],82],[[62,87],[[21,[83,88]]]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[89,89],[90,90],[91,91],[92,92],[[]],[[]],[[]],[[]],[[]],0,[89,[[21,[42,43]]]],[91,[[21,[42,43]]]],[92,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[[],92],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[],[[21,[70]]]],[[],[[21,[89]]]],[[],[[21,[90]]]],[[],[[21,[91]]]],[[],[[21,[92]]]],[42],[42],[42],[42],[42],[[91,91],55],[[92,92],55],0,0,[[70,57],58],[[89,57],58],[[90,57],58],[[91,57],58],[[92,57],58],[[]],[[]],[[]],[[]],[[]],[[],70],[92],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[91,69],0,0,0,0,0,0,0,[70,21],[89,21],[90,21],[91,21],[92,21],0,0,[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[89,93],[[]],[[]],[[]],[[]],[[]],[70],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],82],[[],82],[[],82],[[],82],[[],82],[[70,49],78],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[21,[96,41]]]],[40,[[21,[100,41]]]],[40,[[21,[101,41]]]],[40,[[21,[102,41]]]],[40,[[21,[103,41]]]],[40,[[21,[104,41]]]],[40,[[21,[105,41]]]],[40,[[21,[97,41]]]],[40,[[21,[106,41]]]],[40,[[21,[98,41]]]],[40,[[21,[107,41]]]],[40,[[21,[108,41]]]],[40,[[21,[99,41]]]],[40,[[21,[65,41]]]],[96,[[21,[42,43]]]],[100,[[21,[42,43]]]],[101,[[21,[42,43]]]],[102,[[21,[42,43]]]],[103,[[21,[42,43]]]],[104,[[21,[42,43]]]],[105,[[21,[42,43]]]],[97,[[21,[42,43]]]],[106,[[21,[42,43]]]],[98,[[21,[42,43]]]],[107,[[21,[42,43]]]],[108,[[21,[42,43]]]],[99,[[21,[42,43]]]],[65,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],[44,[[21,[42,43]]]],0,[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[],[[21,[65]]]],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[96,96],55],[[65,65],55],[[94,57],58],[[94,57],58],[[96,57],58],[[100,57],58],[[101,57],58],[[102,57],58],[[103,57],58],[[104,57],58],[[105,57],58],[[97,57],58],[[106,57],58],[[98,57],58],[[107,57],58],[[108,57],58],[[99,57],58],[[65,57],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[60,[[21,[61]]]],[[95,42],[[39,[94]]]],[96],0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],95],[95,42],0,[95,39],[95,39],[[95,42],39],0,0,0,0,[96,21],[101,21],[103,21],[97,21],[98,21],[99,21],[65,21],[95],0,[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[],[[3,[75,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],81],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Mint"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"DynInput"],[3,"DynVerificationCache"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DynOutput"],[3,"OutPoint"],[8,"Any"],[3,"Audit"],[3,"BlindNonce"],[3,"TieredMulti"],[3,"MintOutputSignatureShare"],[4,"MintError"],[4,"Result"],[8,"Iterator"],[8,"Send"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"MintConsensusItem"],[3,"MintOutputBlindSignatures"],[3,"Note"],[3,"Nonce"],[3,"VerifiedNotes"],[3,"MintGenParams"],[3,"MintInput"],[3,"MintOutput"],[3,"MintOutputOutcome"],[3,"DynOutputOutcome"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"Option"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"DynDecoder"],[3,"MintGen"],[3,"MintDecoder"],[3,"MuxPeerConnections"],[3,"PeerId"],[6,"ModuleInstanceId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"InvalidAmountTierError"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"SignedBackupRequest"],[3,"ApiError"],[3,"XOnlyPublicKey"],[3,"ECashUserBackupSnapshot"],[3,"ServerModuleConfig"],[3,"Database"],[3,"BTreeMap"],[3,"ModuleKind"],[3,"MintConfig"],[3,"Demand"],[3,"Amount"],[3,"AggregatePublicKey"],[3,"HashMap"],[15,"u8"],[4,"Value"],[3,"ModuleConfigResponse"],[6,"Result"],[3,"Error"],[3,"Message"],[3,"String"],[3,"TypeId"],[3,"BackupRequest"],[8,"Read"],[3,"Hash"],[3,"KeyPair"],[3,"Secp256k1"],[4,"Error"],[3,"MintConfigConsensus"],[3,"MintConfigPrivate"],[3,"MintClientConfig"],[3,"FeeConsensus"],[3,"ClientModuleConfig"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"NonceKeyPrefix"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"OutputOutcomeKeyPrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"]]},\
"fedimint_rocksdb":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RocksDb","RocksDbReadOnly","RocksDbTransaction","begin_transaction","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit_tx","commit_tx","fmt","from","from","from","from","inner","into","into","into","open","open_read_only","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_entry","raw_remove_entry","rocksdb","rollback_tx_to_savepoint","rollback_tx_to_savepoint","set_tx_savepoint","set_tx_savepoint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["fedimint_rocksdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,5,6,1,5,6,1,5,6,1,5,6,1,1,1,5,6,1,1,5,5,6,5,6,5,6,5,6,0,5,6,5,6,5,6,1,5,6,1,5,6,1,5,6,1],"f":[0,0,0,[1,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[5]]],[[4,[[3,[2]]]]]],[[[3,[6]]],[[4,[[3,[2]]]]]],[[1,7],8],[[]],[[]],[[]],[9,1],[1,9],[[]],[[]],[[]],[[[11,[10]]],[[13,[1,12]]]],[[[11,[10]]],[[13,[5,12]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[5,[15,[14]]],[[4,[[3,[2]]]]]],[[6,[15,[14]]],[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],0,[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[]],[[]],[[]]],"p":[[3,"RocksDb"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RocksDbReadOnly"],[3,"RocksDbTransaction"],[3,"Formatter"],[6,"Result"],[6,"OptimisticTransactionDB"],[3,"Path"],[8,"AsRef"],[3,"Error"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_server":{"doc":"","t":[13,4,4,6,3,13,17,6,13,13,12,11,11,11,11,11,11,11,12,11,11,0,12,0,12,0,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,5,0,0,0,11,11,11,0,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,13,17,13,13,4,3,3,3,3,3,3,3,3,3,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,11,12,11,11,12,12,12,11,12,12,0,0,0,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,3,3,3,3,3,6,6,6,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,13,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,3,3,13,4,13,13,13,8,13,13,13,13,6,6,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,13,13,13,3,13,3,13,13,13,13,13,3,3,4,3,3,3,4,4,3,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,12,11,11,11,11,11,12,11,13,3,3,13,3,3,13,3,3,4,3,13,3,3,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,13,13,13,13,13,13,13,13,3,3,4,3,3,3,3,3,3,3,3,13,13,3,3,4,3,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,3,13,3,3,13,13,13,4,3,3,3,13,3,3,13,3,3,13,3,3,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,13,8,13,13,13,6,13,6,13,3,13,3,13,3,3,4,3,13,3,13,13,3,13,13,13,3,3,3,4,4,3,3,3,3,3,3,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,12,11,11,11,11,12,11,11,11,12,12,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,3,13,3,3,3,13,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,17,6,6,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,5,5,11,11,11,11,11,11,11,12,11,11,11,11,5,5,11,11,11,11,11,6,6,6,8,3,6,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,12,12,12,12,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,6,3,3,6,6,8,6,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,3,13,3,13,3,17,3,3,4,3,6,3,8,3,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,10,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,13,13,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,13,13,6,3,4,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,4,13,13,13,13,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Continue","CoreError","EpochMessage","EpochStep","FedimintServer","MismatchingVariant","NUM_EPOCHS_REJOIN_AHEAD","PeerMessage","PendingPreimage","RejoinRequest","api","await_next_epoch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone_into","config","connections","consensus","consensus","db","decoders","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","epoch","fmt","fmt","fmt","from","from","from","handle_message","handle_step","hbbft","init","init","init","into","into","into","is_retryable","last_processed_epoch","module_parse_outcome","modules","multiplexed","net","new","new_with","next_epoch_to_process","outcome","peers","process_outcome","propose_epoch","provide","rejoin_at_epoch","rejoin_at_epoch","request_rejoin","run","run_consensus","run_consensus_epoch","run_empty_epochs","serialize","start_consensus","start_next_epoch","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","util","vzip","vzip","vzip","Auth","DEFAULT_MAX_CLIENT_CONNECTIONS","Epoch","Hbbft","KeyType","LegacyInitOrderIter","ModuleGenRegistry","PeerEndpoint","PeerServerParams","ServerConfig","ServerConfigConsensus","ServerConfigLocal","ServerConfigParams","ServerConfigPrivate","add_modules","api","api_bind","api_network","api_nodes","api_url","auth_pk_set","auth_sks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_version","connect","consensus","consensus_encode","consensus_encode_dyn","decoders","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_pk_set","epoch_sks","eq","equivalent","extract_keys","fed_bind","fed_network","federation_name","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","gen_cert_and_key","gen_denominations","gen_local","gen_network","gen_params","get","get_env_vars_map","get_hash","get_incoming_count","get_module_cfg_by_instance_id","get_module_config","get_module_config_typed","get_module_id_by_kind","hash","hbbft","hbbft_pk_set","hbbft_sks","identity","init","init","init","init","init","init","init","init","init","init","init_all","into","into","into","into","into","into","into","into","into","into","into_iter","iter_module_instances","iter_module_instances","legacy_init_order_iter","load_from_file","local","max_connections","modules","modules","modules","modules","multiunzip","name","network_config","next","next_id","p2p","p2p_url","peers","private","rest","serde_binary_human_readable","serde_tls_cert","serde_tls_key","serialize","serialize","serialize","serialize","serialize","serialize","tls","tls_cert","tls_cert","tls_config","tls_key","to_bytes","to_config_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_config_response","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","deserialize","serialize","deserialize","serialize","AcceptedTransaction","ConsensusOutcomeConversion","ConsensusProposal","FedimintConsensus","FundingVerifier","HbbftConsensusOutcome","HbbftMessage","HbbftSerdeConsensusOutcome","ModuleError","TransactionConflictError","TransactionError","TransactionSubmissionError","VerificationCaches","add_input","add_output","audit","await_consensus_proposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_interconnect","build_verification_caches","caches","cfg","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","database_transaction","db","debug","decoders","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop_peers","epoch","epoch_history","eq","eq","equivalent","fee_amount","finalize_process_epoch","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","get_cache","get_consensus_proposal","get_hash","get_last_epoch","hash","init","init","init","init","init","init","init","input_amount","interconnect","into","into","into","into","into","into","into","items","module_inits","modules","new","new_with_modules","output_amount","process_consensus_outcome","process_module_consensus_items","process_transaction","process_transactions","provide","save_epoch_history","source","submit_transaction","to_bytes","to_owned","to_owned","to_owned","to_string","transaction","transaction_notify","transaction_status","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_funding","vzip","vzip","vzip","vzip","vzip","vzip","vzip","epoch_message","item_message","FedimintInterconnect","borrow","borrow_mut","call","deref","deref_mut","drop","fedimint","from","init","into","try_from","try_into","type_id","vzip","AcceptedTransaction","AcceptedTransactionKey","AcceptedTransactionKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","DropPeer","DropPeerKey","DropPeerKeyPrefix","EpochHistory","EpochHistoryKey","EpochHistoryKeyPrefix","LastEpoch","LastEpochKey","Module","ProposedTransaction","ProposedTransactionKey","ProposedTransactionKeyPrefix","RejectedTransaction","RejectedTransactionKey","RejectedTransactionKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConsensusItem","EpochOutcome","EpochOutcomeSignature","EpochOutcomeSignatureShare","EpochOutcomeSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","MissingPreviousEpoch","MissingSignature","Module","NotEnoughValidSigShares","SerdeConsensusItem","SerdeEpochHistory","SignedEpochOutcome","Transaction","UnzipConsensusItem","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_outcome_signature_share","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","items","last_hash","module","new","outcome","rejected_txs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CancelOutgoing","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","Lightning","LightningConsensusItem","LightningError","LightningGateway","LightningGen","LightningInput","LightningOutput","LightningOutputOutcome","LightningVerificationCache","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","decoder","decoder","decoder","decoder","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","list_gateways","mint_channel_id","mint_pub_key","module_kind","new","node_pub_key","output_status","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","outcome","LightningDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigPrivate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_input","contract_output","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_parts","get_hash","get_hash","hash","hash","init","init","init","init","init","into","into","into","into","into","kind","private","serialize","serialize","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","try_into_outcome","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","get_hash","hash","init","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","id","index","init","init","init","init","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","gateway_key","get_hash","hash","hash","init","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","AgreedDecryptionShare","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BackupRequest","BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","ExceededMaxNotes","InvalidAmountTier","InvalidAmountTier","InvalidNote","InvalidSignature","InvalidSignature","Mint","MintConsensusItem","MintError","MintGen","MintGenParams","MintInput","MintOutput","MintOutputBlindSignatures","MintOutputOutcome","MintOutputSignatureShare","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PeerErrorType","SignedBackupRequest","SpentCoin","TooFewNotes","TooFewShares","TooFewValidShares","VerifiedNotes","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","db","decoder","decoder","decoder","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mint_amounts","module_kind","new","out_point","output_status","output_status","payload","provide","provide","pub_key","pub_key","pub_key_shares","request","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","signature","signatures","spend_key","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_notes","validate_config","validate_config","validate_input","validate_input","validate_output","validate_output","verify","verify_valid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BackupRequest","MintDecoder","SignedBackupRequest","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","id","init","into","payload","request","signature","timestamp","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigPrivate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_parts","get_hash","hash","init","init","init","init","init","into","into","into","into","into","kind","max_notes_per_denomination","max_notes_per_denomination","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","CoinNonce","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","NonceKeyPrefix","OutputOutcome","OutputOutcomeKey","OutputOutcomeKeyPrefix","ProposedPartialSig","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSig","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_hash","hash","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","out_point","peer_id","request_id","request_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConsensusItem","WalletError","WalletGen","WalletGenParams","WalletInput","WalletOutput","WalletOutputOutcome","WalletVerificationCache","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","build_verification_cache","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","consensus_proposal","current_round_consensus","db","decoder","decoder","decoder","decoder","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","fee_rate","fee_rate","fee_rate","fees","fees","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","module_kind","network","new","new_with_bitcoind","output_status","output_status","peg_out_signature","process_randomness_contributions","provide","provide","psbt","randomness","randomness_beacon","recipient","round_consensus","run_broadcast_pending_tx","secp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_config","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WalletDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_fee","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_parts","get_hash","get_hash","hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","kind","local","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensus","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","consensus_encode","consensus_encode_dyn","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from_str","get_hash","hash","hash_to_hash160","init","into","is_uncompressed","key","new","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","get_hash","get_hash","hash","hash","identity","init","init","init","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","verify","vzip","vzip","vzip","MAX_PEER_OUT_OF_ORDER_MESSAGES","ModuleId","ModuleIdRef","ModuleMultiplexed","ModuleMultiplexerInner","ModuleMultiplexerOutOfOrder","PeerConnectionMultiplexer","ban_peer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connections","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","from","from","from","from","init","init","init","init","inner","into","into","into","into","key","msg","msgs","new","out_of_order","peer_counts","receive","send","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","api","connect","framed","peers","queue","RpcHandlerCtx","attach_endpoints","attach_endpoints_erased","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fedimint","fmt","from","init","into","run_server","server_endpoints","to_owned","try_from","try_into","type_id","vzip","AnyConnector","ConnectResult","ConnectionListener","Connector","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","get_peer_by_cert","init","init","init","into","into","into","into_dyn","listen","listen","mock","new","new","our_certificate","our_certificate","our_private_key","our_private_key","parse_host_port","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MockConnector","MockNetwork","borrow","borrow","borrow_mut","borrow_mut","clients","clients","connect_framed","connector","deref","deref","deref_mut","deref_mut","do_handshake","drop","drop","from","from","id","init","init","into","into","listen","new","timeout","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","deref","deref","deref_mut","deref_mut","drop","drop","encode","fmt","fmt","from","from","init","init","into","into","into_dyn","new","new","new_from_tcp","new_from_tcp","poll_close","poll_flush","poll_next","poll_ready","sink","start_send","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","Disconnected","DisconnectedPeerConnectionState","MAX_FAIL_RECONNECT_COUNTER","NetworkConfig","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","ReconnectPeerConnections","ack","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","common","connect","connect","connection","connections","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","disconnect","disconnect_err","drop","drop","drop","drop","drop","drop","drop","drop","drop","failed_reconnect_counter","fmt","fmt","from","from","from","from","from","from","from","from","from","identity","incoming","incoming","incoming_connections","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","last_received","msg","new","new","outgoing","outgoing","peer","peer_address","peers","peers","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","resend_buffer_contents","resend_queue","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","increment","init","init","init","into","into","into","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Accepted","Rejected","SerdeOutputOutcome","TransactionStatus","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","get_hash","hash","init","into","is_final","legacy","serialize","to_owned","try_from","try_into","type_id","vzip","epoch","outputs","LN","Mint","OutputOutcome","TryIntoOutcome","Wallet","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref_mut","drop","eq","equivalent","fmt","from","from","from_bytes","get_hash","hash","init","into","is_final","to_bytes","to_owned","try_from","try_into","try_into_outcome","try_into_variant","type_id","vzip","InvalidSignature","MissingSignature","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","agg_keys","agg_sign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","fmt","from","from","from_bytes","get_hash","hash","init","init","inputs","into","into","legacy","outputs","provide","signature","to_bytes","to_owned","to_string","try_from","try_from","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","validate_signature","vzip","vzip","fee","inputs","outputs","Input","LN","LN","Mint","Mint","Output","Transaction","Wallet","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","inputs","into","into","into","into_type_erased","outputs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","SanitizedUrl","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","new_borrowed","new_owned","to_string","try_from","try_into","type_id","vzip"],"q":["fedimint_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::configfedimint_server::config::serde_binary_human_readable","","fedimint_server::config::serde_tls_cert","","fedimint_server::config::serde_tls_key","","fedimint_server::consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::consensus::debug","","fedimint_server::consensus::interconnect","","","","","","","","","","","","","","","fedimint_server::dbfedimint_server::epochfedimint_server::modules::lnfedimint_server::modules::ln::LightningOutput","","fedimint_server::modules::ln::LightningOutputOutcome","","","fedimint_server::modules::ln::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contractsfedimint_server::modules::ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::dbfedimint_server::modules::mintfedimint_server::modules::mint::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::mint::dbfedimint_server::modules::walletfedimint_server::modules::wallet::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::dbfedimint_server::modules::wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::tweakable","","","","fedimint_server::modules::wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::multiplexed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net","","","","","fedimint_server::net::api","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::framed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome::TransactionStatus","","fedimint_server::outcome::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::transaction::TransactionError","","","fedimint_server::transaction::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::util","","","","","","","","","","","","","","","","",""],"d":["","","","","","","how many epochs ahead of consensus to rejoin","","","","","","","","","","","","","","","Fedimint toplevel config","","The actual implementation of the federated mint","","Provides interfaces for ACID-compliant data store backends","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Runs a single HBBFT consensus step","Handles one step of the HBBFT algorithm, sending messages …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","Implementation of multiplexed peer connections","Networking for mint-to-mint and client-to-mint …","","","Returns the next epoch that we need to process, based on …","","","Requests, verifies and processes history from peers","","","If we are rejoining and received a threshold of messages …","","Sends a rejoin request to all peers, indicating the number …","Start all the components of the mint and plug them together","Loop <code>run_conensus_epoch</code> until shut down","The main consensus function:","","","Starts consensus by skipping to the last saved epoch …","","","","","","","","","","","","","","","","","","","The maximum open connections the API can handle","","","The types of keys to run distributed key generation for","Iterate over module generators in a legacy, hardcoded …","","","","All the serializable configuration for the fedimint server","","","network config for a server","","","Network addresses and names for all peer APIs","Our bind address for our API endpoints","","","","Public keys authenticating members of the federation and …","Secret key for contributing to threshold auth key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the binary code running","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public keys for signing consensus epochs from all peers","Secret key for signing consensus epochs","","","","Our bind address for communicating with peers","","Configurable federation name","","","","","","","","","Returns the argument unchanged.","Creates a new config from the results of a trusted or …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Generates denominations as powers of 2 until a <code>max</code>","config for servers running on different ports on a local …","","Generates the parameters necessary for running server …","","","","","","Constructs a module config by name","Constructs a module config by name","","","The TLS network address and port, used for HBBFT consensus","Public keys for HBBFT consensus from all peers","Secret key for contributing to HBBFT consensus","Our peer id (generally should not change)","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Return legacy initialization order. See <code>LegacyInitOrderIter</code>…","","Contains all configuration that is locally configurable …","How many API connections we will accept","Secret material from modules","All configuration that needs to be the same for modules","Non-consensus, non-private configuration from modules","extra options for extra settings and modules","","","","","Counter of what module id will this returned value get …","Network addresses and certs for all p2p connections","","","Contains all configuration that will be encrypted such as …","","","","","","","","","","","","Our publicly known TLS cert","Certs for TLS communication, required for peer …","","Secret key for TLS communication, required for peer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encodes the fields into a sha256 hash for comparison TODO …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proposed HBBFT consensus changes including removing peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration describing the federation and containing our …","","","","","","","","","","","KV Database into which all state is persisted to recover …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Saves the epoch history, calls <code>end_consensus_epoch</code> on all …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Like <code>Self::new</code>, but when you want to initialize modules …","","Calculate the result of the <code>consensus_outcome</code> and save …","Calls <code>begin_consensus_epoch</code> on all modules, dispatching …","","Applies all valid fedimint transactions to the database …","","","","","","","","","","","Notifies tasks when there is a new transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","outputs a useful debug message for epochs indicating what …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","All the consensus items along with the <code>PeerId</code> of the peer …","","","","","Transactions from <code>items</code> that turned out to be invalid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow early refund of outgoing contract","Fund contract","","","","","","","","","","The lightning module implements an account system. It does …","","","","","","Represents an output of the Lightning module.","","","","","","Creat incoming contract offer","","","","While for now we only support spending the entire contract …","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Channel identifier assigned to the mint by the gateway. …","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for LN transactions","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Contains all configuration that will be encrypted such as …","","","","","","The number of decryption shares required","","The threshold public keys for encrypting the LN preimage","Our secret key for decrypting preimages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","","","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","","","","","Payment hash which’s corresponding preimage is being sold","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","","Hash that can be used to spend the output before the …","","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","An iterator over the variants of Self","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Nonce</code> but blinded by the user key","","","","","","","","","","Data structures taking into account different amount tiers …","A consenus item from one of the federation members …","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","Blind signature share from one Federation peer for a …","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Constructs a new mint","Reference to a Federation Transaction containing an …","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","(Partial) signatures","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The maximum amount of change a client can request","","","","The set of public keys for blind-signing all peers and …","","Contains all configuration that will be encrypted such as …","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","","","","Transaction id and output index identifying an output …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Contains all configuration that is locally configurable …","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","Contains all configuration that will be encrypted such as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Selfeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of per-peer messages after which we will stop …","TODO: Use proper ModuleId after modularization is complete","","A <code>Msg</code> that can target a specific destination module","Shared, mutable (wrapped in mutex) data of …","","A wrapper around <code>AnyPeerConnections</code> multiplexing …","","","","","","","","","","","","","","Underlying connection pool","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Messages per <code>ModuleId</code> in a queue each","","Messages that arrived before an interested thread asked …","Track pending messages per peer to avoid a potential DoS","Await receipt of a message from any connected peer.","","","","","","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","","A state of fedimint server passed to each rpc handler …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","","Parses the host and port from a url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","","","","","","","","","","","","","","","","","","","","","","Maximum connection failures we consider for our back-off …","Specifies the network configuration for …","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","Connection manager that automatically reconnects to peers","","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Our federation member’s identity","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","<code>DynInput</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Old transaction definition used by old client.","<code>DynOutput</code>s created as a result of the transaction","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","","","Wrapper for <code>Url</code> that only prints the scheme, domain, port …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[4,0,0,0,0,7,0,0,7,4,1,1,7,1,4,7,1,4,1,4,4,0,1,0,1,0,1,7,1,4,7,1,4,4,7,1,4,0,7,7,4,7,1,4,1,1,1,7,1,4,7,1,4,7,1,0,0,0,0,1,1,1,0,1,1,1,7,1,1,1,1,1,1,1,4,1,1,4,7,0,7,1,4,7,1,4,7,1,4,0,7,1,4,42,0,42,42,0,0,0,0,0,0,0,0,0,0,19,38,39,35,35,43,38,37,74,19,37,38,39,40,35,41,42,43,74,19,37,38,39,40,35,41,42,43,43,19,37,38,39,40,35,41,42,43,19,37,38,39,40,35,41,42,43,38,0,19,38,38,41,74,19,37,38,39,40,35,41,42,43,74,19,37,38,39,40,35,41,42,43,19,37,38,39,40,42,19,74,19,37,38,39,40,35,41,42,43,38,37,42,42,19,39,35,38,35,19,37,38,39,40,35,42,74,19,19,37,38,39,40,35,41,41,42,43,0,35,35,35,35,41,41,42,19,19,19,19,19,42,40,38,37,39,74,19,37,38,39,40,35,41,42,43,41,74,19,37,38,39,40,35,41,42,43,74,19,38,41,0,19,39,37,38,39,35,74,43,19,74,74,39,43,35,19,74,0,0,0,19,37,38,39,40,42,35,39,40,19,37,38,38,19,37,38,39,40,35,41,42,43,19,74,19,37,38,39,40,35,41,42,43,74,19,37,38,39,40,35,41,42,43,38,74,19,37,38,39,40,35,41,42,43,19,74,19,37,38,39,40,35,41,42,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,93,93,0,0,80,80,20,20,20,80,86,25,87,85,93,20,80,86,25,87,85,93,20,20,85,20,86,25,87,86,25,87,87,87,87,20,20,0,20,80,20,80,86,25,87,85,93,20,80,86,25,87,85,93,20,80,86,25,87,85,93,25,87,20,86,87,87,80,20,86,25,87,85,93,93,20,80,86,86,25,87,85,93,93,87,85,20,87,20,87,20,80,86,25,87,85,93,80,0,20,80,86,25,87,85,93,25,20,20,20,20,80,20,20,20,20,93,20,93,20,87,86,25,87,93,87,20,20,20,80,86,25,87,85,93,20,80,86,25,87,85,93,20,80,86,25,87,85,93,80,20,80,86,25,87,85,93,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,105,0,0,0,0,105,0,0,105,0,0,105,0,105,105,0,0,105,0,0,106,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,107,105,106,107,108,109,110,111,112,113,114,115,107,116,117,108,109,110,111,112,113,114,115,107,116,117,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,105,105,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,107,107,116,116,117,117,106,106,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,106,105,106,106,106,106,106,108,110,112,114,107,117,106,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,107,107,116,116,117,117,105,106,107,105,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,105,106,108,109,110,111,112,113,114,115,107,116,117,0,0,0,0,101,0,24,24,24,0,24,24,101,24,0,0,0,101,0,90,101,121,119,120,90,94,24,101,121,119,120,90,94,24,101,119,120,90,94,101,119,120,90,94,101,119,120,90,94,101,119,120,90,94,101,119,120,90,94,101,121,119,120,90,94,24,101,121,119,120,90,94,24,119,120,101,121,119,120,90,94,24,94,121,101,119,120,90,94,24,101,119,120,90,94,24,101,119,120,90,94,24,101,121,119,120,90,94,24,101,119,120,90,94,101,119,120,90,94,101,119,120,90,94,90,101,121,119,120,90,94,24,101,121,119,120,90,94,24,94,94,121,90,90,94,119,120,90,101,119,120,90,94,101,119,120,90,94,121,101,121,119,120,90,94,24,101,121,119,120,90,94,24,101,121,119,120,90,94,24,352,90,90,101,121,119,120,90,94,24,131,131,135,0,145,0,145,145,145,145,145,0,0,0,0,0,0,0,0,0,145,145,145,131,135,145,145,130,132,133,136,123,123,123,123,123,123,123,130,131,135,138,139,123,123,123,123,123,123,123,130,131,132,133,135,136,138,139,141,145,123,130,131,132,133,135,136,138,139,141,145,123,123,123,130,130,131,131,132,133,135,135,136,138,138,139,139,130,131,132,133,135,136,138,139,0,0,130,131,132,133,135,136,138,139,130,131,132,133,135,136,138,139,130,131,132,133,135,136,138,139,123,123,132,133,130,138,0,0,123,123,141,141,123,130,131,132,133,135,136,138,139,141,145,123,130,131,132,133,135,136,138,139,141,145,130,131,132,133,135,136,138,139,141,141,123,130,131,132,133,135,136,138,139,141,145,130,131,135,138,123,123,130,131,132,133,135,136,138,139,145,130,131,132,133,135,136,138,139,145,130,131,135,138,123,130,130,131,131,132,133,135,135,136,138,138,139,141,145,145,123,130,131,132,133,135,136,136,138,139,141,145,130,131,132,133,135,136,138,139,123,130,131,132,133,135,136,138,139,123,123,130,131,132,133,135,136,138,139,123,130,131,132,133,135,136,138,139,141,141,141,145,123,130,131,132,133,135,136,138,139,141,145,123,136,136,141,123,136,123,123,145,123,130,131,132,133,135,136,138,139,138,130,131,132,133,135,136,138,139,141,141,130,131,132,133,135,136,138,139,130,131,135,138,145,141,141,123,130,131,132,133,135,136,138,139,141,145,123,130,131,132,133,135,136,138,139,141,145,135,123,130,131,132,133,135,136,138,139,141,145,141,141,123,123,123,123,123,130,131,132,133,135,136,138,139,141,145,130,353,353,354,355,354,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,0,0,0,149,153,154,155,156,149,153,154,155,156,149,153,154,155,156,149,153,154,155,156,149,153,155,156,153,155,156,156,156,156,149,153,154,155,156,149,153,154,155,156,149,153,154,155,156,149,153,154,155,156,155,156,155,156,153,155,149,153,154,155,156,149,153,154,155,156,149,155,156,155,156,149,153,154,155,156,149,153,154,155,156,155,149,149,153,154,155,156,153,155,153,154,153,155,156,153,149,153,154,155,156,149,149,153,154,155,156,149,153,154,155,156,149,153,154,155,156,149,149,153,154,155,156,160,161,162,0,0,0,0,0,0,0,0,160,161,162,166,160,161,162,0,166,0,0,166,0,147,147,147,147,147,147,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,356,160,161,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,147,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,147,147,160,161,162,163,164,165,166,167,168,147,147,160,161,162,163,164,165,166,167,168,147,147,160,161,162,163,164,165,166,167,168,147,147,147,147,147,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,0,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,167,0,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,160,147,160,147,160,161,162,163,164,165,166,167,168,165,147,147,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,163,164,165,147,160,161,162,163,164,165,166,167,168,147,160,161,162,163,164,165,166,167,168,147,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,0,0,0,176,177,176,176,176,176,176,177,178,179,176,176,177,178,179,176,176,177,178,179,176,177,178,179,176,176,177,178,179,176,177,178,179,176,177,178,179,176,179,178,178,177,178,179,176,176,177,178,179,176,177,178,179,176,177,178,179,176,176,176,177,178,176,177,178,179,176,177,178,179,176,177,177,178,179,176,176,176,177,178,179,176,176,176,177,178,179,176,176,176,176,176,176,176,178,177,178,179,176,177,178,179,176,177,178,177,176,177,178,179,176,177,178,179,176,176,179,176,177,178,179,176,177,178,179,176,176,177,178,179,176,176,176,177,178,179,176,177,178,179,176,176,177,178,179,176,177,178,179,176,176,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,181,0,0,181,0,0,181,0,0,0,0,181,0,0,181,0,0,181,0,0,182,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,185,181,182,183,184,185,183,184,186,185,187,188,189,190,191,192,183,184,186,185,187,188,189,193,190,194,191,192,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,181,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,183,183,184,184,186,186,185,185,187,187,188,188,189,189,190,190,191,191,192,192,182,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,182,181,182,182,182,182,182,183,186,187,189,190,191,182,183,183,184,184,186,186,185,185,187,187,188,188,189,189,193,193,190,190,194,194,191,191,192,192,181,182,183,184,185,181,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,181,182,183,184,186,185,187,188,189,193,190,194,191,192,0,0,0,208,208,210,208,210,210,208,210,0,0,0,0,0,0,0,0,0,0,0,209,209,0,0,0,0,210,210,209,209,0,195,195,195,195,195,195,195,196,202,204,205,206,195,195,195,195,195,195,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,195,195,195,196,196,197,198,199,200,201,202,202,203,204,204,205,205,206,206,207,208,209,210,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,0,0,211,196,197,198,199,200,201,204,205,206,211,196,197,198,199,200,201,204,205,206,211,196,197,198,199,200,201,204,205,206,195,195,0,195,195,212,212,204,205,211,214,195,196,197,198,199,200,201,202,212,203,204,204,205,205,206,206,207,208,209,210,211,214,195,196,197,198,199,200,201,202,212,203,204,204,205,205,206,206,207,208,209,210,211,214,196,197,198,199,200,201,203,204,205,206,212,212,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,196,204,205,206,195,195,196,197,198,199,200,201,204,205,206,207,208,209,210,196,197,198,199,200,201,204,205,206,207,208,209,210,196,204,205,206,205,211,214,195,196,196,197,198,199,200,201,202,212,203,204,204,205,205,206,206,207,208,209,209,210,210,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,210,211,196,197,198,199,200,200,201,204,205,206,196,197,198,199,200,201,204,205,206,207,208,209,210,196,197,198,199,200,201,204,205,206,207,208,209,210,211,211,214,195,196,197,198,199,200,201,202,212,212,212,203,204,205,206,207,208,209,210,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,203,212,195,196,195,195,211,209,210,195,195,195,214,195,211,214,196,197,198,199,200,201,203,204,205,206,211,214,196,199,211,211,196,197,198,199,200,200,201,204,205,206,212,212,200,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,196,204,205,206,209,210,212,212,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,206,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,202,212,212,195,195,195,195,199,214,211,214,195,196,197,198,199,200,201,202,212,203,204,205,206,207,208,209,210,0,0,0,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,211,213,213,211,214,214,211,213,213,213,213,213,0,0,0,0,0,216,222,223,224,225,216,222,223,224,225,216,222,223,224,225,216,222,223,224,225,216,222,224,225,222,224,225,225,216,222,223,224,225,216,222,223,224,225,216,222,223,224,225,216,222,223,224,225,224,225,224,225,222,224,216,222,223,224,225,216,222,223,224,225,216,225,225,216,222,223,224,225,216,222,223,224,225,224,222,224,225,225,222,224,216,216,222,223,224,225,224,223,222,224,225,222,216,222,223,224,225,216,216,222,223,224,225,216,222,223,224,225,216,222,223,224,225,216,216,222,223,224,225,226,0,0,0,226,0,0,230,230,226,0,0,0,0,226,0,0,226,0,0,226,0,0,0,230,230,227,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,229,230,231,232,226,227,228,229,230,231,232,228,233,234,235,236,237,238,229,239,230,240,241,231,232,228,233,234,235,236,237,238,229,239,230,240,241,231,232,228,233,234,235,236,237,238,229,239,230,240,241,231,232,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,228,232,228,232,226,226,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,228,228,233,233,234,234,235,235,236,236,237,237,238,238,229,229,239,239,230,230,240,240,241,241,231,231,232,228,228,227,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,227,226,227,227,227,227,227,234,236,236,237,228,234,236,229,230,231,232,227,232,228,228,233,233,234,234,235,235,236,236,237,237,238,238,229,229,239,239,230,230,240,240,241,241,231,231,232,226,227,228,229,230,231,232,226,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,226,227,228,233,234,235,236,237,238,229,239,230,240,241,231,232,0,262,262,262,0,262,262,261,0,261,0,261,0,261,0,246,0,0,0,0,246,0,261,262,0,261,261,262,0,0,0,0,0,0,0,0,0,0,0,261,262,242,250,253,244,244,244,244,244,244,246,244,254,256,257,258,244,244,244,244,244,244,247,249,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,0,244,244,244,244,251,252,246,246,247,248,249,250,251,252,242,253,254,254,255,256,256,257,257,258,258,246,247,248,249,250,251,252,242,253,254,255,256,257,258,0,0,246,247,248,249,250,251,252,242,253,254,256,257,258,246,247,248,249,250,251,252,242,253,254,256,257,258,246,247,248,249,250,251,252,242,253,254,256,257,258,244,244,244,244,0,244,244,259,259,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,256,257,257,258,261,262,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,256,257,257,258,261,262,246,247,248,249,250,242,253,254,255,256,257,258,259,259,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,246,254,256,257,244,244,246,247,248,249,242,253,254,256,257,258,261,246,247,248,249,242,253,254,256,257,258,261,246,254,256,257,247,249,242,252,253,255,246,246,247,248,249,244,250,251,252,242,253,254,254,259,255,256,256,257,257,258,261,261,262,262,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,261,261,262,246,247,248,249,250,251,252,242,253,254,256,257,258,246,247,248,249,242,253,254,256,257,258,244,246,247,248,249,242,253,254,256,257,258,246,266,247,248,249,244,250,251,252,242,253,254,259,259,259,255,256,257,258,261,262,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,0,0,259,255,244,244,244,244,266,244,261,262,252,247,249,253,266,0,244,246,247,248,249,250,251,252,242,253,254,255,256,257,258,248,252,261,244,246,247,248,249,250,251,252,242,253,254,256,257,258,259,259,246,247,248,249,250,251,252,242,253,254,255,256,257,258,246,254,256,257,261,262,242,259,259,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,254,250,251,0,251,248,0,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,357,259,259,244,244,244,244,246,266,247,248,249,244,250,251,252,242,253,254,259,255,256,257,258,261,262,0,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,0,0,0,0,0,0,265,267,268,269,270,271,265,267,268,269,270,271,265,267,268,269,270,271,265,267,268,269,270,271,265,269,270,271,269,270,271,271,269,265,267,268,269,270,271,265,267,268,269,270,271,265,267,268,269,270,271,265,267,268,269,270,271,270,271,270,271,269,270,269,270,265,267,268,269,270,271,265,267,268,269,270,271,265,270,271,270,271,265,267,268,269,270,271,265,267,268,269,270,271,270,265,269,270,265,270,269,271,269,270,268,271,265,265,267,268,269,270,271,269,270,271,269,265,267,268,269,270,271,265,265,267,268,269,270,271,265,267,268,269,270,271,265,267,268,269,270,271,265,265,267,268,269,270,271,275,0,0,0,0,275,0,0,275,0,0,275,0,0,275,0,0,0,275,0,0,275,276,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,277,278,279,280,281,282,283,284,285,286,287,288,289,277,278,279,280,281,282,283,284,285,286,287,288,289,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,275,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,276,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,276,275,276,276,276,276,276,277,279,281,282,284,286,288,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,0,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,0,0,358,359,263,0,0,263,263,263,0,295,295,297,295,263,297,295,263,297,295,297,295,297,295,297,295,297,295,295,297,295,263,297,295,263,297,295,297,295,263,297,295,297,295,297,295,263,263,297,295,263,297,295,297,295,297,295,297,297,295,263,297,295,263,295,297,297,297,297,263,297,295,297,295,297,295,263,297,297,295,263,297,295,263,297,297,297,297,297,295,263,297,297,297,297,295,263,0,0,0,0,0,0,0,303,306,360,305,303,306,360,305,303,305,303,305,303,360,306,306,360,305,303,306,360,305,303,305,306,360,305,303,305,306,360,305,303,306,360,305,303,303,306,360,305,303,305,305,306,303,360,306,303,303,305,305,303,306,360,305,303,306,360,305,303,306,360,305,303,306,360,305,303,0,0,0,0,0,0,0,0,309,309,309,309,309,309,309,309,309,309,309,309,0,0,309,309,309,309,309,0,0,0,0,0,0,0,0,311,311,315,45,311,315,45,311,315,45,311,45,311,361,315,315,45,311,315,45,311,315,45,311,315,45,311,315,45,311,311,315,45,311,315,45,311,361,361,315,0,315,311,315,45,315,45,0,311,315,45,315,45,45,311,315,45,311,315,45,311,315,45,311,315,45,311,0,0,319,318,319,318,319,318,318,319,319,318,319,318,0,319,318,319,318,318,319,318,319,318,318,319,0,319,318,319,318,319,318,319,318,0,0,0,0,0,0,0,321,320,321,320,321,320,362,320,321,320,321,320,321,320,321,321,320,321,320,321,320,321,320,321,362,320,321,327,320,320,320,320,320,320,320,320,320,321,320,321,320,320,321,320,321,0,333,0,333,0,0,0,0,0,0,0,0,0,0,331,330,44,330,336,339,332,337,338,333,44,331,330,336,339,332,337,338,333,44,331,44,331,44,331,339,332,332,338,330,330,336,339,332,337,338,333,44,331,330,336,339,332,337,338,333,44,331,44,331,332,332,330,336,339,332,337,338,333,44,331,337,44,331,330,336,339,332,337,338,333,44,331,44,336,332,332,330,336,339,332,337,338,333,44,331,330,336,339,332,337,338,333,44,331,332,331,330,336,336,332,332,332,363,44,330,336,332,332,332,332,337,332,332,339,336,330,330,336,332,332,44,331,339,339,332,332,44,331,330,336,339,332,337,338,333,44,331,330,336,339,332,337,338,333,44,331,332,330,336,339,332,337,338,333,44,331,330,336,339,332,337,338,333,44,331,0,0,0,341,341,342,343,341,342,343,341,342,343,341,342,343,342,343,341,341,342,343,341,342,343,342,343,341,342,343,341,342,343,341,342,343,341,342,343,341,342,343,343,342,341,342,343,341,342,343,341,343,341,342,343,341,341,342,343,341,342,343,341,342,343,341,342,343,341,342,343,341,342,343,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,100,100,100,100,100,100,364,364,151,151,0,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,365,151,151,151,95,95,0,0,0,95,0,0,98,95,98,95,98,98,98,98,98,98,95,98,95,98,95,98,98,98,95,95,98,95,98,98,98,98,95,98,98,95,0,98,95,98,98,98,95,98,95,98,95,98,98,98,95,98,98,95,366,366,366,0,349,350,349,350,0,0,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,349,350,348,348,349,350,348,348,349,350,348,348,349,350,348,349,350,348,349,350,348,349,350,348,348,348,349,350,348,348,349,350,0,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[[]],0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[[],[[6,[4]]]],[5],[5],[5],0,[[7,8],[[6,[9]]]],[[7,8],[[6,[9]]]],[[4,8],10],[[]],[[]],[[]],[1,[[3,[[12,[11]]]]]],[[1,[15,[[12,[13]],14]]],[[3,[[12,[11]]]]]],0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[7,16],0,[[17,18]],0,0,0,[[19,20,18,21],1],[[19,20,[22,[4]],18,21],1],[1,23],0,0,[[1,11],[[6,[24]]]],[[1,25],[[3,[[15,[[12,[13]],14]]]]]],[26],[[1,23,14]],0,[[1,23]],[[19,20,18,21],27],[[1,28]],[[1,29],[[3,[[12,[11]]]]]],0,[4,6],[1],[1,16],[[]],[[],30],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,[34,[32,33]]]],0,0,0,[35,[[34,[14,36]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[19,19],[37,37],[38,38],[39,39],[40,40],[35,35],[41,41],[42,42],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[44,45,21],46],0,[38,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[41,49],[[27,[18]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[19]]]],[[],[[6,[37]]]],[[],[[6,[38]]]],[[],[[6,[39]]]],[[],[[6,[40]]]],[[],[[6,[42]]]],[[50,51,14,35,41,[0,[52,53]],21],[[27,[[3,[19]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[42,42],16],[[],16],[54,55],0,0,0,0,[[19,8],10],[[37,8],10],[[38,8],10],[[39,8],10],[[40,8],10],[[35,8],10],[[42,8],10],[[]],[[50,35,14,55,55,55,[34,[32,33]]],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[56]]],41],[[]],[[]],[50,[[6,[57]]]],[58,[[12,[58]]]],[[58,59,50],[[60,[14,35]]]],[[61,14,34,62],44],[[61,61,63,14,58,34,30,64,65],35],[[41,66],[[2,[56]]]],[[],[[34,[67,67]]]],[[],23],[19,59],[[34,32],[[27,[68]]]],[[19,32],[[27,[33]]]],[[19,32],[[27,[69]]]],[[19,[70,[66]]],[[27,[32]]]],[42],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[41,19,71,21],[[27,[[73,[72]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,49],[38,49],[41,74],[75,[[6,[57]]]],0,0,0,0,0,0,[[]],0,[19,44],[74,2],0,0,0,[35,[[34,[14,40]]]],0,0,0,0,0,[19,6],[37,6],[38,6],[39,6],[40,6],[42,6],0,0,0,[19,45],0,[[],[[12,[76,77]]]],[[38,41],78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,60,41,[0,[52,53]]],[[34,[14,19]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[38,41],[[27,[78]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[19,14,41],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],[[6,[79]]]],[79,6],[[],[[6,[63]]]],[63,6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[80,81]],[[80,81]],[20,82],[20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,83],[[20,[0,[49,84]]],85],0,0,[86,86],[25,25],[87,87],[[]],[[]],[[]],[18,[[6,[87,88]]]],[87,[[6,[5,47]]]],[48,[[6,[5,47]]]],[20,89],0,0,[20,18],[[],80],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[20,23],[[2,[90]]]],[[86,86],16],[[87,87],16],[[],16],0,[[20,89,11,[92,[91]]],90],[[86,8],10],[[25,8],10],[[87,8],10],[[85,8],10],[[93,8],10],[[93,8],10],[[]],[[]],[[]],[94,86],[[]],[[]],[[]],[[]],[95,93],[73,[[6,[96]]]],[[85,32],97],[20,25],[[],23],[20,[[2,[23]]]],[87],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[19,71,41,21],[[27,[20]]]],[[19,71,41,[73,[72]]],20],0,[[20,11,[2,[[92,[91]]]]],90],[[20,89]],[[20,89,98,85],[[6,[93]]]],[[20,89,23],[[92,[91]]]],[26],[[20,11,89,12,[92,[91]]],90],[93,[[2,[99]]]],[[20,98],[[6,[93]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[],30],0,0,[[20,91],[[2,[100]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[80,[[6,[95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,30],[101,30],0,[[]],[[]],[[83,32,30,102],[[104,[[103,[29]]]]]],[5],[5],[5],0,[[]],[[],5],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,105],[106,106],[107,107],[[]],[[]],[[]],[18,[[6,[108,88]]]],[18,[[6,[109,88]]]],[18,[[6,[110,88]]]],[18,[[6,[111,88]]]],[18,[[6,[112,88]]]],[18,[[6,[113,88]]]],[18,[[6,[114,88]]]],[18,[[6,[115,88]]]],[18,[[6,[107,88]]]],[18,[[6,[116,88]]]],[18,[[6,[117,88]]]],[108,[[6,[5,47]]]],[109,[[6,[5,47]]]],[110,[[6,[5,47]]]],[111,[[6,[5,47]]]],[112,[[6,[5,47]]]],[113,[[6,[5,47]]]],[114,[[6,[5,47]]]],[115,[[6,[5,47]]]],[107,[[6,[5,47]]]],[116,[[6,[5,47]]]],[117,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[105,8],10],[[105,8],10],[[108,8],10],[[109,8],10],[[110,8],10],[[111,8],10],[[112,8],10],[[113,8],10],[[114,8],10],[[115,8],10],[[107,8],10],[[116,8],10],[[117,8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[106,5],[[2,[105]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],106],[106,5],0,[106,2],[106,2],[[106,5],2],[108,6],[110,6],[112,6],[114,6],[107,6],[117,6],[106],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[90,118,90],[[6,[90,24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[119,119],[120,120],[90,90],[94,94],[[]],[[]],[[]],[[]],[[]],[73,[[6,[101,88]]]],[73,[[6,[119,88]]]],[73,[[6,[120,88]]]],[73,[[6,[90,88]]]],[73,[[6,[94,88]]]],[101,[[6,[5,47]]]],[119,[[6,[5,47]]]],[120,[[6,[5,47]]]],[90,[[6,[5,47]]]],[94,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[119]]]],[[],[[6,[120]]]],[5],[5],[5],[5],[5],[5],[5],0,0,[[101,101],16],[[119,119],16],[[120,120],16],[[90,90],16],[[94,94],16],[[24,24],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[101,8],[[6,[9]]]],[[119,8],[[6,[9]]]],[[120,8],[[6,[9]]]],[[90,8],[[6,[9]]]],[[94,8],[[6,[9]]]],[[24,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[101],[119],[120],[90],[94],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[23,[34,[14,[12,[101,77]],77]],[92,[91,77]],[2,[90]]],90],0,0,[119,6],[120,6],0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],121],[[90,2],[[6,[24]]]],[[90,122],[[6,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[123,[[12,[[124,[123]],77]]]],[[],[[12,[[124,[72]],77]]]],[[123,125,89],[[104,[[103,[29,77]]]]]],[[125,89,126,97],[[104,[[103,[29,77]]]]]],[[123,89,127],[[104,[[103,[29,77]]]]]],[[89,128,127],[[104,[[103,[29,77]]]]]],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[123,89,82],[[104,[[103,[29,77]]]]]],[[89,82],[[104,[[103,[29,77]]]]]],[89,[[104,[[103,[29,77]]]]]],[[123,89],[[104,[[103,[29,77]]]]]],[[89,[12,[77]]],[[104,[[103,[29,77]]]]]],[[123,89,[12,[77]]],[[104,[[103,[29,77]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,49]],[[],97],0,[59,126],[130,130],[59,128],[131,131],[132,132],[133,133],[59,134],[135,135],[136,136],[59,137],[138,138],[[],97],[139,139],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[73,[[6,[130,88]]]],[73,[[6,[131,88]]]],[73,[[6,[132,88]]]],[73,[[6,[133,88]]]],[73,[[6,[135,88]]]],[73,[[6,[136,88]]]],[73,[[6,[138,88]]]],[73,[[6,[139,88]]]],[130,[[6,[5,47]]]],[131,[[6,[5,47]]]],[132,[[6,[5,47]]]],[133,[[6,[5,47]]]],[135,[[6,[5,47]]]],[136,[[6,[5,47]]]],[138,[[6,[5,47]]]],[139,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[89,59],[[104,[[103,[29,77]]]]]],[[123,89],[[104,[[103,[29,77]]]]]],0,0,0,0,0,0,[[],140],[123],[[],140],[141,142],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[130]]]],[[],[[6,[131]]]],[[],[[6,[132]]]],[[],[[6,[133]]]],[[],[[6,[135]]]],[[],[[6,[136]]]],[[],[[6,[138]]]],[[],[[6,[139]]]],[[51,14,59,143,21],[[104,[[103,[29,77]]]]]],[[141,51,14,59,143,21],[[104,[[103,[29,77]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],23],[[],23],[[],23],[[],23],[[144,89],[[104,[[103,[29,77]]]]]],[[123,144,89],[[104,[[103,[29,77]]]]]],[[130,130],16],[[131,131],16],[[132,132],16],[[133,133],16],[[135,135],16],[[136,136],16],[[138,138],16],[[139,139],16],[[145,145],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[126,16],[128,16],[134,16],[137,16],[[123,8],[[6,[9]]]],[[130,8],[[6,[9]]]],[[130,8],[[6,[9]]]],[[131,8],[[6,[9]]]],[[131,8],[[6,[9]]]],[[132,8],[[6,[9]]]],[[133,8],[[6,[9]]]],[[135,8],[[6,[9]]]],[[135,8],[[6,[9]]]],[[136,8],[[6,[9]]]],[[138,8],[[6,[9]]]],[[138,8],[[6,[9]]]],[[139,8],[[6,[9]]]],[[141,8],[[6,[9]]]],[[145,8],[[6,[9]]]],[[145,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[146,136],[[]],[[]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[123,89,147],29],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[123,89,148],29],[[123,89],29],[130],[131],[132],[133],[135],[136],[138],[139],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[141,33,71,34,21],[[104,[[103,[29,77]]]]]],[[33,71,34,21],[[104,[[103,[29,77]]]]]],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,89],29],0,0,[[],66],[149,123],0,[[89,127,59],[[104,[[103,[29,77]]]]]],[[123,89,127],[[104,[[103,[29,77]]]]]],[26],[[123,89,136],29],[130,6],[131,6],[132,6],[133,6],[135,6],[136,6],[138,6],[139,6],0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[141,102],[[6,[150,57]]]],[102,[[6,[150,57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[141,143],[[34,[14,33,77]]]],[143,[[34,[14,33,77]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[151,[[6,[135,7]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[141,14,33],[[6,[57]]]],[[14,33],[[6,[57]]]],[[125,89,97,126],[[104,[[103,[29,77]]]]]],[[123,125,89],[[104,[[103,[29,77]]]]]],[[123,89],[[104,[[103,[29,77]]]]]],[[89,128],[[104,[[103,[29,77]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[142,142],[[]],[[152,59],[[6,[137,88]]]],[[142,152],[[6,[138,88]]]],[[152,59],[[6,[126,88]]]],[[142,152],[[6,[130,88]]]],[[152,59],[[6,[128,88]]]],[[142,152],[[6,[131,88]]]],[[142,152],[[6,[135,88]]]],[[152,59],[[6,[134,88]]]],[[],142],[5],[5],[5],[[142,8],[[6,[9]]]],[[]],[[],5],[[]],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[149,149],[153,153],[154,154],[155,155],[156,156],[[]],[[]],[[]],[[]],[[]],0,[153,[[6,[5,47]]]],[155,[[6,[5,47]]]],[156,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],0,0,[[],156],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[149]]]],[[],[[6,[153]]]],[[],[[6,[154]]]],[[],[[6,[155]]]],[[],[[6,[156]]]],[5],[5],[5],[5],[5],[[155,155],16],[[156,156],16],[[],16],[[],16],0,0,[[149,8],[[6,[9]]]],[[153,8],[[6,[9]]]],[[154,8],[[6,[9]]]],[[155,8],[[6,[9]]]],[[156,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[],149],[[],23],[[],23],[155],[156],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[155,66],0,[149,6],[153,6],[154,6],[155,6],[156,6],[153,5],0,0,0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[153,157],[[]],[[]],[[]],[[]],[[]],[149],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[149,14],[[6,[57]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],147],[[],158],[147,148],[147],[147],[[],5],[[]],[147],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[[12,[159,77]]]]]],[147,147],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[147,147],169],[73,[[6,[147,88]]]],[73,[[6,[160,88]]]],[73,[[6,[161,88]]]],[73,[[6,[162,88]]]],[73,[[6,[163,88]]]],[73,[[6,[164,88]]]],[73,[[6,[165,88]]]],[73,[[6,[166,88]]]],[73,[[6,[167,88]]]],[73,[[6,[168,88]]]],[147,[[6,[5,47]]]],[160,[[6,[5,47]]]],[161,[[6,[5,47]]]],[162,[[6,[5,47]]]],[163,[[6,[5,47]]]],[164,[[6,[5,47]]]],[165,[[6,[5,47]]]],[166,[[6,[5,47]]]],[167,[[6,[5,47]]]],[168,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[],147],[160,147],[161,147],[5],[147],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[147]]]],[[],[[6,[160]]]],[[],[[6,[161]]]],[[],[[6,[162]]]],[[],[[6,[163]]]],[[],[[6,[164]]]],[[],[[6,[165]]]],[[],[[6,[166]]]],[[],[[6,[167]]]],[[],[[6,[168]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[147,147],16],[[160,160],16],[[161,161],16],[[162,162],16],[[163,163],16],[[164,164],16],[[165,165],16],[[166,166],16],[[167,167],16],[[168,168],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[147,8],[[6,[9]]]],[[147,8],[[6,[9]]]],[[147,8],[[6,[9]]]],[[160,8],[[6,[9]]]],[[161,8],[[6,[9]]]],[[162,8],[[6,[9]]]],[[163,8],[[6,[9]]]],[[164,8],[[6,[9]]]],[[165,8],[[6,[9]]]],[[166,8],[[6,[9]]]],[[167,8],[[6,[9]]]],[[168,8],[[6,[9]]]],[[]],[148,147],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[170]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],147],[148,147],[[],147],[[],[[6,[147,171]]]],[[],[[6,[147,171]]]],[50,[[6,[147]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[147],[160],[161],[162],[163],[164],[165],[166],[167],[168],0,[147],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147],[[165,122],167],0,[[147,147],[[2,[169]]]],[147,6],[160,6],[161,6],[162,6],[163,6],[164,6],[165,6],[166,6],[167,6],[168,6],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[160,127],161],[[],30],[160,162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[165,[[6,[172,173]]]],[[],30],[[],[[6,[158,174]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[151,[[6,[163,7]]]],[151,[[6,[164,7]]]],[151,[[6,[165,7]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],0,[[]],[[]],[175,175],[[]],[73,[[6,[175,88]]]],[175,[[6,[5,47]]]],[48,[[6,[5,47]]]],[175,147],[5],[5],[[],[[6,[175]]]],[5],[[175,175],16],[[],16],[[175,8],[[6,[9]]]],[[]],[73,[[6,[96]]]],[[],23],[175],[[],5],[[]],0,[175,6],[[],[[12,[76,77]]]],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,[[],176],0,[[],158],[176,148],[176],[176],[[],5],[[]],[[]],[[]],[176],[[]],[[]],[[]],[[]],[[]],[[],[[6,[[12,[159,77]]]]]],[177,177],[178,178],[179,179],[176,176],[[]],[[]],[[]],[[]],[[176,176],169],[73,[[6,[177,88]]]],[73,[[6,[178,88]]]],[73,[[6,[179,88]]]],[73,[[6,[176,88]]]],[177,[[6,[5,47]]]],[178,[[6,[5,47]]]],[179,[[6,[5,47]]]],[176,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],0,[178,147],0,[5],[5],[5],[5],[176],[5],[5],[5],[5],[[],[[6,[177]]]],[[],[[6,[178]]]],[[],[[6,[179]]]],[[],[[6,[176]]]],[5],[5],[5],[5],[[]],[[]],0,0,[[]],[[177,177],16],[[178,178],16],[[179,179],16],[[176,176],16],[[],16],[[],16],[[],16],[[],16],0,[[177,8],[[6,[9]]]],[[178,8],[[6,[9]]]],[[179,8],[[6,[9]]]],[[176,8],[[6,[9]]]],[[176,8],[[6,[9]]]],[[176,8],[[6,[9]]]],[[]],[[]],[[]],[148,176],[[]],[[],[[6,[170]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],176],[148,176],[[],176],[[],[[6,[176,171]]]],[[],[[6,[176,171]]]],[50,[[6,[176]]]],0,[[],23],[[],23],[[],23],[[],23],[177],[178],[179],[176],0,0,[177,176],[176],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[176],0,[[176,176],[[2,[169]]]],[177,6],[178,6],[179,6],[176,6],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],30],[[]],[[]],[[]],[[]],[[],30],[[],[[6,[158,174]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[151,[[6,[176,7]]]],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[],6],0,[[]],[[]],[180,148],0,[180,180],[[]],[73,[[6,[180,88]]]],[180,[[6,[5,47]]]],[48,[[6,[5,47]]]],[180,147],[5],[5],[[],[[6,[180]]]],[5],[[180,180],16],[[],16],[[180,8],[[6,[9]]]],[[]],[73,[[6,[96]]]],0,[[],23],[180],0,[[],5],[[]],0,[180,6],0,[[],[[12,[76,77]]]],[[]],[[],6],[[],6],[[],31],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181,181],[182,182],[183,183],[184,184],[185,185],[[]],[[]],[[]],[[]],[[]],[73,[[6,[183,88]]]],[73,[[6,[184,88]]]],[73,[[6,[186,88]]]],[73,[[6,[185,88]]]],[73,[[6,[187,88]]]],[73,[[6,[188,88]]]],[73,[[6,[189,88]]]],[73,[[6,[190,88]]]],[73,[[6,[191,88]]]],[73,[[6,[192,88]]]],[183,[[6,[5,47]]]],[184,[[6,[5,47]]]],[186,[[6,[5,47]]]],[185,[[6,[5,47]]]],[187,[[6,[5,47]]]],[188,[[6,[5,47]]]],[189,[[6,[5,47]]]],[193,[[6,[5,47]]]],[190,[[6,[5,47]]]],[194,[[6,[5,47]]]],[191,[[6,[5,47]]]],[192,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[181,8],[[6,[9]]]],[[181,8],[[6,[9]]]],[[183,8],[[6,[9]]]],[[184,8],[[6,[9]]]],[[186,8],[[6,[9]]]],[[185,8],[[6,[9]]]],[[187,8],[[6,[9]]]],[[188,8],[[6,[9]]]],[[189,8],[[6,[9]]]],[[193,8],[[6,[9]]]],[[190,8],[[6,[9]]]],[[194,8],[[6,[9]]]],[[191,8],[[6,[9]]]],[[192,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],182],[182,5],0,[182,2],[182,2],[[182,5],2],[183,6],[186,6],[187,6],[189,6],[190,6],[191,6],[182],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[12,[[124,[72]],77]]]],[195,[[12,[[124,[195]],77]]]],[[195,125,89],[[104,[[103,[29,77]]]]]],[[125,89,126,97],[[104,[[103,[29,77]]]]]],[[195,89,127],[[104,[[103,[29,77]]]]]],[[89,128,127],[[104,[[103,[29,77]]]]]],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[195,89,82],[[104,[[103,[29,77]]]]]],[[89,82],[[104,[[103,[29,77]]]]]],[[195,89],[[104,[[103,[29,77]]]]]],[89,[[104,[[103,[29,77]]]]]],[[195,89,[12,[77]]],[[104,[[103,[29,77]]]]]],[[89,[12,[77]]],[[104,[[103,[29,77]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[195,[0,[49,84]]]],0,[196,196],[59,137],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[[],97],[203,203],[59,126],[204,204],[205,205],[59,128],[206,206],[59,134],[207,207],[208,208],[209,209],[210,210],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[73,[[6,[211,88]]]],[73,[[6,[196,88]]]],[73,[[6,[197,88]]]],[73,[[6,[198,88]]]],[73,[[6,[199,88]]]],[73,[[6,[200,88]]]],[73,[[6,[201,88]]]],[73,[[6,[204,88]]]],[73,[[6,[205,88]]]],[73,[[6,[206,88]]]],[211,[[6,[5,47]]]],[196,[[6,[5,47]]]],[197,[[6,[5,47]]]],[198,[[6,[5,47]]]],[199,[[6,[5,47]]]],[200,[[6,[5,47]]]],[201,[[6,[5,47]]]],[204,[[6,[5,47]]]],[205,[[6,[5,47]]]],[206,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[89,59],[[104,[[103,[29,77]]]]]],[[195,89],[[104,[[103,[29,77]]]]]],0,[195],[[],140],[[],140],[212,213],[[],204],[[],205],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[204],[5],[205],[206],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[204],[5],[5],[205],[206],[5],[5],[5],[5],[5],[[],[[6,[211]]]],[[],[[6,[214]]]],[[],[[6,[196]]]],[[],[[6,[197]]]],[[],[[6,[198]]]],[[],[[6,[199]]]],[[],[[6,[200]]]],[[],[[6,[201]]]],[[],[[6,[203]]]],[[],[[6,[204]]]],[[],[[6,[205]]]],[[],[[6,[206]]]],[[51,14,59,143,21],[[104,[[103,[29,77]]]]]],[[212,51,14,59,143,21],[[104,[[103,[29,77]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],23],[[],23],[[],23],[[],23],[[144,89],[[104,[[103,[29,77]]]]]],[[195,144,89],[[104,[[103,[29,77]]]]]],[[196,196],16],[[197,197],16],[[198,198],16],[[199,199],16],[[200,200],16],[[201,201],16],[[204,204],16],[[205,205],16],[[206,206],16],[[207,207],16],[[208,208],16],[[209,209],16],[[210,210],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[137,16],[126,16],[128,16],[134,16],[205],[[211,8],[[6,[9]]]],[[214,8],[[6,[9]]]],[[195,8],[[6,[9]]]],[[196,8],[[6,[9]]]],[[196,8],[[6,[9]]]],[[197,8],[[6,[9]]]],[[198,8],[[6,[9]]]],[[199,8],[[6,[9]]]],[[200,8],[[6,[9]]]],[[201,8],[[6,[9]]]],[[202,8],[[6,[9]]]],[[212,8],[[6,[9]]]],[[203,8],[[6,[9]]]],[[204,8],[[6,[9]]]],[[204,8],[[6,[9]]]],[[205,8],[[6,[9]]]],[[205,8],[[6,[9]]]],[[206,8],[[6,[9]]]],[[206,8],[[6,[9]]]],[[207,8],[[6,[9]]]],[[208,8],[[6,[9]]]],[[209,8],[[6,[9]]]],[[209,8],[[6,[9]]]],[[210,8],[[6,[9]]]],[[210,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,210],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],200],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[196],[197],[198],[199],[200],[201],[204],[205],[206],[207],[208],[209],[210],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[33,71,34,21],[[104,[[103,[29,77]]]]]],[[],5],[[212,33,71,34,21],[[104,[[103,[29,77]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],66],[216,195],0,[[195,89,127],[[104,[[103,[29,77]]]]]],[[89,127,59],[[104,[[103,[29,77]]]]]],0,[26],[26],[195,[[60,[58,217,218]]]],0,0,0,0,[211,6],[214,6],[196,6],[197,6],[198,6],[199,6],[200,6],[201,6],[203,6],[204,6],[205,6],[206,6],[[211,219],[[6,[214,57]]]],0,0,[199,172],0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[200,[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[102,[[6,[150,57]]]],[[212,102],[[6,[150,57]]]],[200,220],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[143,[[34,[14,33,77]]]],[[212,143],[[34,[14,33,77]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[151,[[6,[206,7]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[14,33],[[6,[57]]]],[[212,14,33],[[6,[57]]]],[[195,125,89],[[104,[[103,[29,77]]]]]],[[125,89,97,126],[[104,[[103,[29,77]]]]]],[[89,128],[[104,[[103,[29,77]]]]]],[[195,89],[[104,[[103,[29,77]]]]]],[[199,217],16],[[214,221],[[6,[211,173]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[213,213],[[]],[[213,152],[[6,[196,88]]]],[[152,59],[[6,[137,88]]]],[[213,152],[[6,[204,88]]]],[[152,59],[[6,[126,88]]]],[[152,59],[[6,[128,88]]]],[[213,152],[[6,[205,88]]]],[[213,152],[[6,[206,88]]]],[[152,59],[[6,[134,88]]]],[[],213],[5],[5],[5],[[213,8],[[6,[9]]]],[[]],0,[[],5],[[]],0,0,0,0,[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[216,216],[222,222],[223,223],[224,224],[225,225],[[]],[[]],[[]],[[]],[[]],0,[222,[[6,[5,47]]]],[224,[[6,[5,47]]]],[225,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[],225],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[216]]]],[[],[[6,[222]]]],[[],[[6,[223]]]],[[],[[6,[224]]]],[[],[[6,[225]]]],[5],[5],[5],[5],[5],[[224,224],16],[[225,225],16],[[],16],[[],16],0,0,[[216,8],[[6,[9]]]],[[222,8],[[6,[9]]]],[[223,8],[[6,[9]]]],[[224,8],[[6,[9]]]],[[225,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[],216],[[],23],[225],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[224,66],0,0,0,0,0,0,0,[216,6],[222,6],[223,6],[224,6],[225,6],0,0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[222,157],[[]],[[]],[[]],[[]],[[]],[216],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[216,14],[[6,[57]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[228,88]]]],[73,[[6,[233,88]]]],[73,[[6,[234,88]]]],[73,[[6,[235,88]]]],[73,[[6,[236,88]]]],[73,[[6,[237,88]]]],[73,[[6,[238,88]]]],[73,[[6,[229,88]]]],[73,[[6,[239,88]]]],[73,[[6,[230,88]]]],[73,[[6,[240,88]]]],[73,[[6,[241,88]]]],[73,[[6,[231,88]]]],[73,[[6,[232,88]]]],[228,[[6,[5,47]]]],[233,[[6,[5,47]]]],[234,[[6,[5,47]]]],[235,[[6,[5,47]]]],[236,[[6,[5,47]]]],[237,[[6,[5,47]]]],[238,[[6,[5,47]]]],[229,[[6,[5,47]]]],[239,[[6,[5,47]]]],[230,[[6,[5,47]]]],[240,[[6,[5,47]]]],[241,[[6,[5,47]]]],[231,[[6,[5,47]]]],[232,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[232]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[228,228],16],[[232,232],16],[[],16],[[],16],[[226,8],[[6,[9]]]],[[226,8],[[6,[9]]]],[[228,8],[[6,[9]]]],[[233,8],[[6,[9]]]],[[234,8],[[6,[9]]]],[[235,8],[[6,[9]]]],[[236,8],[[6,[9]]]],[[237,8],[[6,[9]]]],[[238,8],[[6,[9]]]],[[229,8],[[6,[9]]]],[[239,8],[[6,[9]]]],[[230,8],[[6,[9]]]],[[240,8],[[6,[9]]]],[[241,8],[[6,[9]]]],[[231,8],[[6,[9]]]],[[232,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],23],[228],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],227],[227,5],0,[227,2],[227,2],[[227,5],2],0,0,0,0,[228,6],[234,6],[236,6],[229,6],[230,6],[231,6],[232,6],[227],0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[242,243],0,0,[244,[[12,[[124,[244]],77]]]],[[],[[12,[[124,[72]],77]]]],[[244,125,89],[[104,[[103,[29,77]]]]]],[[125,89,126,97],[[104,[[103,[29,77]]]]]],[[244,89,127],[[104,[[103,[29,77]]]]]],[[89,128,127],[[104,[[103,[29,77]]]]]],[[],129],[[],129],[[],129],[[],129],[[],129],[[],129],[[244,89,82],[[104,[[103,[29,77]]]]]],[[89,82],[[104,[[103,[29,77]]]]]],[[244,89],[[104,[[103,[29,77]]]]]],[89,[[104,[[103,[29,77]]]]]],[[89,[12,[77]]],[[104,[[103,[29,77]]]]]],[[244,89,[12,[77]]],[[104,[[103,[29,77]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[89,245],29],0,[[],97],[[244,49]],0,0,0,[59,137],[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[242,242],[253,253],[59,134],[254,254],[255,255],[59,126],[256,256],[59,128],[257,257],[258,258],[[],97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[73,[[6,[246,88]]]],[73,[[6,[247,88]]]],[73,[[6,[248,88]]]],[73,[[6,[249,88]]]],[73,[[6,[250,88]]]],[73,[[6,[251,88]]]],[73,[[6,[252,88]]]],[73,[[6,[242,88]]]],[73,[[6,[253,88]]]],[73,[[6,[254,88]]]],[73,[[6,[256,88]]]],[73,[[6,[257,88]]]],[73,[[6,[258,88]]]],[246,[[6,[5,47]]]],[247,[[6,[5,47]]]],[248,[[6,[5,47]]]],[249,[[6,[5,47]]]],[250,[[6,[5,47]]]],[251,[[6,[5,47]]]],[252,[[6,[5,47]]]],[242,[[6,[5,47]]]],[253,[[6,[5,47]]]],[254,[[6,[5,47]]]],[256,[[6,[5,47]]]],[257,[[6,[5,47]]]],[258,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[244,89],29],[[89,59],[[104,[[103,[29,77]]]]]],[[244,89],[[104,[[103,[29,77]]]]]],[[244,89],29],0,[[],140],[244],[259,260],[[],140],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[256],[5],[257],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[256],[5],[257],[5],[5],[5],[5],[[],[[6,[246]]]],[[],[[6,[247]]]],[[],[[6,[248]]]],[[],[[6,[249]]]],[[],[[6,[250]]]],[[],[[6,[242]]]],[[],[[6,[253]]]],[[],[[6,[254]]]],[[],[[6,[255]]]],[[],[[6,[256]]]],[[],[[6,[257]]]],[[],[[6,[258]]]],[[51,14,59,143,21],[[104,[[103,[29,77]]]]]],[[259,51,14,59,143,21],[[104,[[103,[29,77]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],23],[[],23],[[],23],[[],23],[[144,89],[[104,[[103,[29,77]]]]]],[[244,144,89],[[104,[[103,[29,77]]]]]],[[246,246],16],[[247,247],16],[[248,248],16],[[249,249],16],[[242,242],16],[[253,253],16],[[254,254],16],[[256,256],16],[[257,257],16],[[258,258],16],[[261,261],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[137,16],[134,16],[126,16],[128,16],0,0,0,0,0,0,[[246,8],[[6,[9]]]],[[246,8],[[6,[9]]]],[[247,8],[[6,[9]]]],[[248,8],[[6,[9]]]],[[249,8],[[6,[9]]]],[[244,8],[[6,[9]]]],[[250,8],[[6,[9]]]],[[251,8],[[6,[9]]]],[[252,8],[[6,[9]]]],[[242,8],[[6,[9]]]],[[253,8],[[6,[9]]]],[[254,8],[[6,[9]]]],[[254,8],[[6,[9]]]],[[259,8],[[6,[9]]]],[[255,8],[[6,[9]]]],[[256,8],[[6,[9]]]],[[256,8],[[6,[9]]]],[[257,8],[[6,[9]]]],[[257,8],[[6,[9]]]],[[258,8],[[6,[9]]]],[[261,8],[[6,[9]]]],[[261,8],[[6,[9]]]],[[262,8],[[6,[9]]]],[[262,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[263,261],[57,261],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[244,89],29],[246],[247],[248],[249],[242],[253],[254],[256],[257],[258],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[259,33,71,34,21],[[104,[[103,[29,77]]]]]],[[33,71,34,21],[[104,[[103,[29,77]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[264,64],16],0,[[],66],0,[[265,71,34,21],29],[[265,71,245,21],29],[[89,127,59],[[104,[[103,[29,77]]]]]],[[244,89,127],[[104,[[103,[29,77]]]]]],0,[[244,[12,[77]]]],[26],[26],0,0,0,0,0,[[71,245,28],29],0,[246,6],[247,6],[248,6],[249,6],[250,6],[251,6],[252,6],[242,6],[253,6],[254,6],[255,6],[256,6],[257,6],[258,6],0,0,[261,[[2,[99]]]],[244,29],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[259,102],[[6,[150,57]]]],[102,[[6,[150,57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[143,[[34,[14,33,77]]]],[[259,143],[[34,[14,33,77]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[151,[[6,[254,7]]]],0,0,0,0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],266],[[259,14,33],[[6,[57]]]],[[14,33],[[6,[57]]]],[[244,125,89],[[104,[[103,[29,77]]]]]],[[125,89,97,126],[[104,[[103,[29,77]]]]]],[[244,89],[[104,[[103,[29,77]]]]]],[[89,128],[[104,[[103,[29,77]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[260,260],[[]],[[260,152],[[6,[246,88]]]],[[152,59],[[6,[137,88]]]],[[260,152],[[6,[256,88]]]],[[152,59],[[6,[126,88]]]],[[152,59],[[6,[128,88]]]],[[260,152],[[6,[257,88]]]],[[152,59],[[6,[134,88]]]],[[260,152],[[6,[254,88]]]],[[],260],[5],[5],[5],[[260,8],[[6,[9]]]],[[]],[[],5],[[]],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[265,265],[267,267],[268,268],[269,269],[270,270],[271,271],[[]],[[]],[[]],[[]],[[]],[[]],0,[269,[[6,[5,47]]]],[270,[[6,[5,47]]]],[271,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[],271],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[265]]]],[[],[[6,[267]]]],[[],[[6,[268]]]],[[],[[6,[269]]]],[[],[[6,[270]]]],[[],[[6,[271]]]],[5],[5],[5],[5],[5],[5],[[270,270],16],[[271,271],16],[[],16],[[],16],0,0,0,0,[[265,8],[[6,[9]]]],[[267,8],[[6,[9]]]],[[268,8],[[6,[9]]]],[[269,8],[[6,[9]]]],[[270,8],[[6,[9]]]],[[271,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],265],[[],23],[[],23],[270],[271],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[270,66],0,0,0,[[[34,[14,272,77]],273,5,64,65],265],[[[274,[272]],64,65],270],0,0,0,0,0,0,0,[265,6],[267,6],[268,6],[269,6],[270,6],[271,6],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[269,157],[[]],[[]],[[]],[[]],[[]],[[]],[265],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[265,14],[[6,[57]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],[285,285],[286,286],[287,287],[288,288],[289,289],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[277,88]]]],[73,[[6,[278,88]]]],[73,[[6,[279,88]]]],[73,[[6,[280,88]]]],[73,[[6,[281,88]]]],[73,[[6,[282,88]]]],[73,[[6,[283,88]]]],[73,[[6,[284,88]]]],[73,[[6,[285,88]]]],[73,[[6,[286,88]]]],[73,[[6,[287,88]]]],[73,[[6,[288,88]]]],[73,[[6,[289,88]]]],[277,[[6,[5,47]]]],[278,[[6,[5,47]]]],[279,[[6,[5,47]]]],[280,[[6,[5,47]]]],[281,[[6,[5,47]]]],[282,[[6,[5,47]]]],[283,[[6,[5,47]]]],[284,[[6,[5,47]]]],[285,[[6,[5,47]]]],[286,[[6,[5,47]]]],[287,[[6,[5,47]]]],[288,[[6,[5,47]]]],[289,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[275,8],[[6,[9]]]],[[275,8],[[6,[9]]]],[[277,8],[[6,[9]]]],[[278,8],[[6,[9]]]],[[279,8],[[6,[9]]]],[[280,8],[[6,[9]]]],[[281,8],[[6,[9]]]],[[282,8],[[6,[9]]]],[[283,8],[[6,[9]]]],[[284,8],[[6,[9]]]],[[285,8],[[6,[9]]]],[[286,8],[[6,[9]]]],[[287,8],[[6,[9]]]],[[288,8],[[6,[9]]]],[[289,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],276],[276,5],0,[276,2],[276,2],[[276,5],2],[277,6],[279,6],[281,6],[282,6],[284,6],[286,6],[288,6],[276],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[272,272],[[]],[[272,272],169],[272,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[[],[[6,[272]]]],[5],[[272,272],16],[[],16],[[272,8],[[6,[9]]]],[[272,8],[[6,[9]]]],[[]],[50,[[6,[272]]]],[[],23],[272],[[],290],[[],5],[[]],[272,16],0,[291,272],[[272,272],[[2,[169]]]],[272,6],[[],[[12,[76,77]]]],[[],290],[[],292],[[]],[272],[272,293],[[],294],[[],148],[[],30],[[],6],[[],6],[[272,221],272],[[],31],[[]],0,0,[[],[[6,[47]]]],[221],0,0,0,0,0,0,0,[295,296],0,[[]],[[]],[[]],[[]],[[]],[[]],[297,297],[295,295],[[]],[[]],[73,[[6,[297,88]]]],[73,[[6,[295,88]]]],[297,[[6,[5,47]]]],[295,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[[295,298],16],[5],[5],[5],[5],[5],[5],[[],[[6,[297]]]],[[],[[6,[295]]]],[5],[5],[5],[[297,297],16],[[295,295],16],[[],16],[[],16],[[297,8],[[6,[9]]]],[[295,8],[[6,[9]]]],[[263,8],[[6,[9]]]],[[263,8],[[6,[9]]]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],23],[[],23],[297],[295],[297],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,[[295,299,65,172],[[6,[297,263]]]],[297,300],0,[297,296],[26],[297,6],[295,6],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[],30],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[297,172],0,[297,301],0,[[],31],[[],31],[[],31],[297,[[6,[302]]]],[297,[[6,[302]]]],[[297,221,274],[[6,[263]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[303,14],[[104,[[103,[29]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[305,[304,304]]],[[305,[304,304]]]],[[[303,[304,304]]],[[303,[304,304]]]],[[]],[[]],0,[[],306],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[305]]]],[5],[5],[5],[5],[[[305,[307,307]],8],10],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],0,0,0,[[[46,[305]]],303],0,0,[303,[[104,[[103,[29]]]]]],[303,[[104,[[103,[29]]]]]],[305,6],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[308,[12,[[124,[20]]]],[2,[32]]]],[[308,32,72]],[[]],[[]],[309,309],[[]],[5],[5],[5],0,[[309,8],10],[[]],[[],5],[[]],[[19,[310,[20]],28]],[[],[[12,[[124,[20]]]]]],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,0,0,0,[[311,312,313],[[6,[57]]]],[[311,2],[[6,[14,57]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[45,45],[311,311],[[]],[[]],[[314,14],[[104,[[103,[29]]]]]],[[315,314,14],[[104,[[103,[29]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[315,8],10],[[45,8],10],[[311,8],10],[[]],[[]],[[]],[[311,79],[[2,[14]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],316],[61,[[104,[[103,[29]]]]]],[[315,61],[[104,[[103,[29]]]]]],0,[45,315],[317,311],0,0,0,0,[314,30],0,0,0,0,0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[318,314,14],[[104,[[103,[29]]]]]],[[319,14],318],[5],[5],[5],[5],[14,[[6,[14,57]]]],[5],[5],[[]],[[]],0,[[],5],[[],5],[[]],[[]],[[318,61],[[104,[[103,[29]]]]]],[[],319],[[],2],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[320],[[]],[320],[[321,322],[[6,[2]]]],[5],[5],[5],[5],[5],[5],[[321,322],6],[[[320,[307,307,307]],8],10],[[[321,[307]],8],10],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],323],[[],[[320,[324,325]]]],[[],321],[326,327],[326,327],[[[104,[320]],328],[[329,[6]]]],[[[104,[320]],328],[[329,[6]]]],[[[104,[320]],328],[[329,[2]]]],[[[104,[320]],328],[[329,[6]]]],0,[[[104,[320]]],6],0,[[],6],[[],6],[[],6],[[],6],[[104,328],[[329,[[2,[6]]]]]],[[],31],[[],31],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[330,14],[[104,[[103,[29]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[[[331,[304]]],[[331,[304]]]],[[]],[[]],0,[[332,[323,[331]],23],333],0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[44]]]],[[],[[6,[331]]]],[[332,23],333],[[332,57,23],333],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[44,8],10],[[[331,[307]],8],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[44,22,21],330],[[14,314,[334,[331]],[335,[[323,[331]]]],21],336],0,0,0,0,[92,[[12,[14]]]],0,[330,[[104,[[103,[29]]]]]],[336,3],[[332,337,[323,[331]]],333],[[332,338,[6,[331,57]]],333],[[332,[6,[331,57]]],[[6,[57]]]],[[332,337],333],0,[[332,323],[[6,[57]]]],0,[[339,28]],[[340,335,14,314,[334,[331]],[335,[[323,[331]]]],28]],[[44,[334,[331]],[60,[14,[340,[[323,[331]]]]]],28]],[330,[[104,[[103,[29]]]]]],[336,3],[[332,337],333],[[332,338],333],[44,6],[331,6],0,[[339,28],[[2,[339]]]],[[332,338,28],[[2,[333]]]],[[332,337,28],[[2,[333]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[332,[[6,[[323,[331]],57]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[341,342]],[[]],[[]],[[]],[[]],[[]],[[]],[[[341,[304]]],[[341,[304]]]],[342,342],[[[343,[304]]],[[343,[304]]]],[[]],[[]],[[]],[[342,342],169],[[[343,[344]],343],169],[[],341],[5],[5],[5],[5],[5],[5],[[],[[6,[342]]]],[[],[[6,[343]]]],[5],[5],[5],[[[341,[345]],341],16],[[342,342],16],[[[343,[345]],343],16],[[],16],[[],16],[[],16],[[[341,[307]],8],10],[[342,8],10],[[[343,[307]],8],10],[[]],[[]],[[]],0,[342,342],[[],5],[[],5],[[],5],[[]],[[]],[[]],[341,49],0,0,[[342,342],[[2,[169]]]],[[[343,[346]],343],[[2,[169]]]],[341,343],0,[342,6],[343,6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[100,100],[[]],[5],[5],[[],[[6,[100]]]],[5],[[100,100],16],[[],16],[[100,8],[[6,[9]]]],[[]],[[],23],[100],[[],5],[[]],[100,16],0,[100,6],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,0,0,[[]],[[]],[151,151],[[]],[73,[[6,[151,88]]]],[151,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[[151,151],16],[[],16],[[151,8],[[6,[9]]]],[134,151],[[]],[73,[[6,[96]]]],[[],23],[151],[[],5],[[]],[151,16],[[],[[12,[76,77]]]],[[]],[[],6],[[],6],[151,[[6,[7]]]],[151,[[6,[7]]]],[[],31],[[]],0,0,0,0,0,0,[[],172],[221,347],[[]],[[]],[[]],[[]],[98,98],[[]],[73,[[6,[98,88]]]],[98,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[5],[5],[5],[[98,98],16],[[],16],[[98,8],[[6,[9]]]],[[95,8],[[6,[9]]]],[[95,8],[[6,[9]]]],[[]],[[]],[73,[[6,[96]]]],[[],23],[98],[[],5],[[],5],0,[[]],[[]],0,0,[26],0,[[],[[12,[76,77]]]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[98,91],[[],91],[[],31],[[],31],[[98,49],[[6,[95]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[348,348],[349,349],[350,350],[[]],[[]],[[]],[73,[[6,[348,88]]]],[73,[[6,[349,88]]]],[73,[[6,[350,88]]]],[348,[[6,[5,47]]]],[349,[[6,[5,47]]]],[350,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[48,[[6,[5,47]]]],[5],[5],[5],[5],[5],[5],[[],[[6,[349]]]],[[],[[6,[350]]]],[5],[5],[5],[[348,348],16],[[349,349],16],[[350,350],16],[[],16],[[],16],[[],16],[[348,8],[[6,[9]]]],[[349,8],[[6,[9]]]],[[350,8],[[6,[9]]]],[[]],[[]],[[]],[73,[[6,[96]]]],[73,[[6,[96]]]],[73,[[6,[96]]]],[[],23],[[],23],[[],23],[348],[349],[350],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[348,98],0,[349,6],[350,6],0,[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[],[[12,[76,77]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[348,91],[[],91],[[],31],[[],31],[[],31],[[348,49],[[6,[95]]]],[[]],[[]],[[]],0,[[]],[[]],[5],[5],[5],[[351,8],[[6,[9]]]],[[351,8],[[6,[9]]]],[[]],[[],5],[[]],[314,351],[314,351],[[],30],[[],6],[[],6],[[],31],[[]]],"p":[[3,"FedimintServer"],[4,"Option"],[6,"Cancellable"],[4,"EpochMessage"],[15,"usize"],[4,"Result"],[4,"CoreError"],[3,"Formatter"],[3,"Error"],[6,"Result"],[6,"HbbftConsensusOutcome"],[3,"Vec"],[6,"SerdeConsensusItem"],[3,"PeerId"],[6,"Step"],[15,"bool"],[6,"HbbftSerdeConsensusOutcome"],[6,"ModuleDecoderRegistry"],[3,"ServerConfig"],[3,"FedimintConsensus"],[3,"TaskGroup"],[6,"PeerConnector"],[15,"u64"],[4,"EpochVerifyError"],[3,"ConsensusProposal"],[3,"Demand"],[6,"Result"],[3,"TaskHandle"],[8,"Future"],[3,"String"],[3,"TypeId"],[6,"ModuleInstanceId"],[3,"ServerModuleConfig"],[3,"BTreeMap"],[3,"ServerConfigParams"],[3,"ApiEndpoint"],[3,"ServerConfigPrivate"],[3,"ServerConfigConsensus"],[3,"ServerConfigLocal"],[3,"PeerEndpoint"],[3,"ModuleGenRegistry"],[4,"KeyType"],[3,"PeerServerParams"],[3,"NetworkConfig"],[3,"TlsConfig"],[3,"PeerConnections"],[3,"Error"],[8,"Write"],[8,"Iterator"],[15,"str"],[3,"MuxPeerConnections"],[8,"RngCore"],[8,"CryptoRng"],[3,"NetworkInfo"],[3,"ThresholdKeys"],[3,"DynModuleGen"],[3,"Error"],[3,"Amount"],[15,"u16"],[3,"HashMap"],[4,"SocketAddr"],[8,"Fn"],[3,"PrivateKey"],[4,"Network"],[15,"u32"],[3,"ModuleKind"],[3,"OsString"],[3,"JsonWithKind"],[8,"TypedServerModuleConfig"],[8,"Into"],[3,"Database"],[3,"DynServerModule"],[3,"ModuleRegistry"],[3,"LegacyInitOrderIter"],[3,"Path"],[15,"u8"],[3,"Global"],[3,"ConfigResponse"],[3,"Certificate"],[3,"FundingVerifier"],[3,"TransactionItemAmount"],[3,"Audit"],[3,"FedimintInterconnect"],[8,"Send"],[3,"VerificationCaches"],[3,"ConsensusOutcomeConversion"],[3,"AcceptedTransaction"],[3,"DecodeError"],[3,"DatabaseTransaction"],[3,"SignedEpochOutcome"],[3,"TransactionId"],[3,"BTreeSet"],[4,"TransactionSubmissionError"],[3,"EpochOutcome"],[4,"TransactionError"],[4,"DecodingError"],[3,"DynVerificationCache"],[3,"Transaction"],[8,"Error"],[4,"TransactionStatus"],[4,"ConsensusItem"],[4,"Value"],[3,"Box"],[3,"Pin"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"EpochHistoryKey"],[3,"ProposedTransactionKey"],[3,"ProposedTransactionKeyPrefix"],[3,"AcceptedTransactionKey"],[3,"AcceptedTransactionKeyPrefix"],[3,"RejectedTransactionKey"],[3,"RejectedTransactionKeyPrefix"],[3,"DropPeerKey"],[3,"DropPeerKeyPrefix"],[3,"EpochHistoryKeyPrefix"],[3,"LastEpochKey"],[3,"PublicKeySet"],[3,"EpochOutcomeSignatureShare"],[3,"EpochOutcomeSignature"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[3,"Lightning"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[3,"DynInput"],[3,"OutPoint"],[3,"DynOutput"],[8,"Any"],[3,"LightningInput"],[4,"LightningOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[3,"DynOutputOutcome"],[4,"LightningOutputOutcome"],[3,"LightningGateway"],[3,"DynModuleConsensusItem"],[3,"LightningConsensusItem"],[3,"LightningVerificationCache"],[3,"DynDecoder"],[3,"LightningGen"],[3,"LightningDecoder"],[3,"ConfigGenParams"],[3,"HashSet"],[4,"LightningError"],[3,"GatewayClientConfig"],[3,"ContractId"],[3,"Hash"],[3,"LightningConfig"],[3,"ModuleConfigResponse"],[4,"OutputOutcome"],[8,"Read"],[3,"LightningConfigConsensus"],[3,"LightningConfigPrivate"],[3,"LightningClientConfig"],[3,"FeeConsensus"],[3,"ClientModuleConfig"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[4,"Ordering"],[4,"Error"],[4,"Error"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContractOffer"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKeyPrefix"],[3,"ContractUpdateKey"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[3,"Mint"],[3,"MintConsensusItem"],[3,"MintOutputSignatureShare"],[3,"MintOutputBlindSignatures"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"VerifiedNotes"],[3,"MintGenParams"],[3,"MintInput"],[3,"MintOutput"],[3,"MintOutputOutcome"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"MintError"],[3,"BackupRequest"],[3,"MintGen"],[3,"MintDecoder"],[3,"SignedBackupRequest"],[3,"InvalidAmountTierError"],[3,"MintConfig"],[3,"AggregatePublicKey"],[3,"RandomState"],[3,"KeyPair"],[3,"Message"],[3,"Secp256k1"],[3,"MintConfigConsensus"],[3,"MintConfigPrivate"],[3,"MintClientConfig"],[3,"FeeConsensus"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"ECashUserBackupSnapshot"],[3,"NonceKeyPrefix"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"OutputOutcomeKeyPrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"],[3,"PegOutFees"],[3,"Amount"],[3,"Wallet"],[3,"DynBitcoindRpc"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"WalletOutputOutcome"],[3,"WalletGenParams"],[3,"WalletInput"],[3,"WalletOutput"],[3,"WalletVerificationCache"],[3,"WalletGen"],[3,"WalletDecoder"],[4,"WalletError"],[4,"ProcessPegOutSigError"],[4,"PegInProofError"],[3,"Address"],[3,"WalletConfig"],[3,"UnzipWalletConsensusItem"],[3,"WalletConfigLocal"],[3,"WalletConfigPrivate"],[3,"WalletConfigConsensus"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"SecretKey"],[4,"Descriptor"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"TxOutProof"],[3,"BlockHash"],[3,"PegInProof"],[3,"Txid"],[3,"Transaction"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"PeerConnectionMultiplexer"],[8,"Clone"],[3,"ModuleMultiplexed"],[3,"ModuleMultiplexerOutOfOrder"],[8,"Debug"],[3,"RpcModule"],[3,"RpcHandlerCtx"],[3,"Arc"],[3,"PeerCertStore"],[3,"TcpListener"],[3,"TlsAcceptor"],[3,"Url"],[3,"TlsTcpConnector"],[6,"AnyConnector"],[8,"IntoIterator"],[3,"MockConnector"],[3,"MockNetwork"],[3,"BidiFramed"],[3,"BincodeCodec"],[3,"BytesMut"],[6,"AnyFramedTransport"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"TcpStream"],[6,"TcpBidiFramed"],[3,"Context"],[4,"Poll"],[3,"ReconnectPeerConnections"],[3,"PeerMessage"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[6,"SharedAnyConnector"],[3,"Receiver"],[3,"PeerConnection"],[3,"DisconnectedPeerConnectionState"],[3,"ConnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"Sender"],[3,"MessageQueue"],[3,"MessageId"],[3,"UniqueMessage"],[8,"Ord"],[8,"PartialEq"],[8,"PartialOrd"],[3,"Signature"],[3,"Transaction"],[4,"Input"],[4,"Output"],[3,"SanitizedUrl"],[8,"IterUnzipConsensusItem"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"],[8,"IterUnzipWalletConsensusItem"],[8,"Contract"],[8,"Tweakable"],[3,"ModuleMultiplexerInner"],[8,"Connector"],[8,"FramedTransport"],[8,"PeerSlice"],[13,"Accepted"],[8,"TryIntoOutcome"],[13,"UnbalancedTransaction"]]},\
"fedimint_sqlite":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SqliteDb","SqliteDbTransaction","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","commit_tx","fmt","from","from","into","into","open","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","rollback_tx_to_savepoint","set_tx_savepoint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_sqlite","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,1,5,1,5,1,5,1,5,1,5,1,1,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1],"f":[0,0,[1,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[[3,[5]]],[[4,[[3,[2]]]]]],[[1,6],7],[[]],[[]],[[]],[[]],[8,[[10,[1,9]]]],[5,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[[5,[12,[11]]],[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]]],"p":[[3,"SqliteDb"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SqliteDbTransaction"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Error"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_testing":{"doc":"","t":[3,3,3,12,5,5,12,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,10,10,10,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["FakeFed","FakeInterconnect","TestInputMeta","amount","assert_all_equal","assert_all_equal_result","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc","call","client_cfg","client_cfg","client_cfg_typed","consensus_round","eq","fetch_from_all","fmt","fmt","from","from","from","generate_fake_utxo","into","into","into","keys","members","new","new_block_height_responder","output_outcome","set_block_height","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_input","verify_output","vzip","vzip","vzip","BitcoinTest","bitcoind","fixtures","get_new_address","mine_block_and_get_received","mine_blocks","send_and_mine_block","FakeBitcoindRpc","FakeBitcoindRpcController","FakeBitcoindRpcState","add_pending_tx_to_block","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controller","default","default","fee_rate","fmt","fmt","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","height_hash","into","into","into","is_btc_sent_to","new","set_block_height","set_fee_rate","state","state","submit_transaction","to_owned","transactions","try_from","try_from","try_from","try_into","try_into","try_into","tx_in_blocks","type_id","type_id","type_id","vzip","vzip","vzip","FakeBitcoinTest","blocks","borrow","borrow_mut","clone","clone_into","default","fmt","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","get_new_address","into","mine_block","mine_block_and_get_received","mine_blocks","new","new_transaction","pending","pending_merkle_tree","send_and_mine_block","submit_transaction","to_owned","try_from","try_into","type_id","vzip"],"q":["fedimint_testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_testing::btc","","","","","","","fedimint_testing::btc::bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_testing::btc::fixtures","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Make sure all elements are equal for <code>Result&lt;O, E&gt;</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns a new address.","Mine a block to include any pending transactions then get …","Mines a given number of blocks","Send some bitcoin to an address then mine a block to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,12,0,0,8,1,8,12,1,8,12,0,1,8,8,8,8,12,8,8,12,1,8,12,8,1,8,12,12,8,8,1,8,8,1,8,12,1,8,12,1,8,12,8,8,1,8,12,0,0,0,41,41,41,41,0,0,0,30,32,30,32,31,30,32,31,31,31,31,32,31,32,32,31,30,32,31,31,31,31,31,31,0,30,32,31,30,31,30,30,30,31,31,31,32,30,32,31,30,32,31,32,30,32,31,30,32,31,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":[0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,2,3,4],[[7,[[6,[5]]]]]],[8,9],0,[8,[[11,[10]]]],[8],[[12,12],13],[8],[[[8,[14]],15],16],[[12,15],16],[[]],[[]],[[]],[8],[[]],[[]],[[]],0,0,[[17,18,2],[[11,[8]]]],[[[20,[19]]],1],[[8,21],22],[[8,23]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[8,[[24,[12,26]]]],[8,13],[[]],[[]],[[]],0,0,0,[[],27],[27,28],[23],[[27,29]],0,0,0,[[30,23]],0,[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[[]],[31,30],[[],32],[[],31],0,[[32,15],16],[[31,15],16],[[]],[[]],[[]],[[31,33],[[7,[[6,[5]]]]]],[[31,23],[[7,[[6,[5]]]]]],[31,[[7,[[6,[5]]]]]],[[31,34],[[7,[[6,[5]]]]]],[31,[[7,[[6,[5]]]]]],[23,33],[[]],[[]],[[]],[[30,29,27],13],[[],31],[[30,23]],[[30,[22,[35]]]],0,0,[[31,36],[[7,[[6,[5]]]]]],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,[[]],[[]],[37,37],[[]],[[],37],[[37,15],16],[[]],[[37,33],[[7,[[6,[5]]]]]],[[37,23],[[7,[[6,[5]]]]]],[37,[[7,[[6,[5]]]]]],[[37,34],[[7,[[6,[5]]]]]],[37,[[7,[[6,[5]]]]]],[37,27],[[]],[[38,38]],[[37,27],28],[[37,23]],[[],37],[[[38,[39]]],36],0,[[],40],[[37,27,29]],[[37,36],[[7,[[6,[5]]]]]],[[]],[[],24],[[],24],[[],25],[[]]],"p":[[3,"FakeInterconnect"],[6,"ModuleInstanceId"],[3,"String"],[4,"Value"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"FakeFed"],[3,"ClientModuleConfig"],[8,"DeserializeOwned"],[6,"Result"],[3,"TestInputMeta"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"ConfigGenParams"],[3,"AtomicU64"],[3,"Arc"],[3,"OutPoint"],[4,"Option"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"ModuleError"],[3,"Address"],[3,"Amount"],[3,"Amount"],[3,"FakeBitcoindRpcController"],[3,"FakeBitcoindRpc"],[3,"FakeBitcoindRpcState"],[3,"BlockHash"],[15,"u16"],[3,"Feerate"],[3,"Transaction"],[3,"FakeBitcoinTest"],[3,"Vec"],[3,"TxOut"],[3,"PartialMerkleTree"],[8,"BitcoinTest"]]},\
"fedimint_wallet":{"doc":"","t":[17,13,13,13,8,17,13,13,13,6,13,6,13,3,13,3,13,3,3,4,3,13,3,13,13,3,3,13,13,13,3,3,3,4,4,3,3,3,3,3,3,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,12,11,11,11,11,11,12,11,11,11,5,11,11,12,12,12,12,11,12,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,3,13,3,3,3,13,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,5,11,11,11,11],"n":["CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","InvalidSignature","IterUnzipWalletConsensusItem","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","StatelessWallet","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConsensusItem","WalletError","WalletGen","WalletGenParams","WalletInput","WalletOutput","WalletOutputOutcome","WalletVerificationCache","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","available_utxos","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","block_height","block_height","block_is_known","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","build_verification_cache","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","consensus_proposal","create_peg_out_tx","create_tx","current_round_consensus","db","decoder","decoder","decoder","decoder","deref","deref","deref_mut","deref_mut","derive_script","descriptor","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","fee_rate","fee_rate","fee_rate","fees","fees","finality_delay","finalize_peg_out_psbt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","module_kind","network","new","new_with_bitcoind","offline_wallet","output_status","output_status","peg_out_signature","process_block_height_proposals","process_fee_proposals","process_randomness_contributions","proprietary_tweak_key","provide","provide","psbt","randomness","randomness_beacon","recipient","recognize_change_utxo","round_consensus","run_broadcast_pending_tx","save_peg_out_signatures","secp","secp","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_peg_out_psbt","sign_psbt","signature","signatures","source","sync_up_to_consensus_height","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_config_response","to_config_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_config","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WalletDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_parts","hash","hash","into","into","into","into","into","into","kind","local","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensus","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","consensus_encode","consensus_encode_dyn","deserialize","eq","fmt","fmt","from","from_str","hash","hash_to_hash160","into","is_uncompressed","key","new","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","validate_peg_in_proof","verify","vzip","vzip","vzip"],"q":["fedimint_walletfedimint_wallet::common","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::dbfedimint_wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::tweakable","","","","fedimint_wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Retrieve the current status of the output. Depending on …","","","Panics","Panics","","","","","","","","","Add a change UTXO to our spendable UTXO database after it …","","","","","","","","","","","","","","","","","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that needs to be the same for …","","","","","","","","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","Fees for bitcoin transactions","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Contains all configuration that is locally configurable …","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","Contains all configuration that will be encrypted such as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,62,62,62,0,0,62,62,60,0,60,0,60,0,60,0,25,0,0,0,0,25,0,60,62,0,0,60,60,62,0,0,0,0,0,0,0,0,0,0,0,60,62,1,29,32,3,3,3,3,3,3,25,3,34,36,37,38,3,3,3,3,3,3,3,26,28,3,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,0,3,3,3,3,30,31,25,25,26,27,28,29,30,31,1,32,34,34,35,36,36,37,37,38,38,25,26,27,28,29,30,31,1,32,34,35,36,37,38,0,0,25,26,27,28,29,30,31,1,32,34,36,37,38,25,26,27,28,29,30,31,1,32,34,36,37,38,25,26,27,28,29,30,31,1,32,34,36,37,38,3,3,3,3,47,3,0,3,3,51,51,36,37,36,37,47,47,25,26,27,28,29,1,32,34,35,36,37,38,51,51,25,34,36,37,3,3,25,26,27,28,1,32,34,36,37,38,60,25,34,36,37,26,28,1,31,32,35,3,25,25,26,27,28,3,29,30,31,1,32,34,34,51,35,36,36,37,37,38,60,60,62,62,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,60,60,62,25,26,27,28,29,30,31,1,32,34,36,37,38,3,25,26,27,28,1,32,34,36,37,38,51,51,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,0,0,51,35,3,3,3,3,3,86,3,3,3,0,60,62,31,26,28,32,3,86,0,3,47,3,47,25,26,27,28,29,30,31,1,32,34,35,36,37,38,3,47,27,31,60,3,3,25,26,27,28,29,30,31,1,32,34,36,37,38,51,51,25,26,27,28,29,30,31,1,32,34,35,36,37,38,25,34,36,37,60,62,1,51,51,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,29,30,0,30,27,0,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,132,51,51,3,3,3,3,47,25,86,26,27,28,3,29,30,31,1,32,34,51,35,36,37,38,60,62,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,75,88,89,90,91,92,75,88,89,90,91,92,75,88,89,90,91,92,75,88,89,90,91,92,75,90,91,92,90,91,92,92,90,75,88,89,90,91,92,91,92,90,91,90,91,75,88,89,90,91,92,75,88,89,90,91,92,75,91,92,75,88,89,90,91,92,91,75,90,91,75,91,90,92,90,91,89,92,75,75,88,89,90,91,92,90,91,92,90,75,88,89,90,91,92,75,75,88,89,90,91,92,75,88,89,90,91,92,75,88,89,90,91,92,75,75,88,89,90,91,92,97,0,0,0,0,97,0,0,97,0,0,97,0,0,97,0,0,0,97,0,0,97,98,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,99,100,101,102,103,104,105,106,107,108,109,110,111,99,100,101,102,103,104,105,106,107,108,109,110,111,99,100,101,102,103,104,105,106,107,108,109,110,111,97,97,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,98,98,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,98,97,98,98,98,98,98,99,101,103,104,106,108,110,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,133,134,66,0,0,66,66,66,0,122,122,123,122,66,123,122,66,123,122,123,122,123,122,123,122,123,122,122,123,122,123,122,123,122,66,66,123,122,66,123,122,123,122,123,123,122,66,122,123,123,123,123,66,123,122,123,122,123,122,66,123,123,122,66,123,122,66,123,123,123,123,123,122,66,123,123,0,123,123,122,66],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[3,[[5,[[4,[3]]]]]],[[],[[5,[[4,[6]],7]]]],[[3,8,9],[[12,[[11,[10]]]]]],[[8,9,13,14],[[12,[[11,[10,7]]]]]],[[3,9,15],[[12,[[11,[10]]]]]],[[9,16,15],[[12,[[11,[10,7]]]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[3,9,18],[[12,[[11,[10]]]]]],[[9,18],[[12,[[11,[10,7]]]]]],[[3,9],5],[[3,9],[[12,[[11,[10]]]]]],[9,[[12,[[11,[10,7]]]]]],[[9,[5,[7]]],[[12,[[11,[10,7]]]]]],[[3,9,5],[[12,[[11,[10]]]]]],0,0,[[3,9,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,21]],0,[[],14],[[3,22]],0,0,0,[23,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[1,1],[32,32],[23,33],[34,34],[35,35],[36,36],[23,13],[37,37],[23,16],[38,38],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[39,[[41,[25,40]]]],[39,[[41,[26,40]]]],[39,[[41,[27,40]]]],[39,[[41,[28,40]]]],[39,[[41,[29,40]]]],[39,[[41,[30,40]]]],[39,[[41,[31,40]]]],[39,[[41,[1,40]]]],[39,[[41,[32,40]]]],[39,[[41,[34,40]]]],[39,[[41,[36,40]]]],[39,[[41,[37,40]]]],[39,[[41,[38,40]]]],[25,[[41,[42,43]]]],[26,[[41,[42,43]]]],[27,[[41,[42,43]]]],[28,[[41,[42,43]]]],[29,[[41,[42,43]]]],[30,[[41,[42,43]]]],[31,[[41,[42,43]]]],[1,[[41,[42,43]]]],[32,[[41,[42,43]]]],[34,[[41,[42,43]]]],[36,[[41,[42,43]]]],[37,[[41,[42,43]]]],[38,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[[3,9],[[46,[45]]]],[[3,9],[[12,[[11,[10]]]]]],[[9,23],[[12,[[11,[10,7]]]]]],[[3,9,32],[[46,[31]]]],[[47,2,48,5,49],[[46,[31]]]],[[3,9],[[46,[28]]]],0,[3],[[],50],[51,52],[[],50],[36],[37],[36],[37],[47,48],0,[[],[[41,[25]]]],[[],[[41,[26]]]],[[],[[41,[27]]]],[[],[[41,[28]]]],[[],[[41,[29]]]],[[],[[41,[1]]]],[[],[[41,[32]]]],[[],[[41,[34]]]],[[],[[41,[35]]]],[[],[[41,[36]]]],[[],[[41,[37]]]],[[],[[41,[38]]]],[[51,53,54,55,56,57],[[12,[[11,[10]]]]]],[[53,54,23,56,57],[[12,[[11,[10,7]]]]]],[[],58],[[],58],[[],58],[[],58],[[59,9],[[12,[[11,[10,7]]]]]],[[3,59,9],[[12,[[11,[10]]]]]],[[25,25],20],[[26,26],20],[[27,27],20],[[28,28],20],[[1,1],20],[[32,32],20],[[34,34],20],[[36,36],20],[[37,37],20],[[38,38],20],[[60,60],20],[24,20],[33,20],[13,20],[16,20],0,0,0,0,0,0,[[3,61,2],[[41,[30,62]]]],[[25,63],64],[[25,63],64],[[26,63],64],[[27,63],64],[[28,63],64],[[3,63],64],[[29,63],64],[[30,63],64],[[31,63],64],[[1,63],64],[[32,63],64],[[34,63],64],[[34,63],64],[[51,63],64],[[35,63],64],[[36,63],64],[[36,63],64],[[37,63],64],[[37,63],64],[[38,63],64],[[60,63],64],[[60,63],64],[[62,63],64],[[62,63],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,60],[[]],[66,60],[[]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[[3,9],2],[25],[26],[27],[28],[1],[32],[34],[36],[37],[38],[[69,70,71,57],[[12,[[11,[10,7]]]]]],[[51,69,70,71,57],[[12,[[11,[10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,73],20],0,[[],74],0,[[75,70,71,57],[[76,[3]]]],[[75,70,21,57],[[41,[3,60]]]],[3,47],[[9,15,23],[[12,[[11,[10,7]]]]]],[[3,9,15],[[12,[[11,[10]]]]]],0,[[3,9,[5,[45]]],45],[[3,[5,[49]]],49],[[3,5]],[[],77],[78],[78],0,0,0,0,[[3,9,30]],0,[[70,21,79]],[[3,9,5]],0,0,0,[25,41],[26,41],[27,41],[28,41],[29,41],[30,41],[31,41],[1,41],[32,41],[34,41],[35,41],[36,41],[37,41],[38,41],[[3,61,54,27],[[41,[62]]]],[[47,61]],0,0,[60,[[46,[80]]]],[[3,9,45]],[3,45],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[51,82],[[76,[83]]]],[82,[[41,[83,65]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],84],[[],84],[[],84],[[],84],[[],84],[[],84],0,[[51,56],[[71,[54,69]]]],[56,[[71,[54,69,7]]]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,0,0,0,0,[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],86],[[51,54,69],76],[[54,69],[[41,[65]]]],[[3,8,9],[[12,[[11,[10]]]]]],[[8,9,14,13],[[12,[[11,[10,7]]]]]],[[3,9],[[12,[[11,[10]]]]]],[[9,16],[[12,[[11,[10,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[52,52],[[]],[[52,87],[[41,[25,40]]]],[[87,23],[[41,[24,40]]]],[[52,87],[[41,[36,40]]]],[[87,23],[[41,[13,40]]]],[[52,87],[[41,[37,40]]]],[[87,23],[[41,[16,40]]]],[[52,87],[[41,[34,40]]]],[[87,23],[[41,[33,40]]]],[[],52],[[52,63],64],[[]],[[]],[[]],[[],41],[[],41],[[],85],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[88,88],[89,89],[90,90],[91,91],[92,92],[[]],[[]],[[]],[[]],[[]],[[]],0,[90,[[41,[42,43]]]],[91,[[41,[42,43]]]],[92,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[[],92],0,[[],[[41,[75]]]],[[],[[41,[88]]]],[[],[[41,[89]]]],[[],[[41,[90]]]],[[],[[41,[91]]]],[[],[[41,[92]]]],[[91,91],20],[[92,92],20],0,0,0,0,[[75,63],64],[[88,63],64],[[89,63],64],[[90,63],64],[[91,63],64],[[92,63],64],[[]],[[]],[[]],[[]],[[]],[[]],[[],75],[91],[92],[[]],[[]],[[]],[[]],[[]],[[]],[91,74],0,0,0,[[[71,[54,93]],94,42,73,45],75],[[95,73,45],91],0,0,0,0,0,0,0,[75,41],[88,41],[89,41],[90,41],[91,41],[92,41],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[90,96],[[]],[[]],[[]],[[]],[[]],[[]],[75],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[75,54],76],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[41,[99,40]]]],[39,[[41,[100,40]]]],[39,[[41,[101,40]]]],[39,[[41,[102,40]]]],[39,[[41,[103,40]]]],[39,[[41,[104,40]]]],[39,[[41,[105,40]]]],[39,[[41,[106,40]]]],[39,[[41,[107,40]]]],[39,[[41,[108,40]]]],[39,[[41,[109,40]]]],[39,[[41,[110,40]]]],[39,[[41,[111,40]]]],[99,[[41,[42,43]]]],[100,[[41,[42,43]]]],[101,[[41,[42,43]]]],[102,[[41,[42,43]]]],[103,[[41,[42,43]]]],[104,[[41,[42,43]]]],[105,[[41,[42,43]]]],[106,[[41,[42,43]]]],[107,[[41,[42,43]]]],[108,[[41,[42,43]]]],[109,[[41,[42,43]]]],[110,[[41,[42,43]]]],[111,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[[97,63],64],[[97,63],64],[[99,63],64],[[100,63],64],[[101,63],64],[[102,63],64],[[103,63],64],[[104,63],64],[[105,63],64],[[106,63],64],[[107,63],64],[[108,63],64],[[109,63],64],[[110,63],64],[[111,63],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[67,[[41,[68]]]],[[98,42],[[46,[97]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],98],[98,42],0,[98,46],[98,46],[[98,42],46],[99,41],[101,41],[103,41],[104,41],[106,41],[108,41],[110,41],[98],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],84],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[93,93],[[]],[[93,93],112],[93,[[41,[42,43]]]],[44,[[41,[42,43]]]],[[],[[41,[93]]]],[[93,93],20],[[93,63],64],[[93,63],64],[[]],[113,[[41,[93]]]],[93],[[],114],[[]],[93,20],0,[115,93],[[93,93],[[46,[112]]]],[93,41],[[],[[5,[81,7]]]],[[],114],[[],116],[[]],[93],[93,117],[[],118],[[],119],[[],84],[[],41],[[],41],[[93,120],93],[[],85],[[]],0,0,[[],121],[120],0,0,0,0,0,0,0,[122,19],0,[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[122,122],[[]],[[]],[39,[[41,[123,40]]]],[39,[[41,[122,40]]]],[123,[[41,[42,43]]]],[122,[[41,[42,43]]]],[44,[[41,[42,43]]]],[44,[[41,[42,43]]]],[[122,124],20],[[],[[41,[123]]]],[[],[[41,[122]]]],[[123,123],20],[[122,122],20],[[123,63],64],[[122,63],64],[[66,63],64],[[66,63],64],[[]],[[]],[[]],[67,[[41,[68]]]],[67,[[41,[68]]]],[123],[122],[123],[[]],[[]],[[]],0,[[122,125,45,126],[[41,[123,66]]]],[123,127],0,[123,19],[78],[123,41],[122,41],[[],[[5,[81,7]]]],[[],[[5,[81,7]]]],[[]],[[]],[[],84],0,[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[123,126],0,[123,128],0,[[],85],[[],85],[[],85],[123,[[41,[129]]]],[123,[[41,[129]]]],[123,[[41,[130]]]],[[123,120,131],[[41,[66]]]],[[]],[[]],[[]]],"p":[[3,"PegOutFees"],[3,"Amount"],[3,"Wallet"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DynInput"],[3,"DynVerificationCache"],[3,"OutPoint"],[3,"DynOutput"],[8,"Any"],[3,"Audit"],[3,"BlockHash"],[15,"bool"],[3,"DynBitcoindRpc"],[8,"Iterator"],[15,"u16"],[3,"DynModuleConsensusItem"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"DynOutputOutcome"],[3,"WalletOutputOutcome"],[3,"WalletGenParams"],[3,"WalletInput"],[3,"WalletOutput"],[3,"WalletVerificationCache"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[15,"u32"],[4,"Option"],[3,"StatelessWallet"],[3,"Script"],[3,"Feerate"],[3,"DynDecoder"],[3,"WalletGen"],[3,"WalletDecoder"],[3,"MuxPeerConnections"],[3,"PeerId"],[6,"ModuleInstanceId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[4,"WalletError"],[3,"PartiallySignedTransaction"],[4,"ProcessPegOutSigError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"PegInProofError"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"ServerModuleConfig"],[3,"Database"],[3,"BTreeMap"],[3,"Address"],[4,"Network"],[3,"ModuleKind"],[3,"WalletConfig"],[6,"Result"],[3,"ProprietaryKey"],[3,"Demand"],[3,"TaskHandle"],[8,"Error"],[15,"u8"],[4,"Value"],[3,"ModuleConfigResponse"],[3,"String"],[3,"TypeId"],[3,"UnzipWalletConsensusItem"],[8,"Read"],[3,"WalletConfigLocal"],[3,"WalletConfigPrivate"],[3,"WalletConfigConsensus"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"SecretKey"],[6,"PegInDescriptor"],[3,"ClientModuleConfig"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[4,"Ordering"],[15,"str"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"Secp256k1"],[6,"Result"],[3,"TxOutProof"],[3,"PegInProof"],[3,"Txid"],[3,"Transaction"],[3,"XOnlyPublicKey"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"ValidationError"],[4,"Descriptor"],[8,"IterUnzipWalletConsensusItem"],[8,"Contract"],[8,"Tweakable"]]},\
"fedimintd":{"doc":"","t":[17,17,17,17,17,17,17,17,17,17,17,0,0,5,5,5,5,5,0,5,5,5,5,5,17,17,5,5,5,3,13,13,13,13,13,4,13,13,3,3,3,3,13,6,3,3,4,13,3,13,3,4,3,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,5,12,5,5,5,11,11,11,11,12,12,5,5,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CLIENT_CONFIG","CODE_VERSION","CONSENSUS_CONFIG","DB_FILE","ENCRYPTED_EXT","JSON_EXT","LOCAL_CONFIG","PRIVATE_CONFIG","SALT_FILE","TLS_CERT","TLS_PK","distributedgen","encrypt","encrypted_json_read","encrypted_json_write","plaintext_json_read","plaintext_json_write","read_server_configs","ui","write_nonprivate_configs","create_cert","gen_tls","parse_peer_params","run_dkg","ITERATIONS_DEBUG","ITERATIONS_PROD","encrypted_read","encrypted_write","get_key","AddGuardiansTemplate","DkgDone","DkgFailed","DkgFailure","DkgInProgress","DkgNotStarted","DkgState","DkgSuccess","Failure","FederationParameters","Guardian","GuardiansForm","HomeTemplate","LocalIoError","MutableState","ParamsForm","RunTemplate","RunTemplateState","Running","State","Success","UIError","UiMessage","UrlConnection","__axum_macros_check_post_federation_params_0_from_request_call_check","__axum_macros_check_post_federation_params_0_from_request_check","__axum_macros_check_post_federation_params_1_from_request_call_check","__axum_macros_check_post_federation_params_1_from_request_check","__axum_macros_check_post_federation_params_future","__axum_macros_check_post_federation_params_into_response","__axum_macros_check_post_guardians_0_from_request_call_check","__axum_macros_check_post_guardians_0_from_request_check","__axum_macros_check_post_guardians_1_from_request_call_check","__axum_macros_check_post_guardians_1_from_request_check","__axum_macros_check_post_guardians_future","__axum_macros_check_post_guardians_into_response","add_guardians_page","api_url","bind_api","bind_api","bind_p2p","bind_p2p","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect_string","connection_strings","data_dir","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dkg_state","dkg_task_group","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","extension","extension","extension","extension","federation_name","federation_name","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","guardian","guardian_name","guardians_count","home_page","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_response","into_response","into_response","into_response","into_response","mime_type","mime_type","mime_type","mime_type","module_gens","name","network","network","num_guardians","num_guardians","p2p_url","params","params_page","password","post_federation_params","post_guardians","qr","render_into","render_into","render_into","render_into","ro_bitcoin_rpc_type","ro_bitcoin_rpc_url","run_page","run_ui","sender","size_hint","size_hint","size_hint","size_hint","state","task_group","tls_connect_string","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimintd","","","","","","","","","","","","","","","","","","","","fedimintd::distributedgen","","","","fedimintd::encrypt","","","","","fedimintd::uid":["Client configuration file","Version of the server code (should be the same among peers)","Server consensus-only configurable file","Database file name","","","Server locally configurable file","Server encrypted private keys file","Salt backup for combining with the private key","TLS public cert","Encrypted TLS private keys","","","Reads an encrypted json file into a struct","Writes struct into an encrypted json file","Reads a plaintext json file into a struct","Writes struct into a plaintext json file","Reads the server from the local, private, and consensus …","","Writes the server into plaintext json configuration files …","","","","","","","Reads encrypted data from a file","Write <code>data</code> encrypted to a <code>file</code> with a random <code>nonce</code> that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Our API address for clients to connect to us","Address we bind to for exposing the API","","Address we bind to for federation communication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation name, same for all peers","","The number of confirmations a deposit transaction requires …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Our node name, must be unique among peers","How many participants in federation consensus","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Which bitcoin network the federation is using","","","","Our external address for communicating with our peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,41,52,52,0,41,40,0,0,0,0,52,0,0,0,0,40,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,29,28,29,52,43,21,26,37,38,25,27,39,28,29,40,41,52,43,21,26,37,38,25,27,39,28,29,40,41,26,27,28,29,26,27,28,29,25,27,21,52,43,21,26,37,38,25,27,39,28,29,40,41,52,43,21,26,37,38,25,27,39,28,29,40,41,26,27,28,21,21,52,43,21,26,37,38,25,27,39,28,29,40,41,37,38,25,39,37,38,25,39,37,38,25,39,28,29,28,29,26,37,38,25,27,39,28,40,41,52,43,43,21,26,37,38,25,27,39,28,29,40,41,26,27,28,29,29,28,28,0,52,43,21,26,37,38,25,27,39,28,29,40,41,52,43,21,26,37,38,25,27,39,28,29,40,41,43,37,38,25,39,37,38,25,39,21,26,28,29,25,29,28,21,0,21,0,0,0,37,38,25,39,39,39,0,0,21,37,38,25,39,38,21,26,26,27,28,29,37,38,25,39,52,43,21,26,37,38,25,27,39,28,29,40,41,52,43,21,26,37,38,25,27,39,28,29,40,41,52,43,21,26,37,38,25,27,39,28,29,40,41,52,43,21,26,37,38,25,27,39,28,29,40,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[[0,[3,4]]]]]],[[1,2],5],[2,[[5,[[0,[3,4]]]]]],[2,5],[[1,2],[[5,[6]]]],0,[[6,2,7],5],[[2,8,8,9,[10,[9]]],[[5,[9]]]],[[11,8,8,9,1],[[5,[9]]]],[9,[[5,[12]]]],[[13,13,11,14,9,[15,[9]],16,17,18,19],[[5,[6]]]],0,0,[[1,2],[[5,[[15,[20]]]]]],[[[15,[20]],1,2],5],[[[10,[9]],2],[[5,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[[23,[[22,[21]]]]]]],25],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],0,0,0,[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[],[[31,[26]]]],[[],[[31,[27]]]],[[],[[31,[28]]]],0,0,[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[],[[31,[9,32]]]],[[],[[31,[9,32]]]],[[],[[31,[9,32]]]],[[],[[31,[9,32]]]],[33,[[31,[32]]]],[33,[[31,[32]]]],[33,[[31,[32]]]],[33,[[31,[32]]]],[[],[[10,[34]]]],[[],[[10,[34]]]],[[],[[10,[34]]]],[[],[[10,[34]]]],0,0,0,0,[[26,35],36],[[37,35],36],[[38,35],36],[[25,35],36],[[27,35],36],[[39,35],36],[[28,35],36],[[40,35],36],[[41,35],36],[[]],[[]],[42,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[24,[[23,[[22,[21]]]]]]],37],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,44],[37,[[44,[45]]]],[38,[[44,[45]]]],[25,[[44,[45]]]],[39,[[44,[45]]]],[[],34],[[],34],[[],34],[[],34],0,0,0,0,0,0,0,0,[[[24,[[23,[[22,[21]]]]]]],39],0,[[[24,[[23,[[22,[21]]]]]],[46,[28]]],[[31,[47,43]]]],[[[24,[[23,[[22,[21]]]]]],[46,[27]]],[[31,[47,43]]]],[[[24,[[23,[[22,[21]]]]]]],48],[37,49],[38,49],[25,49],[39,49],0,0,[[[24,[[23,[[22,[21]]]]]]],38],[[2,[50,[41]],13,9,19,7]],0,[[],30],[[],30],[[],30],[[],30],0,0,0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"LessSafeKey"],[3,"PathBuf"],[8,"Serialize"],[8,"DeserializeOwned"],[6,"Result"],[3,"ServerConfig"],[3,"ModuleGenRegistry"],[3,"Url"],[3,"String"],[4,"Option"],[3,"Path"],[3,"PeerServerParams"],[4,"SocketAddr"],[3,"Amount"],[3,"Vec"],[4,"Network"],[15,"u32"],[3,"PrivateKey"],[3,"TaskGroup"],[15,"u8"],[3,"State"],[3,"Mutex"],[3,"Arc"],[3,"State"],[3,"AddGuardiansTemplate"],[3,"Guardian"],[3,"GuardiansForm"],[3,"ParamsForm"],[3,"FederationParameters"],[15,"usize"],[4,"Result"],[4,"Error"],[8,"Write"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"HomeTemplate"],[3,"RunTemplate"],[3,"UrlConnection"],[4,"DkgState"],[4,"UiMessage"],[3,"Error"],[3,"UIError"],[6,"Response"],[6,"BoxBody"],[3,"Form"],[3,"Redirect"],[8,"IntoResponse"],[6,"Result"],[3,"Sender"],[3,"TypeId"],[4,"RunTemplateState"]]},\
"gateway_cli":{"doc":"","t":[13,13,3,4,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Address","Balance","Cli","Commands","ConnectFed","Deposit","GenerateConfig","Info","VersionHash","Withdraw","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","into_request","into_request","main","print_response","rpcpassword","source_password","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","amount","announce_address","bind_address","connect","federation_id","federation_id","federation_id","federation_id","out_dir","transaction","txout_proof"],"q":["gateway_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gateway_cli::Commands","","","","","","","","","","",""],"d":["Generate a new peg-in address, funds sent to it can later …","Check gateway balance","","","Register federation with the gateway","Deposit funds into a gateway federation","Ganerate gateway configuration NOTE: This command can only …","Display high-level information about the Gateway","Display CLI version hash","Claim funds from a gateway federation","The address of the gateway webserver","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","WARNING: Passing in a password from the command line may …","","","","","","","","","","","","","","The address to send the funds to","The amount to withdraw","URL under which the API will be reachable","Address to which the API webserver will bind","ConnectInfo code to connect to the federation","","","","","The gateway configuration directory","","The TxOutProof which was created from sending BTC to the …"],"i":[7,7,0,0,7,7,7,7,7,7,4,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,4,0,4,7,4,7,4,7,4,7,4,7,4,7,16,16,17,17,18,19,20,21,16,17,21,21],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[],12],[[],12],[[]],[13],0,[[[9,[14]]],14],[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Response"],[3,"String"],[3,"TypeId"],[13,"Withdraw"],[13,"GenerateConfig"],[13,"ConnectFed"],[13,"Balance"],[13,"Address"],[13,"Deposit"]]},\
"gateway_cln_extension":{"doc":"","t":[4,3,3,3,3,13,3,3,6,6,3,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,12,12,12,12,11,12,12,11,11,11,11,12,12,12,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ClnExtensionError","ClnExtensionOpts","ClnHtlcInterceptor","ClnRpcClient","ClnRpcService","Error","Htlc","HtlcAccepted","HtlcOutcomeSender","HtlcSubscriptionSender","Onion","add_htlc_subscriber","amount_msat","as_fedimint_amount","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","command","command_for_update","complete_htlcs","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","forward_msat","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","get_pub_key","group_id","htlc","init","init","init","init","init","init","init","init","intercept_htlc","interceptor","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","listen","main","new","new","next_onion","onion","outcomes","outgoing_cltv_value","pay_invoice","payload","payment_hash","provide","serialize","serialize","serialize","shared_secret","short_channel_id","short_channel_id","source","subscribe_intercept_htlcs","subscriptions","task_group","temp_node_failure","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["gateway_cln_extensiond":["","","Functional structure to filter intercepted HTLCs into …","","","","","","","","","","","The core-lightning <code>htlc_accepted</code> event’s <code>amount</code> field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Gateway CLN extension service listen address","","","","","","","","","","","","","","","","","","","","","","BOLT 4: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,22,0,0,0,0,0,1,9,0,25,25,37,12,25,9,10,11,22,1,37,12,25,9,10,11,22,1,12,9,10,11,1,9,10,11,1,9,9,25,25,12,37,12,25,9,10,11,22,1,37,12,25,9,10,11,22,1,9,10,11,37,12,25,9,10,11,22,1,9,10,11,22,22,10,37,12,25,9,10,11,22,22,1,25,25,9,10,11,1,12,25,11,37,12,25,9,10,11,22,1,1,12,37,12,25,9,10,11,22,1,37,12,25,9,10,11,22,1,25,0,12,1,10,11,1,10,12,10,9,22,9,10,11,10,9,10,22,12,1,12,0,9,10,11,1,22,37,12,25,9,10,11,22,1,37,12,25,9,10,11,22,1,37,12,25,9,10,11,22,1,25,25,37,12,25,9,10,11,22,1],"f":[0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[6,[[5,[3,4]]]]]],0,[[],[[5,[7]]]],[8,8],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9,9],[10,10],[11,11],[1,1],[[]],[[]],[[]],[[]],0,0,[[],8],[[],8],[[12,[15,[[14,[13]]]]],[[18,[[17,[16]]]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],[[5,[9]]]],[[],[[5,[10]]]],[[],[[5,[11]]]],[19],[19],[19],[19],[19],[19],[19],[19],[[9,20],21],[[10,20],21],[[11,20],21],[[22,20],21],[[22,20],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[23,22],[[]],[[]],[24,[[5,[25,26]]]],[24,[[5,[25,26]]]],[[]],[[]],[[]],[[]],[[12,[15,[27]]],[[18,[[17,[16]]]]]],[[],[[29,[28]]]],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[1,11],30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],[[5,[23]]]],[[],[[5,[22]]]],[[],1],0,0,0,0,[[12,[15,[[14,[31]]]]],[[18,[[17,[16]]]]]],0,0,[32],[9,5],[10,5],[11,5],0,0,0,[22,[[29,[33]]]],[[12,[15,[34]]],[[18,[[17,[16]]]]]],0,0,[[],30],[[]],[[]],[[]],[[]],[[],35],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[25,24],[[5,[26]]]],[[25,24],[[5,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"ClnHtlcInterceptor"],[15,"u64"],[3,"SubscribeInterceptHtlcsResponse"],[3,"Status"],[4,"Result"],[3,"Receiver"],[3,"Amount"],[3,"Command"],[3,"Htlc"],[3,"Onion"],[3,"HtlcAccepted"],[3,"ClnRpcService"],[3,"CompleteHtlcsRequest"],[3,"Streaming"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"Formatter"],[6,"Result"],[4,"ClnExtensionError"],[3,"Error"],[3,"ArgMatches"],[3,"ClnExtensionOpts"],[6,"Error"],[3,"GetPubKeyRequest"],[3,"Id"],[4,"Option"],[4,"Value"],[3,"PayInvoiceRequest"],[3,"Demand"],[8,"Error"],[3,"SubscribeInterceptHtlcsRequest"],[3,"String"],[3,"TypeId"],[3,"ClnRpcClient"]]},\
"hkdf":{"doc":"This crate implements the RFC5869 hash based key …","t":[8,18,16,3,16,18,10,10,2,11,11,11,11,11,11,11,11,10,10,11,10,11,0,11,10,11,12,11,11,11,11,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BitcoinHash","DISPLAY_BACKWARD","Engine","Hkdf","Inner","LEN","all_zeros","as_inner","bitcoin_hashes","borrow","borrow_mut","clone","clone_into","derive","derive_hmac","engine","from","from_engine","from_inner","from_prk","from_slice","hash","hashes","into","into_inner","new","prk","to_owned","try_from","try_into","type_id","Hash160","Ripemd160","Sha1","Sha256","Sha256d","Sha512","Siphash24","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","engine","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine_to_u64","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u64","hash","hash","hash","hash","hash","hash","hash","hash_to_u64_with_keys","hash_with_keys","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["hkdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hkdf::hashesd":["Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","Implements the RFC5869 hash based key derivation function …","The byte array that represents the hash internally.","Length of the hash, in bytes.","Returns an all zero hash.","Unwraps the hash and returns a reference to the underlying …","","","","","","Run HKDF-expand to generate new key material","Run HKDF-expand to generate new key material with …","Constructs a new engine.","Returns the argument unchanged.","Produces a hash from the current state of a given engine.","Constructs a hash from the underlying byte array.","Construct the HKDF from a pseudo random key that has the …","Copies a byte slice into a hash object.","Hashes some bytes.","","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","Run HKDF-extract and keep the resulting pseudo random key …","","","","","","Output of the Bitcoin HASH160 hash function.","Output of the RIPEMD160 hash function.","Output of the SHA1 hash function.","Output of the SHA256 hash function.","Output of the SHA256d hash function.","Output of the SHA256 hash function.","Output of the SipHash24 hash function.","","","","","","","","","","","","","","","","","","","","","","Returns the (little endian) 64-bit integer representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Produces a hash as <code>u64</code> from the current state of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a hash from its (little endian) 64-bit integer …","","","","","","","","Hashes the given data directly to u64 with an engine with …","Hashes the given data with an engine with the provided …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,0,2,2,2,2,0,3,3,3,3,3,3,2,3,2,2,3,2,2,0,3,2,3,3,3,3,3,3,0,0,0,0,0,0,0,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,15,9,9,10,10,11,11,12,12,13,13,14,14,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,9,10,11,12,13,14,15,9,10,11,12,13,14,15,10,14,9,10,11,12,13,14,15,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,15,9,10,11,12,13,14,15,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[2]]]],[[[3,[2]]],[[4,[2]]]],[[]],[[]],[[]],[[]],[[[4,[2]]],[[3,[2]]]],[[],[[6,[5]]]],[[]],0,[[]],[[]],[7,[[3,[2]]]],0,[[]],[[],6],[[],6],[[],8],0,0,0,0,0,0,0,[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[9],[10],[11],[12],[13],[14],[15],[9],[10],[11],[12],[13],[14],[15],[15,16],[9],[[]],[[]],[10],[11],[[]],[[]],[12],[13],[[]],[[]],[14],[[]],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],17],[[10,10],17],[[11,11],17],[[12,12],17],[[13,13],17],[[14,14],17],[[15,15],17],[[],9],[9],[10],[11],[12],[13],[14],[15],[[],[[6,[9]]]],[[],[[6,[10]]]],[[],[[6,[11]]]],[[],[[6,[12]]]],[[],[[6,[13]]]],[[],[[6,[14]]]],[[],[[6,[15]]]],[[],18],[[],18],[[9,9],19],[[10,10],19],[[11,11],19],[[12,12],19],[[13,13],19],[[14,14],19],[[15,15],19],[[9,20],[[6,[21]]]],[[9,20],[[6,[21]]]],[[9,20],[[6,[21]]]],[[10,20],[[6,[21]]]],[[10,20],[[6,[21]]]],[[10,20],[[6,[21]]]],[[11,20],[[6,[21]]]],[[11,20],[[6,[21]]]],[[11,20],[[6,[21]]]],[[12,20],[[6,[21]]]],[[12,20],[[6,[21]]]],[[12,20],[[6,[21]]]],[[13,20],[[6,[21]]]],[[13,20],[[6,[21]]]],[[13,20],[[6,[21]]]],[[14,20],[[6,[21]]]],[[14,20],[[6,[21]]]],[[14,20],[[6,[21]]]],[[15,20],[[6,[21]]]],[[15,20],[[6,[21]]]],[[15,20],[[6,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[23,9],[18,10],[24,11],[25,12],[18,13],[18,14],[26,15],[26,16],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],[[6,[9,5]]]],[[],[[6,[10,5]]]],[[],[[6,[11,5]]]],[[],[[6,[12,5]]]],[[],[[6,[13,5]]]],[[],[[6,[14,5]]]],[[],[[6,[15,5]]]],[[],[[6,[9,5]]]],[[],[[6,[10,5]]]],[[],[[6,[11,5]]]],[[],[[6,[12,5]]]],[[],[[6,[13,5]]]],[[],[[6,[14,5]]]],[[],[[6,[15,5]]]],[27,[[6,[9]]]],[27,[[6,[10]]]],[27,[[6,[11]]]],[27,[[6,[12]]]],[27,[[6,[13]]]],[27,[[6,[14]]]],[27,[[6,[15]]]],[16,15],[9],[10],[11],[12],[13],[14],[15],[[16,16],16],[[16,16],15],[9],[10],[11],[12],[13],[14],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[10],[11],[12],[13],[14],[15],[[9,9],[[7,[17]]]],[[10,10],[[7,[17]]]],[[11,11],[[7,[17]]]],[[12,12],[[7,[17]]]],[[13,13],[[7,[17]]]],[[14,14],[[7,[17]]]],[[15,15],[[7,[17]]]],[9,6],[10,6],[11,6],[12,6],[13,6],[14,6],[15,6],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8]],"p":[[8,"Clone"],[8,"BitcoinHash"],[3,"Hkdf"],[3,"Hmac"],[4,"Error"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Sha512"],[3,"Hash160"],[3,"Ripemd160"],[3,"Sha1"],[3,"Sha256"],[3,"Sha256d"],[3,"Siphash24"],[15,"u64"],[4,"Ordering"],[3,"HashEngine"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Error"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[15,"str"],[3,"String"]]},\
"ln_gateway":{"doc":"","t":[13,13,3,4,13,13,6,13,0,12,11,11,11,11,12,0,12,0,0,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,12,0,11,11,12,11,12,11,11,11,11,11,11,11,0,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,8,3,3,3,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,3,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,16,16,3,11,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,10,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,13,3,3,13,13,13,3,3,3,3,4,3,8,3,13,3,13,13,3,16,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,0,11,12,12,5,5,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["ClientError","CouldNotRoute","LnGateway","LnGatewayError","MintClientE","Other","Result","UnknownFederation","actor","actors","borrow","borrow","borrow_mut","borrow_mut","channel_id_generator","client","client_builder","cln","config","config","connect_federation","decoders","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","gatewaylnrpc","handle_address_msg","handle_balance_msg","handle_connect_federation","handle_deposit_msg","handle_get_info","handle_pay_invoice_msg","handle_receive_payment","handle_withdraw_msg","init","init","into","into","into_request","into_request","into_response","ln","ln_rpc","load_federation_actors","new","provide","receiver","rpc","run","select_actor","sender","source","task_group","to_string","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","GatewayActor","await_outgoing_contract_claimed","await_preimage_decryption","borrow","borrow_mut","buy_preimage_external","buy_preimage_internal","buy_preimage_offer","client","deposit","deref","deref_mut","drop","fetch_all_coins","from","get_balance","get_deposit_address","get_info","init","into","into_request","new","pay_invoice","try_from","try_into","type_id","vzip","withdraw","DynDbFactory","DynGatewayClientBuilder","IDbFactory","IGatewayClientBuilder","MemDbFactory","RocksDbFactory","StandardGatewayClientBuilder","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_config","create_config","create_database","create_database","create_database","db_factory","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","load_configs","load_configs","new","save_config","save_config","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","work_dir","ClnRpcRef","Htlc","HtlcAccepted","Onion","amount","as_fedimint_amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_cln_rpc","clone","clone","clone","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","forward_amount","from","from","from","from","from_ref","from_ref","from_ref","htlc","htlc_accepted_hook","htlc_processing_failure","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","ln_rpc","next_onion","onion","outgoing_cltv_value","payload","payment_hash","serialize","serialize","serialize","shared_secret","short_channel_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","work_dir","GatewayConfig","announce_address","bind_address","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","from_ref","init","into","into_request","password","serialize","to_owned","try_from","try_into","type_id","vzip","CompleteHtlcsRequest","CompleteHtlcsResponse","GetPubKeyRequest","GetPubKeyResponse","PayInvoiceRequest","PayInvoiceResponse","SubscribeInterceptHtlcsRequest","SubscribeInterceptHtlcsResponse","action","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complete_htlcs_request","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_lightning_client","gateway_lightning_server","incoming_amount_msat","incoming_expiry","init","init","init","init","init","init","init","init","intercepted_htlc_id","intercepted_htlc_id","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","max_delay","max_fee_percent","outgoing_amount_msat","payment_hash","preimage","pub_key","short_channel_id","short_channel_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Action","Cancel","Cancel","Settle","Settle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_request","into_request","into_request","merge","preimage","reason","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","GatewayLightningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","complete_htlcs","connect","deref","deref_mut","drop","fmt","from","from_ref","get_pub_key","init","inner","into","into_request","new","pay_invoice","send_compressed","subscribe_intercept_htlcs","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","CompleteHtlcsStream","GatewayLightning","GatewayLightningServer","PayInvoiceStream","SubscribeInterceptHtlcsStream","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","complete_htlcs","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_arc","from_ref","from_ref","get_pub_key","init","init","inner","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","new","pay_invoice","poll_ready","poll_ready","send_compressed","send_compression_encodings","subscribe_intercept_htlcs","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","LightningError","LnRpc","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","into_request","pay","pubkey","try_from","try_into","type_id","vzip","Balance","BalancePayload","ConnectFedPayload","ConnectFederation","Deposit","DepositAddress","DepositAddressPayload","DepositPayload","FederationInfo","GatewayInfo","GatewayRequest","GatewayRequestInner","GatewayRequestTrait","GatewayRpcSender","Info","InfoPayload","PayInvoice","ReceivePayment","ReceivePaymentPayload","Response","Withdraw","WithdrawPayload","address","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","federation_id","federation_id","federation_id","federation_id","federation_id","federations","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle","htlc_accepted","impl_gateway_request_trait","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mint_pubkey","new","request","rpc_client","rpc_server","send","sender","sender","serde_hex_deserialize","serde_hex_serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txout_proof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Error","Response","RpcClient","base_url","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","call","chunk","client","connect_federation","content_length","deposit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","error_for_status","error_for_status_ref","extensions","extensions_mut","fmt","fmt","fmt","from","from","from","from","get_balance","get_deposit_address","get_info","headers","headers_mut","init","init","init","inner","into","into","into","into_request","into_request","into_request","is_body","is_builder","is_connect","is_decode","is_redirect","is_request","is_status","is_timeout","json","new","provide","remote_addr","res","source","status","status","text","text_with_charset","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upgrade","url","url","url","url_mut","version","vzip","vzip","vzip","with_url","withdraw","without_url","__axum_macros_check_address_0_from_request_call_check","__axum_macros_check_address_0_from_request_check","__axum_macros_check_address_1_from_request_call_check","__axum_macros_check_address_1_from_request_check","__axum_macros_check_address_future","__axum_macros_check_address_into_response","__axum_macros_check_balance_0_from_request_call_check","__axum_macros_check_balance_0_from_request_check","__axum_macros_check_balance_1_from_request_call_check","__axum_macros_check_balance_1_from_request_check","__axum_macros_check_balance_future","__axum_macros_check_balance_into_response","__axum_macros_check_deposit_0_from_request_call_check","__axum_macros_check_deposit_0_from_request_check","__axum_macros_check_deposit_1_from_request_call_check","__axum_macros_check_deposit_1_from_request_check","__axum_macros_check_deposit_future","__axum_macros_check_deposit_into_response","__axum_macros_check_info_0_from_request_call_check","__axum_macros_check_info_0_from_request_check","__axum_macros_check_info_1_from_request_call_check","__axum_macros_check_info_1_from_request_check","__axum_macros_check_info_future","__axum_macros_check_info_into_response","__axum_macros_check_withdraw_0_from_request_call_check","__axum_macros_check_withdraw_0_from_request_check","__axum_macros_check_withdraw_1_from_request_call_check","__axum_macros_check_withdraw_1_from_request_check","__axum_macros_check_withdraw_future","__axum_macros_check_withdraw_into_response","address","balance","connect","deposit","info","pay_invoice","run_webserver","withdraw","retry"],"q":["ln_gateway","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::actor","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::cln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::config","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::gatewaylnrpcln_gateway::gatewaylnrpc::complete_htlcs_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::gatewaylnrpc::gateway_lightning_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::gatewaylnrpc::gateway_lightning_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::ln","","","","","","","","","","","","","","","","","","ln_gateway::rpcln_gateway::rpc::rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::rpc::rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::utils"],"d":["","","","","","","","","","","","","","","","","","","","","Register a federation to the gateway.","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Handles an intercepted HTLC that might be an incoming …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Arc reference to a database factory","dyn newtype for a Gateway federation client builder","","Trait for gateway federation client builders","A factory that creates in-memory databases","A factory that creates RocksDb database instances","","","","","","","","","","","","Build a new gateway federation client","","","","","","","","","","","","Create a new gateway federation client config from connect …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Load all gateway client configs from the work directory","","","Save and persist the configuration of the gateway …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The core-lightning <code>htlc_accepted</code> event’s <code>amount</code> field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Handle core-lightning “htlc_accepted” events by …","BOLT 4: …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","URL under which the API will be reachable","API webserver bind address","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","webserver authentication password","","","","","","","","","","","","","Request to subscribe to HTLCs with a specific short …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>CompleteHtlcsRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Generated client implementations.","Generated server implementations.","The incoming HTLC amount in millisatoshi. This amount …","The incoming HTLC expiry Determines block height when the …","","","","","","","","","A unique identifier for every intercepted HTLC Used to …","A unique identifier for every intercepted HTLC Used to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The outgoing HTLC amount in millisatoshi This is the …","The HTLC payment hash. Value is not guaranteed to be …","The preimage of the invoice","The public key of the associated lightning node","The short channel id of HTLCs to intercept","The short channel id of the HTLC. Use this value to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request to complete an intercepted HTLC with failure …","","Request to complete an intercepted HTLC with success …","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","Returns the encoded length of the message without a length …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","The preimage for settling an intercepted HTLC","The reason for the cancellation of an intercepted HTLC","","","","","","","","","","","","","","","","GatewayLightning is a service that provides limited access …","Enable decompressing responses.","","","","","CompleteHtlcs allows a client to stream Success or Failure …","Attempt to create a new client by connecting to a given …","","","","","Returns the argument unchanged.","","GetPubKey returns the public key of the associated …","","","Calls <code>U::from(self)</code>.","","","PayInvoice allows a client to stream requests to to pay …","Compress requests with the given encoding.","SubscribeInterceptHtlcs opens a stream for a client to …","","","","","","","","Server streaming response type for the CompleteHtlcs …","Generated trait containing gRPC methods that should be …","GatewayLightning is a service that provides limited access …","Server streaming response type for the PayInvoice method.","Server streaming response type for the …","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","CompleteHtlcs allows a client to stream Success or Failure …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","GetPubKey returns the public key of the associated …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","PayInvoice allows a client to stream requests to to pay …","","","Compress responses with the given encoding, if the client …","","SubscribeInterceptHtlcs opens a stream for a client to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Attempt to pay an invoice and block till it succeeds, …","Get the public key of the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Errors that may occur when processing a <code>Request</code>.","A Response to a submitted <code>Request</code>.","","","","","","","","","Get the full response body as <code>Bytes</code>.","","Stream a chunk of the response body.","","","Get the content-length of this response, if known.","","","","","","","","","","","Turn a response into an error if the server returned an …","Turn a reference to a response into an error if the server …","Returns a reference to the associated extensions.","Returns a mutable reference to the associated extensions.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the <code>Headers</code> of this <code>Response</code>.","Get a mutable reference to the <code>Headers</code> of this <code>Response</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the error is related to the request or …","Returns true if the error is from a type Builder.","Returns true if the error is related to connect","Returns true if the error is related to decoding the …","Returns true if the error is from a <code>RedirectPolicy</code>.","Returns true if the error is related to the request","Returns true if the error is from …","Returns true if the error is related to a timeout.","Try to deserialize the response body as JSON.","","","Get the remote address used to get this <code>Response</code>.","","","Returns the status code, if the error was generated from a …","Get the <code>StatusCode</code> of this <code>Response</code>.","Get the full response text.","Get the full response text given a specific encoding.","","","","","","","","","","","Consumes the response and returns a future for a possible …","Returns a possible URL related to this error.","Get the final <code>Url</code> of this <code>Response</code>.","","Returns a mutable reference to the URL related to this …","Get the HTTP <code>Version</code> of this <code>Response</code>.","","","","Add a url related to this error (overwriting any existing)","","Strip the related url from this error (if, for example, it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate deposit address","Display gateway ecash token balance","Connect a new federation","Deposit into a gateway federation.","Display gateway ecash token balance","","","Withdraw from a gateway federation.","Retry an operation util the operation succeeds, OR The …"],"i":[7,7,0,0,7,7,0,7,0,1,1,7,1,7,1,0,1,0,0,1,1,1,1,7,1,7,1,1,7,7,7,1,7,7,7,7,0,1,1,1,1,1,1,1,1,1,7,1,7,1,7,7,0,1,1,1,7,1,0,1,1,1,7,1,7,1,7,1,7,1,7,0,1,7,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,59,60,61,31,58,59,60,61,31,58,139,58,59,60,61,31,58,59,60,61,31,58,139,58,140,60,61,58,60,61,59,59,60,61,31,31,58,59,60,61,31,58,59,60,61,31,58,59,60,61,31,58,59,59,60,61,31,31,58,59,60,61,31,58,59,60,61,31,58,59,60,61,31,58,59,60,61,31,58,139,58,58,139,58,59,60,61,31,58,59,60,61,31,58,59,60,61,31,58,59,60,61,31,58,59,60,61,31,58,58,0,0,0,0,72,0,70,72,73,74,70,72,73,74,0,72,73,74,72,73,74,72,72,70,72,73,74,70,72,73,74,72,73,74,70,72,73,74,72,73,74,73,70,72,73,74,72,73,74,74,0,0,70,72,73,74,70,72,73,74,70,72,73,74,70,73,74,73,73,72,72,73,74,73,73,72,73,74,70,72,73,74,70,72,73,74,73,70,72,73,74,70,72,73,74,70,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,83,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,0,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,0,0,82,82,77,78,79,80,81,82,83,84,82,83,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,79,79,79,82,82,80,78,81,82,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,77,78,79,80,81,82,83,84,0,0,88,0,88,86,87,88,86,87,88,86,87,86,87,88,86,87,88,86,87,86,87,88,86,87,88,86,87,88,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,88,86,87,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,106,0,0,106,106,0,107,107,109,107,109,107,107,107,109,107,109,107,106,109,107,109,107,109,107,109,107,109,107,107,109,107,106,109,107,107,109,107,107,107,109,107,107,106,107,107,107,107,106,109,107,109,107,109,107,109,107,109,107,107,0,0,114,114,114,114,114,114,114,114,114,114,30,30,114,114,114,114,32,0,0,32,32,32,0,0,0,0,0,0,0,0,32,0,32,32,0,116,32,0,25,25,69,17,23,20,15,13,18,25,52,21,32,117,69,17,23,20,15,13,18,25,52,21,32,117,69,17,15,13,18,25,69,17,15,13,18,25,17,69,17,23,20,15,13,18,25,52,21,32,117,69,17,23,20,15,13,18,25,52,21,32,117,17,23,20,15,13,18,25,52,21,69,17,23,20,15,13,18,25,52,21,32,117,15,13,18,25,52,21,69,17,23,20,15,13,18,25,52,21,32,117,69,17,23,20,15,13,18,25,52,21,32,117,69,17,15,13,18,25,117,23,0,69,17,23,20,15,13,18,25,52,21,32,117,69,17,23,20,15,13,18,25,52,21,32,117,69,17,23,20,15,13,18,25,52,21,32,117,52,69,117,0,0,69,69,117,0,0,17,23,20,15,13,18,25,52,21,116,17,23,20,15,13,18,25,69,17,15,13,18,25,18,69,17,23,20,15,13,18,25,52,21,32,117,69,17,23,20,15,13,18,25,52,21,32,117,18,69,17,23,20,15,13,18,25,52,21,32,117,21,69,17,23,20,15,13,18,25,52,21,32,117,0,0,0,124,125,124,123,125,124,123,123,124,123,124,124,123,124,125,124,123,125,124,123,125,124,123,123,123,123,123,125,125,123,125,124,123,123,124,124,124,123,123,125,124,123,125,125,124,123,125,124,123,125,125,125,125,125,125,125,125,123,124,125,123,123,125,125,123,123,123,125,125,124,123,125,124,123,125,124,123,123,125,123,123,125,123,125,124,123,125,124,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[1,[3,[2]]],[[5,[[3,[4]]]]]],0,[6],[6],[6],[6],[6],[1],[6],[[7,8],9],[[7,8],9],[[]],[10,7],[[]],[11,7],[12,7],0,[[1,13],[[5,[14]]]],[[1,15],[[5,[16]]]],[[1,17],5],[[1,18],[[5,[19]]]],[[1,20],[[5,[21]]]],[[1,22],5],[[1,23],[[5,[24]]]],[[1,25],[[5,[19]]]],[[],6],[[],6],[[]],[[]],[[],26],[[],26],[7,27],0,0,[[1,28]],[[29,28,[3,[30]],31,[33,[32]],[34,[32]],35],1],[36],0,0,[1,5],[[1,37],[[5,[[3,[4]]]]]],0,[7,[[39,[38]]]],0,[[],40],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],0,[[]],[[]],0,[[4,43,44],5],[[4,44],[[5,[24]]]],[[]],[[]],[[4,[3,[30]],45,46],[[5,[24]]]],[[4,47,16],[[5,[24]]]],[[4,47,16,[0,[48,49]]],5],0,[[4,50,51],[[5,[19]]]],[6],[6],[6],[4],[[]],[4,[[5,[16]]]],[4,[[5,[14]]]],[4,[[5,[52]]]],[[],6],[[]],[[],26],[[[3,[2]]],[[5,[4]]]],[[4,[3,[30]],43],[[5,[44]]]],[[],41],[[],41],[[],42],[[]],[[4,53,14],[[5,[19]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[54,28],[[57,[[56,[55]]]]]],[[58,54,28],[[57,[[56,[55]]]]]],[59,59],[60,60],[61,61],[31,31],[58,58],[[]],[[]],[[]],[[]],[[]],[[62,63,64,65],[[57,[[56,[55]]]]]],[[58,62,63,64,65],[[57,[[56,[55]]]]]],[[37,66,28],[[5,[67]]]],[[60,37,66,28],[[5,[67]]]],[[61,37,66,28],[[5,[67]]]],0,[[],60],[[],61],[59],[6],[6],[6],[31],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[59,8],9],[[60,8],9],[[61,8],9],[[31,8],9],[[58,8],9],[[],59],[[]],[[]],[[]],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[5,[[68,[54]]]]]],[58,[[5,[[68,[54]]]]]],[[66,59],58],[54,5],[[58,54],5],[[]],[[]],[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[41,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[41,[70,71]]]],[72,72],[73,73],[74,74],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[[],[[41,[72]]]],[[],[[41,[73]]]],[[],[[41,[74]]]],[6],[6],[6],[6],[[72,8],9],[[73,8],9],[[74,8],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[75,[69]],76],[[41,[76,71]]]],[[],76],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,[72,41],[73,41],[74,41],0,0,[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[29,29],[[]],[6],[6],[[],[[41,[29]]]],[6],[[29,8],9],[[]],[[]],[[],6],[[]],[[],26],0,[29,41],[[]],[[],41],[[],41],[[],42],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77],[78],[79],[80],[81],[82],[83],[84],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],77],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[],84],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[77,6],[78,6],[79,6],[80,6],[81,6],[82,6],[83,6],[84,6],[[77,77],85],[[78,78],85],[[79,79],85],[[80,80],85],[[81,81],85],[[82,82],85],[[83,83],85],[[84,84],85],[[77,8],9],[[78,8],9],[[79,8],9],[[80,8],9],[[81,8],9],[[82,8],9],[[83,8],9],[[84,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[86],[87],[86,86],[87,87],[88,88],[[]],[[]],[[]],[[],86],[[],87],[6],[6],[6],[6],[6],[6],[6],[6],[6],[88],[86,6],[87,6],[88,6],[[86,86],85],[[87,87],85],[[88,88],85],[[86,8],9],[[87,8],9],[[88,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[39,89,90,91],[[41,[92]]]],0,0,[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],[[],42],[[]],[[]],[[]],0,[[93,94],93],[[]],[[]],[[[93,[95]]],[[93,[95]]]],[[]],[[93,96],[[41,[[98,[[97,[84]]]],99]]]],[[],[[41,[[93,[100]],101]]]],[6],[6],[6],[[[93,[102]],8],9],[[]],[[]],[[93,[103,[77]]],[[41,[[98,[78]],99]]]],[[],6],0,[[]],[[],26],[[],93],[[93,96],[[41,[[98,[[97,[80]]]],99]]]],[[93,94],93],[[93,[103,[81]]],[[41,[[98,[[97,[82]]]],99]]]],[[]],[[],41],[[],41],[[],42],[[]],[[],[[93,[104]]]],[105,93],0,0,0,0,0,0,[[[107,[106]],94],[[107,[106]]]],0,[[]],[[]],[[]],[[]],[[107,108]],[108],[[[109,[106]]],[[109,[106]]]],[[[107,[106]]],[[107,[106]]]],[[]],[[]],[[[26,[[97,[83]]]]],[[57,[[56,[55]]]]]],[6],[6],[6],[6],[6],[6],[[[109,[102]],8],9],[[[107,[[0,[102,106]]]],8],9],[[]],[[]],[[[3,[106]]],[[107,[106]]]],[[]],[[]],[[[26,[77]]],[[57,[[56,[55]]]]]],[[],6],[[],6],0,[[]],[[]],[[],110],[[],111],[[],26],[[],26],[106,[[107,[106]]]],[[[26,[[97,[79]]]]],[[57,[[56,[55]]]]]],[112,[[113,[41]]]],[[107,112],[[113,[41]]]],[[[107,[106]],94],[[107,[106]]]],0,[[[26,[81]]],[[57,[[56,[55]]]]]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],[[]],[[]],[106,[[104,[[107,[106]]]]]],0,0,[[]],[[]],[6],[6],[6],[[114,8],9],[[]],[[],6],[[]],[[],26],[[45,63,115],[[57,[[56,[55]]]]]],[[],[[57,[[56,[55]]]]]],[[],41],[[],41],[[],42],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[17,17],[15,15],[13,13],[18,18],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[41,[17]]]],[[],[[41,[23]]]],[[],[[41,[20]]]],[[],[[41,[15]]]],[[],[[41,[13]]]],[[],[[41,[18]]]],[[],[[41,[25]]]],[[],[[41,[52]]]],[[],[[41,[21]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,0,0,0,[[69,8],9],[[17,8],9],[[23,8],9],[[20,8],9],[[15,8],9],[[13,8],9],[[18,8],9],[[25,8],9],[[52,8],9],[[21,8],9],[[32,8],9],[[[117,[[0,[102,116]]]],8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[117,118]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[[33,[32]]],69],0,0,0,[69,[[41,[12]]]],0,0,[119,[[41,[120]]]],[121,41],[17,41],[23,41],[20,41],[15,41],[13,41],[18,41],[25,41],[52,41],[21,41],[[[122,[5]]],32],[[17,[122,[5]]],32],[[23,[122,[5]]],32],[[20,[122,[5]]],32],[[15,[122,[5]]],32],[[13,[122,[5]]],32],[[18,[122,[5]]],32],[[25,[122,[5]]],32],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[123,55],[[124,65,40],[[41,[123,125]]]],[123,55],0,[[124,40,17],[[41,[123,125]]]],[123,[[39,[63]]]],[[124,40,18],[[41,[123,125]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[123,[[41,[123,125]]]],[123,[[41,[123,125]]]],[123,126],[123,126],[[125,8],[[41,[127]]]],[[125,8],[[41,[127]]]],[[123,8],[[41,[127]]]],[[]],[[]],[[]],[128,123],[[124,40,15],[[41,[123,125]]]],[[124,40,13],[[41,[123,125]]]],[[124,40],[[41,[123,125]]]],[123,129],[123,129],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[],26],[[],26],[[],26],[125,85],[125,85],[125,85],[125,85],[125,85],[125,85],[125,85],[125,85],[123,55],[65,124],[36],[123,[[39,[130]]]],0,[125,[[39,[38]]]],[125,[[39,[131]]]],[123,131],[123,55],[[123,132],55],[[],40],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],[[],42],[123,55],[125,[[39,[65]]]],[123,65],0,[125,[[39,[65]]]],[123,133],[[]],[[]],[[]],[[125,65],125],[[124,40,25],[[41,[123,125]]]],[125,125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[134,[69]],[135,[13]]],[[41,[136,7]]]],[[[134,[69]],[135,[15]]],[[41,[136,7]]]],[[[134,[69]],[135,[17]]],[[41,[136,7]]]],[[[134,[69]],[135,[18]]],[[41,[136,7]]]],[[[134,[69]],[135,[20]]],[[41,[136,7]]]],[[[134,[69]],[135,[22]]],[[41,[136,7]]]],[[40,130,69],137],[[[134,[69]],[135,[25]]],[[41,[136,7]]]],[[40,138,89],[[41,[12]]]]],"p":[[3,"LnGateway"],[6,"GatewayClient"],[3,"Arc"],[3,"GatewayActor"],[6,"Result"],[15,"usize"],[4,"LnGatewayError"],[3,"Formatter"],[6,"Result"],[4,"MintClientError"],[4,"ClientError"],[3,"Error"],[3,"DepositAddressPayload"],[3,"Address"],[3,"BalancePayload"],[3,"Amount"],[3,"ConnectFedPayload"],[3,"DepositPayload"],[3,"TransactionId"],[3,"InfoPayload"],[3,"GatewayInfo"],[3,"PayInvoicePayload"],[3,"ReceivePaymentPayload"],[3,"Preimage"],[3,"WithdrawPayload"],[3,"Request"],[6,"Response"],[6,"ModuleDecoderRegistry"],[3,"GatewayConfig"],[8,"LnRpc"],[3,"DynGatewayClientBuilder"],[4,"GatewayRequest"],[3,"Sender"],[3,"Receiver"],[3,"TaskGroup"],[3,"Demand"],[3,"FederationId"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"ContractId"],[3,"OutPoint"],[3,"Invoice"],[3,"PaymentParameters"],[3,"Hash"],[8,"RngCore"],[8,"CryptoRng"],[3,"TxOutProof"],[3,"Transaction"],[3,"FederationInfo"],[3,"Amount"],[3,"GatewayClientConfig"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"StandardGatewayClientBuilder"],[3,"DynDbFactory"],[3,"MemDbFactory"],[3,"RocksDbFactory"],[3,"WsFederationConnect"],[15,"u64"],[3,"PublicKey"],[3,"Url"],[3,"PathBuf"],[3,"Database"],[3,"Vec"],[3,"GatewayRpcSender"],[3,"ClnRpcRef"],[6,"Error"],[3,"Htlc"],[3,"Onion"],[3,"HtlcAccepted"],[3,"Plugin"],[4,"Value"],[3,"GetPubKeyRequest"],[3,"GetPubKeyResponse"],[3,"PayInvoiceRequest"],[3,"PayInvoiceResponse"],[3,"SubscribeInterceptHtlcsRequest"],[3,"SubscribeInterceptHtlcsResponse"],[3,"CompleteHtlcsRequest"],[3,"CompleteHtlcsResponse"],[15,"bool"],[3,"Settle"],[3,"Cancel"],[4,"Action"],[15,"u32"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[3,"GatewayLightningClient"],[4,"CompressionEncoding"],[8,"Clone"],[8,"IntoStreamingRequest"],[3,"Streaming"],[3,"Response"],[3,"Status"],[3,"Channel"],[3,"Error"],[8,"Debug"],[8,"IntoRequest"],[3,"InterceptedService"],[3,"Uri"],[8,"GatewayLightning"],[3,"GatewayLightningServer"],[3,"Request"],[3,"_Inner"],[3,"IntoMakeService"],[3,"IntoMakeServiceWithConnectInfo"],[3,"Context"],[4,"Poll"],[3,"LightningError"],[15,"f64"],[8,"GatewayRequestTrait"],[3,"GatewayRequestInner"],[8,"Fn"],[8,"Deserializer"],[8,"Decodable"],[8,"Serializer"],[3,"Sender"],[3,"Response"],[3,"RpcClient"],[3,"Error"],[3,"Extensions"],[3,"Error"],[3,"Response"],[3,"HeaderMap"],[4,"SocketAddr"],[3,"StatusCode"],[15,"str"],[3,"Version"],[3,"Extension"],[3,"Json"],[8,"IntoResponse"],[6,"Result"],[3,"Duration"],[8,"IGatewayClientBuilder"],[8,"IDbFactory"]]},\
"mint_client":{"doc":"","t":[13,3,4,3,13,13,13,6,3,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,17,13,13,3,13,13,13,13,6,13,13,13,13,6,3,13,13,13,13,13,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,12,11,12,12,0,12,11,11,5,11,11,11,12,11,11,12,11,11,11,0,11,12,11,11,11,11,12,11,0,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,13,3,13,8,3,3,6,8,8,13,13,8,6,6,8,4,6,8,4,6,3,13,13,13,13,13,8,3,3,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,5,5,5,0,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,11,11,10,11,12,12,11,12,11,11,11,10,11,11,11,11,10,11,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,5,11,11,11,11,11,11,11,11,12,12,12,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,13,3,4,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,3,6,13,13,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,13,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,13,17,17,3,4,3,3,3,13,13,13,6,3,13,13,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,13,3,3,4,3,13,3,3,13,3,13,3,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,13,4,8,3,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,12,11,11,3,12,11,11,12,12,11,11,11,11,11,5,11,11,5,5,5,5,5,12,5,11,11,11,11,13,13,13,13,13,6,3,4,11,11,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelUnknownOutgoingContract","Client","ClientError","ClientSecret","DeleteUnknownOutgoingContract","FailedPaymentNoRefund","FetchOfferError","GatewayClient","GatewayClientConfig","GatewayNotFound","HttpError","InvalidAmountTier","InvalidInvoice","InvalidOffer","InvalidPreimage","InvalidSignature","InvalidTransaction","InvoiceError","InvoiceMissingAmount","LnClientError","MINT_SECRET_CHILD_ID","MintApiError","MintClientError","NoGateways","NoOffer","NotOurKey","OUTGOING_LN_CONTRACT_TIMELOCK","OutgoingPaymentTimeout","OutputOutcome","PaymentParameters","PegInAmountTooSmall","PegOutWaitingForUTXOs","RefundUnknownOutgoingContract","RefundedFailedPayment","Result","SpendReusedNote","Timeout","TimeoutTooClose","Underfunded","UserClient","UserClientConfig","ViolatedFeePolicy","WaitContractTimeout","WalletClientError","WrongContractType","WrongTransactionType","abort_outgoing_payment","api","api","as_ref","as_ref","await_consensus_block_height","await_consensus_block_height_inner","await_outgoing_contract_acceptance","await_outgoing_contract_claimed","await_outgoing_contract_execution","await_outpoint_outcome","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_offer","claim_incoming_contract","claim_outgoing_contract","client_config","clone","clone","clone_into","clone_into","config","config","consensus_decode","consensus_encode","consensus_encode_dyn","context","db","db","decoders","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","equivalent","fetch_active_gateway","fetch_all_coins","fetch_coins","fetch_epoch_history","fetch_outgoing_contract","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","fund_outgoing_ln_contract","generate_invoice","get_new_pegin_address","get_secret","init","init","init","init","init","init","into","into","into","into","into","into","into_root_secret","invoice_amount","is_maybe_internal_payment","list_active_issuances","list_fetchable_coins","list_pending_claimed_outgoing","list_pending_outgoing","ln","ln_client","max_delay","max_fee_percent","max_send_amount","maybe_internal","mint","mint_channel_id","mint_client","mint_secret_static","module_decode_stubs","new","new_peg_out_with_fees","new_with_api","node_pub_key","notes","pay_to_blind_nonces","payment_hash","peg_in","peg_out","provide","query","receive_coins","redeem_key","refund_incoming_contract","register_with_federation","reissue","reissue_pending_notes","root_secret","save_outgoing_payment","serde_keypair","serialize","serialize","serialize","source","spend_ecash","submit_tx_with_change","switch_active_gateway","timelock_delta","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","type_id","type_id","type_id","type_id","type_id","type_id","utils","validate_note_signatures","validate_outgoing_account","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet_client","Core","DynFederationApi","Federation","FederationApiExt","FederationError","FederationMember","FederationResult","GlobalFederationApi","IFederationApi","InvalidPeerId","InvalidVout","JsonRpcClient","JsonRpcResult","JsonValue","LnFederationApi","MemberError","MemberResult","MintFederationApi","OutputOutcomeError","OutputOutcomeResult","PeerResponse","Rejected","ResponseDeserialization","ResponseDeserialization","Rpc","Timeout","WalletFederationApi","WsFederationApi","WsFederationConnect","all_members","all_members","await_output_outcome","await_output_outcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","connect","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","download_client_config","download_client_config","download_ecash_backup","download_ecash_backup","drop","drop","drop","drop","drop","drop","drop","drop","erased_multi_param","erased_no_param","erased_single_param","fake","fetch_consensus_block_height","fetch_consensus_block_height","fetch_contract","fetch_contract","fetch_epoch_history","fetch_epoch_history","fetch_gateways","fetch_gateways","fetch_last_epoch","fetch_last_epoch","fetch_offer","fetch_offer","fetch_output_outcome","fetch_output_outcome","fetch_peg_out_fees","fetch_peg_out_fees","fetch_tx_outcome","fetch_tx_outcome","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_config","get_client_config","get_client_config","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_connected","is_retryable","is_retryable","is_retryable","members","members","new","new_with_client","offer_exists","offer_exists","peer","peer_id","peers","peers","provide","provide","provide","register_gateway","register_gateway","request","request_current_consensus","request_eventually_consistent","request_raw","request_raw","request_union","request_with_strategy","result","serialize","source","source","submit_transaction","submit_transaction","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_ecash_backup","upload_ecash_backup","url","url_to_string_with_default_port","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","peer_id","out_idx","outputs_num","FederationApiFaker","Handler","all_members","await_output_outcome","borrow","borrow_mut","deref","deref_mut","download_client_config","download_ecash_backup","drop","fetch_consensus_block_height","fetch_contract","fetch_epoch_history","fetch_gateways","fetch_last_epoch","fetch_offer","fetch_output_outcome","fetch_peg_out_fees","fetch_tx_outcome","fmt","from","get_client_config","handlers","init","into","members","new","offer_exists","register_gateway","request_raw","state","submit_transaction","try_from","try_into","type_id","upload_ecash_backup","vzip","with","ClientSecret","ClientSecretKey","DbKeyPrefix","DbKeyPrefixIter","back_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","get","idx","init","init","init","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ApiError","LnClient","LnClientError","MissingInvoiceAmount","NoConfirmedInvoice","PayInvoicePayload","Result","Timeout","WrongAccountType","as_any","await_outgoing_refundable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","config","context","contract_id","create_cancel_outgoing_output","create_offer_output","create_outgoing_output","create_refund_outgoing_contract_input","db","decoder","decoder","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","federation_id","fmt","fmt","fmt","fmt","from","from","from","get_confirmed_invoice","get_contract_account","get_incoming_contract","get_offer","get_outgoing_contract","incoming","init","init","init","input_amount","into","into","into","is_outgoing_contract_refundable","new","offer_exists","outgoing","output_amount","provide","refundable_outgoing_contracts","save_confirmed_invoice","serialize","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ConfirmedInvoice","ConfirmedInvoiceKey","ConfirmedInvoiceKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","OutgoingContractAccount","OutgoingContractAccountKey","OutgoingContractAccountKeyPrefix","OutgoingPayment","OutgoingPaymentClaim","OutgoingPaymentClaimKey","OutgoingPaymentClaimKeyPrefix","OutgoingPaymentKey","OutgoingPaymentKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConfirmedInvoice","IncomingContractAccount","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","invoice","keypair","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","recovery_key","refund","serialize","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApiError","CoinFinalizationError","FinalizationError","InsufficientBalance","InvalidAmountTier","InvalidIssuanceId","InvalidOutcomeType","InvalidOutcomeWrongStructure","InvalidSignature","InvalidSignatureAtIdx","MINT_E_CASH_BACKUP_SNAPSHOT_TYPE_CHILD_ID","MINT_E_CASH_TYPE_CHILD_ID","MintClient","MintClientError","NoteIndex","NoteIssuanceRequest","NoteIssuanceRequests","OutputNotReadyYet","OutputOutcomeError","ReceivedUspendableCoin","Result","SpendableNote","UnknownIssuance","WrongMintAnswer","advance","as_any","as_u64","back_up_ecash_to_federation","backup","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","coin_amount","coin_count","coins","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","create_ecash","db","decoder","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","download_ecash_backup_from_federation","drop","drop","drop","drop","drop","drop","drop","ecash_input","epoch_pk","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fetch_all_coins","fetch_coins","fetch_epochs","finalize","finalize","finalize_change","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_u64","get_available_notes","get_derived_backup_encryption_key","get_derived_backup_encryption_key_static","get_derived_backup_signing_key","get_derived_backup_signing_key_static","get_hash","get_next_note_index","hash","init","init","init","init","init","init","init","input_amount","into","into","into","into","into","into","into","is_retryable","list_active_issuances","new","new_ecash_note","new_note_secret","new_note_secret_static","next","nonce","note","notes","notes_per_denomination","output_amount","partial_cmp","prepare_ecash_backup","prepare_plaintext_ecash_backup","provide","provide","receive_coins","recover_blind_nonce","restore_current_state_from_backup","restore_ecash_from_federation","secret","select_input","select_notes","serialize","serialize","serialize","serialize","set_notes_per_denomination","source","spend_key","spend_key","start_dbtx","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_ecash_backup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_notes","wipe_notes_static","EcashBackup","EcashRecoveryFinalState","EcashRecoveryTracker","PlaintextEcashBackup","add_next_pending_nonce_in_pending_pool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","decode","decrypt_with","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","encode","encrypt_to","epoch","eq","equivalent","fill_initial_pending_nonces","finalize","fmt","fmt","fmt","from","from","from","from","from_backup","from_bytes","gap_limit","get_alignment_size","handle_consensus_item","handle_input","handle_output","handle_output_confirmation","init","init","init","init","into","into","into","into","into_backup_request","last_mined_nonce_idx","new_empty","next_note_idx","next_note_idx","next_pending_note_idx","notes","observe_nonce_idx_being_used","pending_nonces","pending_notes","pending_outputs","pub_key_shares","secret","serialize","spendable_note_by_nonce","spendable_notes","tbs_pks","threshold","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unconfirmed_notes","vzip","vzip","vzip","vzip","Coin","CoinKey","CoinKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","NextECashNoteIndex","NextECashNoteIndexKey","NextECashNoteIndexKeyPrefix","NotesPerDenomination","NotesPerDenominationKey","OutputFinalizationData","OutputFinalizationKey","OutputFinalizationKeyPrefix","PendingCoins","PendingCoinsKey","PendingCoinsKeyPrefix","amount","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nonce","nth","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Continue","CurrentConsensus","EventuallyConsistent","FailMembers","Failure","QueryStep","QueryStrategy","Retry404","RetryMembers","Success","TrustAllPeers","UnionResponses","UnionResponsesSingle","ValidHistory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","current","current","current","current","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","epoch_pk","errors","existing_results","existing_results","existing_results","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","new","new","new","new","new","new","process","process","process","process","process","process","process","process","required","required","required","required","responses","responses","responses","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","Final","TransactionBuilder","borrow","borrow_mut","build","build_with_change","change_required","default","deref","deref_mut","drop","fee_amount","from","init","input","input_amount","input_amount_iter","into","is_final","keys","output","output_amount","output_amount_iter","try_from","try_into","tx","type_id","vzip","ClientContext","api","borrow","borrow_mut","db","decoders","deref","deref_mut","drop","fmt","from","from_hex","init","into","network_to_currency","parse_bitcoin_amount","parse_ecash","parse_fedimint_amount","parse_node_pub_key","secp","serialize_ecash","try_from","try_into","type_id","vzip","ApiError","NoMatchingPegInFound","OutputOutcomeError","PegInAmountTooSmall","PegInProofError","Result","WalletClient","WalletClientError","as_any","await_peg_out_outcome","borrow","borrow","borrow_mut","borrow_mut","config","context","create_pegin_input","db","decoder","decoder","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","get_new_pegin_address","init","init","input_amount","into","into","output_amount","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","PegIn","PegInKey","PegInPrefixKey","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","peg_in_script","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["mint_clientmint_client::apimint_client::api::MemberError","mint_client::api::OutputOutcomeError","","mint_client::api::fake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::dbmint_client::ln::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mintmint_client::mint::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mint::dbmint_client::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::serde_keypair","","mint_client::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::utils","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","Mint module’s secret key derivation child id","","","","","","Number of blocks until outgoing lightning contracts times …","","","","","","","","","","","","","","","","","","","","Abort payment if our node can’t route it and give money …","","","","","","","","Waits for a outgoing contract claim transaction to be …","Notify gateway that we’ve escrowed tokens they can claim …","Waits for the federation to sign an ecash note.","Wait for a lightning preimage gateway has purchased to be …","","","","","","","","","","","","","Buy a lightning preimage listed for sale inside the …","","Claim an outgoing contract after acquiring the preimage by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to fetch e-cash tokens from a certain out point. An …","","Fetch the specified outgoing payment contract account","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","Returns a bitcoin address suited to perform a fedimint …","Fetches the client secret from the database or generates a …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the invoice contains us as a routing hint","","","Lists all claim transactions for outgoing contracts that …","Lists all previously saved transactions that have not been …","","","","","","","","Channel identifier assigned to the mint by the gateway. …","","","Builds a fake module registry which is only usable for …","","","","","","Pay by creating notes provided (and most probably …","","","","","","Receive e-cash directly from another user when online (vs. …","","Claw back funds after incoming contract that had invalid …","Register this gateway with the federation","Spent some <code>SpendableNote</code>s to receive a freshly minted ones","Should be called after any transaction that might have …","","Save the details about an outgoing payment the client is …","","","","","","Issues a spendable amount of ecash","","Switches the clients active gateway to a registered …","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","Validate signatures on notes.","Check if we can claim the contract account and returns the …","","","","","","","","","","","","An extension trait allowing to making federation-wide API …","An API request error when calling an entire federation","","","","","","","","","","","An API request error when calling a single federation …","","","","","","","","","","","","Mint API client that will try to run queries against all …","Information required for client to construct …","List of all federation members for the purpose of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch verifiable client configuration info","","","","","","","","","","","","Build a <code>Vec&lt;json::Value&gt;</code> that <code>IFederationApi::request_raw</code> …","Build a <code>Vec&lt;json::Value&gt;</code> that <code>IFederationApi::request_raw</code> …","Build a <code>Vec&lt;json::Value&gt;</code> that <code>IFederationApi::request_raw</code> …","","","","","","","","","","","","","","","","","","","Fetch the outcome of an entire transaction","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new API client","Creates a new API client","","","","","","","","","","","","","","","Make request to a specific federation member by <code>peer_id</code>","","","Make an aggregate request to federation, using <code>strategy</code> to …","","","","","","Submit a transaction for inclusion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>jsonrpsee</code> converts the <code>Url</code> to a <code>&amp;str</code> internally and then …","","","","","","","","","","","","A fake <code>super::IFederationApi</code> builder","","","","","","","","","","","","","","","","","","","Fetch the outcome of an entire transaction","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Submit a transaction for inclusion","","","","","","Add a handler <code>f</code> to a <code>method </code> call","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for an outgoing contract to become refundable","","","","","","","","","","Used by gateway to prematurely return funds to the user if …","","Create an output that incentivizes a Lighning gateway to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines if an outgoing contract can be refunded","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoice whose “offer” has been accepted by federation","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The invoice itself","Keypair that will be able to sweep contract once it has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation module client for the Mint module. It can both …","","An index used to deterministically derive <code>Note</code>s","Single <code>Note</code> issuance request to the mint.","Multiple <code>Note</code> issuance requests","","","","","A <code>Note</code> with associated secret key that allows to proof …","","","","","","Prepare an encrypted backup and send it to federation for …","Backup and recovery of ecash notes","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalization data for all coin outputs in this request","","","","","","","","","","","","","","","Generates unsigned ecash, along with the private keys that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch epochs in a given range and send them over <code>sender</code>","","Finalize the issuance request using a …","Adds the final amounts of <code>change</code> to the tx before …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Get available spendable notes with a db transaction …","","Static version of <code>Self::get_derived_backup_encryption_key</code> …","","Static version of <code>Self::get_derived_backup_signing_key</code> for …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","Generate a request session for a single coin and returns …","","","Derive the note <code>DerivableSecret</code> from the Mint’s <code>secret</code> …","","","","","","","","","","","","","","","","","","","","","","","","","Spend key from which the coin nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete all the note-related data from the database","Encrypted version of <code>PlaintextEcashBackup</code>.","","The state machine used for fast-fowarding backup from …","Snapshot of a ecash state (notes)","Add next nonce from <code>amount</code> tier to the …","","","","","","","","","","","","Decode from a plaintexet (possibly aligned) message","","","","","","","","","","","","","","","Encode <code>self</code> to a padded (but still plaintext) message","Encrypt with a key and turn into <code>EcashBackup</code>","","","","Fill each tier pool to the gap limit","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The number of nonces we look-ahead when looking for mints …","Align an ecoded message size up for better privacy","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>LastECashNoteIndex</code> but tracked in flight. Basically max …","An empty backup with, like a one created by a newly …","","Note index to derive next note in a given amount tier","Tail of <code>pending</code>. <code>pending_notes</code> is filled by generating …","","React to a valid pending nonce being tracked being used in …","Next nonces that we expect might soon get used. Once we …","","Outputs (by <code>OutPoint</code>) we track federation member …","Public key shares for each peer","The <strong>mint</strong> (not root) derived secret used to derive notes","","Nonces that we track that are currently spendable.","Nonces that we track that are currently spendable.","Aggregate public key for each amount tier","Threshold","","","","","","","","","","","","","","Unsigned notes","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do nothing yet, keep waiting for requests","Returns when <code>required</code> responses are equal","Returns when <code>required</code> responses are equal, retrying after …","Fail these members and remember their errors","Fail the whole request and remember errors from given …","Results from the strategy handling a response from a peer","","Returns when <code>required</code> responses are equal, retrying on 404 …","Retry request to this peer","Return the succsessful result","Returns a result from the first responding peer","Returns the deduplicated union of <code>required</code> number of …","Returns the deduplicated union of <code>required</code> number of …","Returns first epoch with a valid sig, otherwise wait till …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Previously received responses/results","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds and signs the final transaction with correct change","Builds and signs the final transaction with exact change …","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Federation module client for the Wallet module. It can …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a bitcoin-address derived from the federations …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,0,0,0,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,0,4,4,0,4,4,4,4,0,4,4,4,4,0,0,4,4,4,4,4,2,0,1,6,1,2,2,2,2,2,2,2,2,31,6,1,19,4,2,31,6,1,19,4,2,2,2,1,6,1,6,1,2,2,19,19,19,2,0,2,2,2,31,6,1,19,4,2,31,6,1,19,4,6,1,2,31,6,1,19,4,1,1,2,2,2,2,2,2,31,6,1,19,4,4,2,31,6,1,19,4,4,4,4,4,4,4,4,4,19,2,2,2,2,2,31,6,1,19,4,2,31,6,1,19,4,19,31,2,2,2,2,2,0,2,31,31,31,31,0,1,2,2,0,2,2,2,1,2,2,31,2,2,4,0,2,1,2,2,2,2,2,2,0,6,1,19,4,2,2,2,1,19,6,1,4,0,2,31,6,1,19,4,2,31,6,1,19,4,2,2,31,6,1,19,4,0,2,2,2,31,6,1,19,4,0,2,40,0,40,0,0,0,0,0,0,86,40,0,0,0,0,0,0,0,0,0,0,40,86,40,86,40,0,0,0,200,77,201,77,86,39,40,57,77,87,83,88,86,39,40,57,77,87,83,88,87,73,86,39,40,57,57,77,87,83,88,86,39,40,57,77,87,83,88,83,201,77,202,77,86,39,40,57,77,87,83,88,0,0,0,0,203,77,204,77,201,77,204,77,201,77,204,77,201,77,203,77,201,77,86,86,39,39,40,40,57,77,87,83,88,86,86,39,40,40,40,57,57,77,87,83,83,88,77,201,77,86,39,40,57,77,87,83,88,86,39,40,57,77,87,83,88,73,86,39,40,77,83,77,77,204,77,88,87,77,77,86,39,40,204,77,87,205,205,200,77,205,205,88,83,86,40,201,77,86,39,40,86,39,40,57,77,87,83,88,86,39,40,57,77,87,83,88,86,39,40,57,77,87,83,88,202,77,87,0,86,39,40,57,77,87,83,88,206,207,207,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,101,0,0,0,102,101,102,103,101,102,103,101,102,101,102,103,103,103,101,102,103,101,102,103,101,102,103,101,101,103,101,102,103,103,103,102,102,101,102,103,101,102,103,102,101,102,102,102,102,102,103,102,103,103,101,102,101,101,102,103,101,102,103,101,102,103,101,102,103,38,0,0,38,38,0,0,38,38,50,50,50,112,38,50,112,38,50,50,112,50,50,50,50,0,50,50,50,112,38,50,112,38,112,50,112,38,112,50,112,38,38,50,112,38,50,50,50,50,50,0,50,112,38,50,50,112,38,50,112,50,0,50,38,50,50,112,38,50,112,38,50,112,38,50,112,38,50,112,38,118,0,0,0,0,118,0,0,118,0,0,118,118,0,0,0,0,119,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,118,119,118,119,120,121,122,123,124,125,126,127,128,129,120,121,122,123,124,125,126,127,128,129,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,118,118,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,119,119,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,119,118,119,119,119,119,119,120,122,124,126,128,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,118,119,118,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,118,119,120,121,122,123,124,125,126,127,128,129,0,0,114,114,47,114,47,114,114,114,114,47,114,47,114,47,114,47,114,47,114,47,114,47,114,47,114,47,114,47,114,47,114,47,47,47,47,114,47,114,114,47,114,47,114,47,114,47,0,0,30,110,30,110,30,30,30,30,110,30,110,30,110,30,30,110,110,30,110,30,110,30,110,30,110,30,110,30,110,30,110,30,110,30,110,30,110,30,30,110,30,110,30,110,30,110,30,35,0,35,35,145,145,35,35,145,145,0,0,0,0,0,0,0,35,35,35,0,0,145,145,131,52,131,52,0,133,52,131,133,134,58,145,35,52,131,133,134,58,145,35,52,131,133,134,58,52,131,133,134,58,131,134,134,134,52,131,133,134,58,131,133,134,58,131,133,134,58,52,52,0,52,52,131,134,52,131,133,134,58,145,35,52,131,133,134,58,145,35,131,133,134,58,52,52,131,133,134,58,145,35,52,52,131,133,134,58,131,133,134,58,134,52,52,52,133,134,52,52,131,131,133,134,58,145,145,35,35,52,131,133,134,58,145,145,35,35,35,35,131,133,134,58,131,52,52,52,52,52,58,52,58,52,131,133,134,58,145,35,52,52,131,133,134,58,145,35,35,52,133,52,52,52,131,133,58,52,52,52,131,52,52,145,35,52,133,52,52,52,52,52,131,133,134,58,52,35,133,58,52,131,133,134,58,52,131,133,134,58,131,145,35,52,131,133,134,58,145,35,52,131,133,134,58,145,35,52,131,133,134,58,145,35,52,52,131,133,134,58,145,35,52,52,0,0,0,0,155,151,137,153,155,151,137,153,155,137,137,137,137,151,151,137,153,155,151,137,153,155,137,151,137,153,155,137,137,137,137,137,155,155,137,153,155,151,137,153,155,155,137,155,137,155,155,155,155,151,137,153,155,151,137,153,155,151,155,137,137,153,155,137,155,155,137,155,155,155,137,155,153,155,155,137,151,137,153,155,151,137,153,155,151,137,153,155,153,151,137,153,155,163,0,0,0,0,163,0,0,163,0,163,0,0,163,0,0,165,164,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,169,163,164,165,166,167,168,169,170,171,172,173,169,169,163,163,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,164,164,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,164,163,164,164,164,164,165,164,165,167,169,172,173,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,163,164,165,166,167,168,169,170,171,172,173,163,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,163,164,165,166,167,168,169,170,171,172,173,174,0,0,174,174,0,0,0,174,174,0,0,0,0,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,175,176,177,178,179,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,175,180,176,177,180,174,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,175,176,177,178,179,180,95,182,175,176,177,178,179,180,176,177,179,180,176,177,179,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,182,175,176,177,178,179,180,174,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,208,66,66,66,66,66,66,66,66,66,0,187,187,187,187,187,187,187,187,187,187,0,187,187,0,0,0,0,0,187,0,187,187,187,187,41,41,41,41,41,0,0,0,71,71,71,41,71,41,71,71,71,0,71,71,71,41,71,41,71,41,71,41,41,71,41,41,41,71,71,41,71,71,41,71,41,41,41,71,41,71,41,71,41,71,41,0,0,196,0,0,197,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,198,199,198,199,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,196,198,199,196,197,198,199,198,198,199,199,197,197,196,197,198,199,196,197,198,199,197,196,197,197,197,197,197,198,198,197,198,198,199,199,196,197,198,199,196,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],[[5,[4]]]],0,0,[6,7],[1,7],[[[2,[[0,[[8,[7]],9]]]],10],[[5,[10,11]]]],[[[2,[[0,[[8,[7]],9]]]],10],10],[[[2,[6]],12],[[5,[4]]]],[[[2,[1]],3,12],[[5,[4]]]],[[[2,[6]],3,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],12],[[5,[4]]]],[[[2,[1]],12],[[5,[15,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],16,17,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],3,[0,[13,14]]],[[5,[12,4]]]],[[[2,[1]],3,15,[0,[13,14]]],[[5,[12,4]]]],0,[6,6],[1,1],[[]],[[]],[[[2,[[0,[[8,[7]],9]]]]],[[0,[[8,[7]],9]]]],0,[18,[[5,[19,20]]]],[19,[[5,[21,22]]]],[23,[[5,[21,22]]]],0,0,[[[2,[[0,[[8,[7]],9]]]]],24],[2,18],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[5,[6]]]],[[],[[5,[1]]]],[21],[21],[21],[21],[21],[21],[[1,1],25],[[],25],[[[2,[6]]],[[5,[26,4]]]],[[[2,[[0,[[8,[7]],9]]]]],[[27,[[5,[12,4]]]]]],[[[2,[[0,[[8,[7]],9]]]],12],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],10,28],[[5,[29,4]]]],[[[2,[1]],3],[[5,[30,4]]]],[[[2,[6]]],[[5,[[27,[26]],4]]]],[[31,32],33],[[6,32],33],[[1,32],33],[[19,32],33],[[4,32],33],[[4,32],33],[[]],[[]],[[]],[[]],[[]],[34,4],[35,4],[36,4],[37,4],[38,4],[39,4],[40,4],[41,4],[[]],[42,[[5,[43]]]],[[[2,[6]],44,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],17,45,[0,[13,14]],[46,[10]]],[[5,[47,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[13,14]]],48],[24,49],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[19,49],0,[[[2,[1]],44],25],[[[2,[[0,[[8,[7]],9]]]]],27],[[[2,[1]]],[[27,[12]]]],[[[2,[1]]],[[27,[3]]]],[[[2,[1]]],[[27,[30]]]],0,[[[2,[[0,[[8,[7]],9]]]]],50],0,[31,51],0,0,0,0,[[[2,[[0,[[8,[7]],9]]]]],52],[49,49],[[],18],[[[0,[[8,[7]],9]],18,24,[54,[53]]],[[2,[[0,[[8,[7]],9]]]]]],[[[2,[[0,[[8,[7]],9]]]],55,48],[[5,[56,4]]]],[[[0,[[8,[7]],9]],18,24,57,[54,[53]]],[[2,[[0,[[8,[7]],9]]]]]],0,[[[2,[[0,[[8,[7]],9]]]]],[[59,[58]]]],[[[2,[[0,[[8,[7]],9]]]],[59,[60]],[0,[13,14]]],[[5,[12,4]]]],0,[[[2,[[0,[[8,[7]],9]]]],61,62,[0,[13,14]]],[[5,[63,4]]]],[[[2,[[0,[[8,[7]],9]]]],56,[0,[13,14]]],[[5,[12,4]]]],[64],0,[[[2,[[0,[[8,[7]],9]]]],17]],0,[[[2,[1]],3,[0,[13,14]]],[[5,[63,4]]]],[[[2,[1]],26],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],[59,[58]],[0,[13,14]]],[[5,[12,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[13,14]]],[[5,[12,4]]]],0,[[[2,[1]],30]],0,[6,5],[1,5],[19,5],[4,[[46,[65]]]],[[[2,[[0,[[8,[7]],9]]]],17,[0,[13,14]]],[[5,[[59,[58]],4]]]],[[[2,[[0,[[8,[7]],9]]]],66,[0,[13,14]]],[[5,[63,4]]]],[[[2,[6]],[46,[67]]],[[5,[26,4]]]],0,[[],[[27,[68,69]]]],[[]],[[]],[[],45],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[2,[6]],3,[0,[13,14]]],[[5,[12,4]]]],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],0,[[[2,[[0,[[8,[7]],9]]]],59],[[5,[4]]]],[[[2,[1]],30],[[5,[31,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[[0,[[8,[7]],9]]]]],71],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],72],[[[77,[[0,[73,74,75,76]]]]],72],[[12,78,18],[[81,[[80,[79]]]]]],[[12,78,42],[[81,[[80,[79,69]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[82,[[81,[[80,[79]]]]]],[21],[21],[21],[57],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[5,[83]]]],[[],[[81,[[80,[79]]]]]],[[],[[81,[[80,[79,69]]]]]],[84,[[81,[[80,[79]]]]]],[84,[[81,[[80,[79,69]]]]]],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[27,[85]]]],[[],[[27,[85]]]],[[],[[27,[85]]]],0,[[],[[81,[[80,[79]]]]]],[[],[[81,[[80,[79,69]]]]]],[3,[[81,[[80,[79]]]]]],[3,[[81,[[80,[79,69]]]]]],[[10,28,18],[[81,[[80,[79]]]]]],[[10,28,42],[[81,[[80,[79,69]]]]]],[[],[[81,[[80,[79]]]]]],[[],[[81,[[80,[79,69]]]]]],[[],[[81,[[80,[79]]]]]],[[],[[81,[[80,[79,69]]]]]],[16,[[81,[[80,[79]]]]]],[16,[[81,[[80,[79,69]]]]]],[[12,18],[[81,[[80,[79]]]]]],[[12,42],[[81,[[80,[79,69]]]]]],[[48,55],[[81,[[80,[79]]]]]],[[48,55],[[81,[[80,[79,69]]]]]],[63,[[81,[[80,[79]]]]]],[63,[[81,[[80,[79,69]]]]]],[[86,32],33],[[86,32],33],[[39,32],33],[[39,32],33],[[40,32],33],[[40,32],33],[[57,32],33],[[[77,[74]],32],33],[[[87,[74]],32],33],[[83,32],33],[[[88,[74]],32],33],[89,86],[[]],[[]],[[]],[39,40],[90,40],[[],57],[[]],[[]],[[]],[7,83],[[]],[[]],[7,[[77,[91]]]],[[],[[81,[[80,[79]]]]]],[[],[[81,[[80,[79,69]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[86,25],[39,25],[40,25],0,0,[27,[[77,[91]]]],[27,77],[16,[[81,[[80,[79]]]]]],[16,[[81,[[80,[79,69]]]]]],0,0,[77,[[27,[92]]]],0,[64],[64],[64],[26,[[81,[[80,[79]]]]]],[26,[[81,[[80,[79,69]]]]]],[[[87,[73]],93],[[94,[85]]]],[[45,[27,[85]]],[[81,[[80,[79]]]]]],[[45,[27,[85]]],[[81,[[80,[79]]]]]],[[92,93],[[81,[[80,[79]]]]]],[[[77,[[0,[73,74,75,76]]]],92,93],[[81,[[80,[79]]]]]],[[45,[27,[85]]],[[81,[[80,[79]]]]]],[[[0,[95,75]],45,[27,[85]]],[[81,[[80,[79]]]]]],0,[83,5],[86,[[46,[65]]]],[40,[[46,[65]]]],[96,[[81,[[80,[79]]]]]],[96,[[81,[[80,[79,69]]]]]],[[],45],[[],45],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[97,[[81,[[80,[79]]]]]],[97,[[81,[[80,[79,69]]]]]],0,[82,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[98,72],[[12,78,42],[[81,[[80,[79,69]]]]]],[[]],[[]],[21],[21],[[],[[81,[[80,[79,69]]]]]],[84,[[81,[[80,[79,69]]]]]],[21],[[],[[81,[[80,[79,69]]]]]],[3,[[81,[[80,[79,69]]]]]],[[10,28,42],[[81,[[80,[79,69]]]]]],[[],[[81,[[80,[79,69]]]]]],[[],[[81,[[80,[79,69]]]]]],[16,[[81,[[80,[79,69]]]]]],[[12,42],[[81,[[80,[79,69]]]]]],[[48,55],[[81,[[80,[79,69]]]]]],[63,[[81,[[80,[79,69]]]]]],[[98,32],33],[[]],[[],[[81,[[80,[79,69]]]]]],0,[[],21],[[]],0,[[99,[72,[92]]],98],[16,[[81,[[80,[79,69]]]]]],[26,[[81,[[80,[79,69]]]]]],[[98,92,93],[[81,[[80,[79]]]]]],0,[96,[[81,[[80,[79,69]]]]]],[[],5],[[],5],[[],70],[97,[[81,[[80,[79,69]]]]]],[[]],[[98,[100,[45]]],98],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[102,102],[[]],[[]],[18,[[5,[103,20]]]],[103,[[5,[21,22]]]],[23,[[5,[21,22]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[101,32],33],[[101,32],33],[[103,32],33],[[]],[[]],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[[102,21],[[46,[101]]]],0,[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],102],[102,21],0,[102,46],[102,46],[[102,21],46],[103,5],[102],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[]],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],104],[[50,3],105],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[50,3,106],107],[[50,17,16,15,[46,[10]]],107],[[50,108,44,26,109,[0,[13,14]]],[[105,[107]]]],[[50,110]],0,[50],[[],111],[21],[21],[21],[21],[21],[21],[[],[[5,[112]]]],[21],[21],[21],0,[[50,32],33],[[112,32],33],[[38,32],33],[[38,32],33],[[]],[[]],[[]],[[50,3],[[105,[47]]]],[[50,3],[[105,[113]]]],[[50,3],[[105,[114]]]],[[50,16],[[105,[115]]]],[[50,3],[[105,[30]]]],0,[[],21],[[],21],[[],21],[50,116],[[]],[[]],[[]],[[50,3],[[105,[25]]]],[[117,3],112],[[50,16],[[105,[25]]]],0,[50,116],[64],[[50,10],[[27,[110]]]],[[50,47]],[112,5],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[118,118],[119,119],[[]],[[]],[18,[[5,[120,20]]]],[18,[[5,[121,20]]]],[18,[[5,[122,20]]]],[18,[[5,[123,20]]]],[18,[[5,[124,20]]]],[18,[[5,[125,20]]]],[18,[[5,[126,20]]]],[18,[[5,[127,20]]]],[18,[[5,[128,20]]]],[18,[[5,[129,20]]]],[120,[[5,[21,22]]]],[121,[[5,[21,22]]]],[122,[[5,[21,22]]]],[123,[[5,[21,22]]]],[124,[[5,[21,22]]]],[125,[[5,[21,22]]]],[126,[[5,[21,22]]]],[127,[[5,[21,22]]]],[128,[[5,[21,22]]]],[129,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[118,32],33],[[118,32],33],[[120,32],33],[[121,32],33],[[122,32],33],[[123,32],33],[[124,32],33],[[125,32],33],[[126,32],33],[[127,32],33],[[128,32],33],[[129,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[[119,21],[[46,[118]]]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],119],[119,21],0,[119,46],[119,46],[[119,21],46],[120,5],[122,5],[124,5],[126,5],[128,5],[119],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[]],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[114,130],[114,114],[[]],[18,[[5,[114,20]]]],[18,[[5,[47,20]]]],[114,[[5,[21,22]]]],[47,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],0,[47,3],[21],[21],[21],[21],[21],[21],[[114,32],33],[[47,32],33],[[]],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[[],21],[[],21],[[]],[[]],0,0,[47,5],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[30,15],130],[30,30],[[]],[18,[[5,[110,20]]]],[18,[[5,[30,20]]]],[110,[[5,[21,22]]]],[30,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],0,0,[21],[21],[21],[21],[21],[21],[[110,32],33],[[30,32],33],[[]],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[[],21],[[],21],[[]],[[]],0,[30,130],[110,5],[30,5],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[131],[[],104],[131,10],[52,132],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,52],[131,131],[133,133],[134,134],[58,58],[[]],[[]],[[]],[[]],[[]],[[131,131],135],[134,17],[134,21],0,0,[18,[[5,[131,20]]]],[18,[[5,[133,20]]]],[18,[[5,[134,20]]]],[18,[[5,[58,20]]]],[131,[[5,[21,22]]]],[133,[[5,[21,22]]]],[134,[[5,[21,22]]]],[58,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],0,[[52,17,136,108]],0,[[],111],[52],[[],131],[[],134],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[5,[131]]]],[[],[[5,[133]]]],[[],[[5,[134]]]],[[],[[5,[58]]]],[52,[[132,[[46,[137]]]]]],[21],[21],[21],[21],[21],[21],[21],[[[59,[58]]],[[5,[35]]]],0,[[131,131],25],[[133,133],25],[[134,134],25],[[58,58],25],[[],25],[[],25],[[],25],[[],25],[[134,138]],[52,[[27,[[5,[12,35]]]]]],[[52,108,12],[[5,[35]]]],[[52,[139,[10]],[141,[[140,[29]]]],142]],[[133,143,144],[[5,[58,145]]]],[[134,146,147],[[5,[[59,[58]],145]]]],[[52,96,[27,[17]]]],[[52,32],33],[[131,32],33],[[131,32],33],[[133,32],33],[[134,32],33],[[58,32],33],[[145,32],33],[[145,32],33],[[35,32],33],[[35,32],33],[[]],[[]],[[]],[[]],[[]],[34,145],[[]],[40,35],[145,35],[86,35],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[10,131],[[52,108],[[59,[58]]]],[52,148],[49,148],[52,149],[49,149],[[],10],[[52,108,17],131],[58],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[52,116],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,25],[52,27],[[54,49]],[[52,54,17,108]],[[52,17,108],49],[[49,17,131],49],[131,131],[133,150],0,[52,[[59,[58]]]],[[52,108],136],[52,116],[[131,131],[[46,[135]]]],[52,[[132,[151]]]],[52,[[132,[137]]]],[64],[64],[[52,17,108]],[133,60],[[52,152,137,21],[[132,[[154,[153]]]]]],[[52,21,152],[[132,[154]]]],0,[[52,17],[[5,[35]]]],[[52,17],[[5,[[59,[58]],35]]]],[131,5],[133,5],[134,5],[58,5],[[52,136]],[35,[[46,[65]]]],0,0,[52,108],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],45],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[52,151],132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,132],[108,132],0,0,0,0,[[155,17]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,[[5,[137,20]]]],[137,[[5,[21,22]]]],[23,[[5,[21,22]]]],[[],[[132,[137]]]],[[151,148],[[132,[137]]]],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[5,[137]]]],[21],[21],[21],[21],[137,[[132,[[27,[68]]]]]],[[137,148],[[132,[151]]]],0,[[137,137],25],[[],25],[[155,17]],[155,153],[[137,32],33],[[153,32],33],[[155,32],33],[[]],[[]],[[]],[[]],[[137,49,21,[147,[144]],[157,[92,[147,[156]]]]],155],[42,[[5,[43]]]],0,[21,21],[[155,92,158,159,72]],[[155,160]],[[155,12,161]],[[155,92,162]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[151,149],[[132,[97]]]],0,[[],137],0,0,0,0,[[155,17,131]],0,0,0,0,0,[137,5],0,0,0,0,[[],[[27,[68,69]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,[[5,[165,20]]]],[18,[[5,[166,20]]]],[18,[[5,[167,20]]]],[18,[[5,[168,20]]]],[18,[[5,[169,20]]]],[18,[[5,[170,20]]]],[18,[[5,[171,20]]]],[18,[[5,[172,20]]]],[18,[[5,[173,20]]]],[165,[[5,[21,22]]]],[166,[[5,[21,22]]]],[167,[[5,[21,22]]]],[168,[[5,[21,22]]]],[169,[[5,[21,22]]]],[170,[[5,[21,22]]]],[171,[[5,[21,22]]]],[172,[[5,[21,22]]]],[173,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[5,[169]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[169,169],25],[[],25],[[163,32],33],[[163,32],33],[[165,32],33],[[166,32],33],[[167,32],33],[[168,32],33],[[169,32],33],[[170,32],33],[[171,32],33],[[172,32],33],[[173,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[[164,21],[[46,[163]]]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],164],[164,21],0,[164,46],[164,46],0,[[164,21],46],[165,5],[167,5],[169,5],[172,5],[173,5],[164],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],0,0,0,0,0,[[[174,[74]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,21],175],[21,176],[21,177],[21,178],[21,179],[21,180],[[92,181],174],[[182,92,181],174],[[175,92,[181,[29]]],[[174,[29]]]],[[[176,[[0,[74,183,9]]]],92,[181,[[27,[[0,[74,183,9]]]]]]],[[174,[[27,[[0,[74,183,9]]]]]]]],[[[177,[[0,[74,183,9]]]],92,[181,[[0,[74,183,9]]]]],[[174,[[27,[[0,[74,183,9]]]]]]]],[[[178,[[0,[74,183,9]]]],92,[181,[[0,[74,183,9]]]]],[[174,[[0,[74,183,9]]]]]],[[[179,[[0,[183,9,74]]]],92,[181,[[0,[183,9,74]]]]],[[174,[[0,[183,9,74]]]]]],[[[180,[[0,[183,9,74]]]],92,[181,[[0,[183,9,74]]]]],[[174,[[0,[183,9,74]]]]]],0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[149]]]],[149,5],0,0,[[]],[[]],[[66,2,[0,[13,14]]],96],[[66,52,[0,[13,14]],[27,[17]],54],96],[[66,2],17],[[],66],[21],[21],[21],[[66,2],17],[[]],[[],21],[[66,27,184]],[[66,2],17],[[66,2],185],[[]],[[],25],0,[[66,186],10],[[66,2],17],[[66,2],185],[[],5],[[],5],0,[[],70],[[]],0,0,[[]],[[]],0,0,[21],[21],[21],[[187,32],33],[[]],[93,[[5,[188,189]]]],[[],21],[[]],[190,191],[93,[[5,[55,192]]]],[93,[[132,[[59,[58]]]]]],[93,[[5,[17,193]]]],[93,[[5,[67,194]]]],0,[59,45],[[],5],[[],5],[[],70],[[]],0,0,0,0,0,0,0,0,[[],104],[[71,12],[[5,[195,41]]]],[[]],[[]],[[]],[[]],0,0,[[71,61,62],[[5,[41]]]],0,[71],[[],111],[21],[21],[21],[21],[21],[21],[[71,32],33],[[41,32],33],[[41,32],33],[[]],[[]],[86,41],[40,41],[[71,108,[0,[13,14]]],48],[[],21],[[],21],[71,116],[[]],[[]],[71,116],[64],[41,[[46,[65]]]],[[],45],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[196,196],[197,197],[198,198],[199,199],[[]],[[]],[[]],[[]],[18,[[5,[198,20]]]],[18,[[5,[199,20]]]],[198,[[5,[21,22]]]],[199,[[5,[21,22]]]],[23,[[5,[21,22]]]],[23,[[5,[21,22]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[196,32],33],[[196,32],33],[[198,32],33],[[199,32],33],[[]],[[]],[[]],[[]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[42,[[5,[43]]]],[[197,21],[[46,[196]]]],0,[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],197],[197,21],0,[197,46],[197,46],[[197,21],46],0,[198,5],[197],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[],[[27,[68,69]]]],[[]],[[]],[[]],[[]],[[],45],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]]],"p":[[3,"GatewayClientConfig"],[3,"Client"],[3,"ContractId"],[4,"ClientError"],[4,"Result"],[3,"UserClientConfig"],[3,"ClientConfig"],[8,"AsRef"],[8,"Clone"],[15,"u64"],[3,"Elapsed"],[3,"OutPoint"],[8,"RngCore"],[8,"CryptoRng"],[3,"Preimage"],[3,"Hash"],[3,"Amount"],[6,"ModuleDecoderRegistry"],[3,"ClientSecret"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"Database"],[15,"bool"],[3,"LightningGateway"],[3,"Vec"],[3,"PublicKey"],[3,"SignedEpochOutcome"],[3,"OutgoingContractAccount"],[3,"PaymentParameters"],[3,"Formatter"],[6,"Result"],[3,"InvalidAmountTierError"],[4,"MintClientError"],[3,"Error"],[4,"CreationError"],[4,"LnClientError"],[3,"FederationError"],[4,"OutputOutcomeError"],[4,"WalletClientError"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"Invoice"],[3,"String"],[4,"Option"],[3,"ConfirmedInvoice"],[3,"Address"],[3,"DerivableSecret"],[3,"LnClient"],[15,"f64"],[3,"MintClient"],[4,"All"],[3,"Secp256k1"],[3,"Amount"],[3,"PegOut"],[3,"DynFederationApi"],[3,"SpendableNote"],[3,"TieredMulti"],[3,"BlindNonce"],[3,"TxOutProof"],[3,"Transaction"],[3,"TransactionId"],[3,"Demand"],[8,"Error"],[3,"TransactionBuilder"],[3,"PublicKey"],[15,"u8"],[3,"Global"],[3,"TypeId"],[3,"WalletClient"],[3,"BTreeSet"],[8,"JsonRpcClient"],[8,"Debug"],[8,"Send"],[8,"Sync"],[3,"WsFederationApi"],[3,"Duration"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Url"],[3,"WsFederationConnect"],[3,"XOnlyPublicKey"],[4,"Value"],[4,"MemberError"],[3,"FederationMember"],[3,"PeerResponse"],[4,"Error"],[4,"CoreError"],[3,"Client"],[3,"PeerId"],[15,"str"],[6,"JsonRpcResult"],[8,"QueryStrategy"],[3,"Transaction"],[3,"SignedBackupRequest"],[3,"FederationApiFaker"],[3,"Arc"],[8,"Into"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ClientSecretKey"],[8,"Any"],[6,"Result"],[3,"Signature"],[4,"LightningOutput"],[3,"DatabaseTransaction"],[15,"u32"],[3,"OutgoingContractData"],[3,"DynDecoder"],[3,"PayInvoicePayload"],[3,"ContractAccount"],[3,"IncomingContractAccount"],[3,"IncomingContractOffer"],[3,"TransactionItemAmount"],[3,"FederationId"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"OutgoingPaymentKey"],[3,"OutgoingPaymentKeyPrefix"],[3,"OutgoingPaymentClaimKey"],[3,"OutgoingPaymentClaimKeyPrefix"],[3,"OutgoingContractAccountKey"],[3,"OutgoingContractAccountKeyPrefix"],[3,"ConfirmedInvoiceKey"],[3,"ConfirmedInvoiceKeyPrefix"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"LightningInput"],[3,"NoteIndex"],[6,"Result"],[3,"NoteIssuanceRequest"],[3,"NoteIssuanceRequests"],[4,"Ordering"],[15,"u16"],[3,"PlaintextEcashBackup"],[8,"IntoIterator"],[3,"RangeInclusive"],[6,"FederationResult"],[3,"Sender"],[3,"TaskHandle"],[3,"BlindedSignature"],[3,"AggregatePublicKey"],[4,"CoinFinalizationError"],[3,"MintOutputBlindSignatures"],[3,"Tiered"],[3,"LessSafeKey"],[3,"KeyPair"],[3,"Nonce"],[3,"EcashBackup"],[3,"TaskGroup"],[3,"EcashRecoveryFinalState"],[6,"Cancellable"],[3,"EcashRecoveryTracker"],[3,"PublicKeyShare"],[3,"BTreeMap"],[4,"ConsensusItem"],[3,"HashSet"],[3,"MintInput"],[3,"MintOutput"],[3,"MintConsensusItem"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"CoinKey"],[3,"CoinKeyPrefix"],[3,"PendingCoinsKey"],[3,"PendingCoinsKeyPrefix"],[3,"OutputFinalizationKey"],[3,"OutputFinalizationKeyPrefix"],[3,"NextECashNoteIndexKeyPrefix"],[3,"NextECashNoteIndexKey"],[3,"NotesPerDenominationKey"],[4,"QueryStep"],[3,"ValidHistory"],[3,"UnionResponses"],[3,"UnionResponsesSingle"],[3,"Retry404"],[3,"EventuallyConsistent"],[3,"CurrentConsensus"],[6,"MemberResult"],[3,"TrustAllPeers"],[8,"Eq"],[4,"Input"],[8,"Iterator"],[4,"Output"],[3,"ClientContext"],[8,"Decodable"],[3,"Error"],[4,"Network"],[4,"Currency"],[4,"ParseAmountError"],[4,"ParseAmountError"],[4,"Error"],[3,"Txid"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"PegInKey"],[3,"PegInPrefixKey"],[8,"IFederationApi"],[8,"GlobalFederationApi"],[8,"MintFederationApi"],[8,"WalletFederationApi"],[8,"LnFederationApi"],[8,"FederationApiExt"],[13,"InvalidPeerId"],[13,"InvalidVout"],[8,"Final"]]},\
"tbs":{"doc":"Threshold Blind Signatures","t":[8,16,3,3,3,3,3,8,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,17,5,5,3,12,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,0,0,14,0,5,5,5,5,5,5],"n":["Aggregatable","Aggregate","AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FromRandom","Message","MessagePoint","PubKeyPoint","PublicKeyShare","Scalar","SecretKeyShare","Signature","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","aggregate","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_le_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_valid_shares","conditional_negate","conditional_negate","conditional_negate","conditional_select","conditional_select","conditional_select","ct_eq","ct_eq","ct_eq","dealer_keygen","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double","double","encode_compressed","encode_compressed","encode_compressed","encode_compressed","encode_compressed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_bytes_wide","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_hash","from_random","from_random","from_raw","from_repr","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","identity","identity","identity","identity","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into","into","invert","invert","is_identity","is_identity","is_identity","is_identity","is_odd","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","multiplicative_generator","neg","neg","neg","neg","neg","neg","neg","one","one","pairing_with","pairing_with","point_impl","poly","pow","pow_vartime","random","random","root_of_unity","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","sqrt","sqrt","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_le_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_repr","to_string","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","zero","zero","zeroize","zeroize","zeroize","HASH_TAG","hash_bytes_to_curve","hash_to_curve","Poly","_pd","borrow","borrow_mut","coefficients","coefficients","evaluate","fmt","from","from","interpolate_zero","into","random","try_from","try_into","type_id","vzip","g1","g2","impl_serde_g","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize"],"q":["tbstbs::hash","","","tbs::poly","","","","","","","","","","","","","","","","","tbs::serde_impl","","","","tbs::serde_impl::g1","","tbs::serde_impl::g2","","tbs::serde_impl::scalar",""],"d":["","","","","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …","","Represents an element of the scalar field $\\\\mathbb{F}_q$ …","","","","","","","Adds <code>rhs</code> to <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines a sufficent amount of valid blinded signature …","","","","","","","","","","<code>threshold</code>: how many signature shares are needed to produce …","","","","","","","","","","","","","","Doubles this field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Attempts to convert a little-endian byte representation of …","","","","","Converts a 512-bit little endian integer into a <code>Scalar</code> by …","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","<strong>IMPORTANT</strong>: <code>from_bytes</code> includes a tag in the hash, this …","","","Converts from an integer represented in little endian into …","","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element, not …","","Attempts to deserialize an uncompressed element, not …","","Returns a fixed generator of the group. See <code>notes::design</code> …","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","","","Returns the identity of the group: the point at infinity.","Returns the identity of the group: the point at infinity.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the multiplicative inverse of this element, …","","Returns true if this element is the identity (the point at …","","","Returns true if this element is the identity (the point at …","","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","","","","","Multiplies <code>rhs</code> by <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Negates <code>self</code>.","","","","","","Returns one, the multiplicative identity.","","","","","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","","","","","","","","","","","","","","","","Computes the square root of this element, if it exists.","Squares this element.","","Subtracts <code>rhs</code> from <code>self</code>, returning the result.","","","","","","","","","","","","","","","","Converts an element of <code>Scalar</code> into a byte representation in","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns zero, the additive identity.","","","","","","","<strong>IMPORTANT</strong>: the byte hashing fn includes a tag, this doesn…","","","","","","","","","","Returns the argument unchanged.","Interpolates the constant factor of a polynomial defined …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,40,0,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,1,2,4,1,2,4,1,2,4,0,1,2,4,12,13,14,8,9,15,16,17,7,1,1,9,15,16,17,7,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,1,2,2,4,4,12,13,14,8,9,15,16,17,7,1,1,2,2,2,4,4,4,7,1,2,4,2,4,1,2,4,2,4,7,41,1,1,1,2,2,4,4,2,2,4,4,2,2,4,4,0,14,9,15,16,17,7,2,2,4,4,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,1,2,2,4,4,1,2,4,2,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,1,1,2,2,4,4,1,1,2,4,0,0,1,1,8,1,1,0,12,13,14,8,9,15,16,17,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,2,4,2,4,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,13,1,1,2,4,2,2,4,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,0,0,12,13,14,8,9,15,16,17,7,1,2,4,2,4,2,4,1,1,1,2,4,0,0,0,0,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[6],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[10]]]],[12,12],[13,13],[14,14],[8,8],[9,9],[15,15],[16,16],[17,17],[7,7],[1,1],[2,2],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,16],[18],[18],[18],[[1,1,18],1],[[2,2,18],2],[[4,4,18],4],[[1,1],18],[[2,2],18],[[4,4],18],[[6,6]],[[],1],[[],2],[[],4],[[],[[19,[12]]]],[[],[[19,[13]]]],[[],[[19,[14]]]],[[],[[19,[8]]]],[[],[[19,[9]]]],[[],[[19,[15]]]],[[],[[19,[16]]]],[[],[[19,[17]]]],[[],[[19,[7]]]],[1,1],[1,1],[9],[15],[16],[17],[7],[[12,12],20],[[13,13],20],[[14,14],20],[[8,8],20],[[9,9],20],[[15,15],20],[[16,16],20],[[17,17],20],[[7,7],20],[[1,1],20],[[2,2],20],[[4,4],20],[[12,21],22],[[13,21],22],[[14,21],22],[[8,21],22],[[9,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[7,21],22],[[1,21],[[19,[23]]]],[[1,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,1],[[]],[3,2],[[]],[3,2],[5,4],[[]],[5,4],[[],7],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],1],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[26,7],[[]],[[],1],[[],1],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],2],[[],2],[[],4],[[],4],0,[14],[9],[15],[16],[17],[7],[[],2],[[],2],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[25,[1]]]],[1,[[25,[1]]]],[2,18],[2,18],[4,18],[4,18],[1,18],[2,18],[4,18],[2,18],[4,18],[[1,1],1],[[1,1],1],[[1,3]],[[1,2],3],[[1,1],1],[[1,2]],[[1,3],3],[[1,5]],[[1,1],1],[[1,4],5],[[1,5],5],[[1,2],3],[[1,3],3],[[1,4],5],[[1,2],3],[[1,4]],[[1,5],5],[[1,4],5],[[1,3],3],[[1,5],5],[[1,1],1],[[2,1],3],[[2,1],3],[[2,1]],[[2,1],3],[[4,1],5],[[4,1]],[[4,1],5],[[4,1],5],[[1,1]],[[1,1]],[[],1],[1,1],[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[[],1],[[],1],[2],[4],0,0,[1,1],[1,1],[[],8],[27,1],[[],1],0,[12,19],[13,19],[14,19],[8,19],[9,19],[15,19],[16,19],[17,19],[7,19],[[9,13],15],[1,[[25,[1]]]],[1,[[25,[1]]]],[1,1],[1,1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[[],1],[1],[2],[4],[2],[4],[2],[4],[1,[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,12],[1],[[],28],[[],28],[[],28],[2],[2],[4],[4],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[8,16],17],[[7,17,14],20],[[9,15,12],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],0,[[],30],[26,30],0,0,[[]],[[]],[31,32],0,[[31,33]],[[[31,[34]],21],22],[35,31],[[]],[[[0,[36,37]]]],[[]],[6,31],[[],19],[[],19],[[],29],[[]],0,0,0,0,[38,[[19,[2]]]],[[2,39],19],[38,[[19,[4]]]],[[4,39],19],[38,[[19,[1]]]],[[1,39],19]],"p":[[3,"Scalar"],[3,"MessagePoint"],[3,"G1Projective"],[3,"PubKeyPoint"],[3,"G2Projective"],[15,"usize"],[3,"Message"],[3,"BlindingKey"],[3,"BlindedMessage"],[3,"Lsb0"],[3,"BitArray"],[3,"PublicKeyShare"],[3,"SecretKeyShare"],[3,"AggregatePublicKey"],[3,"BlindedSignatureShare"],[3,"BlindedSignature"],[3,"Signature"],[3,"Choice"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u64"],[3,"CtOption"],[8,"Digest"],[8,"RngCore"],[3,"String"],[3,"TypeId"],[8,"Group"],[3,"Poly"],[3,"Iter"],[8,"Into"],[8,"Debug"],[3,"Vec"],[8,"Iterator"],[8,"Clone"],[8,"Deserializer"],[8,"Serializer"],[8,"Aggregatable"],[8,"FromRandom"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
