window.SIDEBAR_ITEMS = {"constant":[["DEFAULT_MAX_NOTES_PER_DENOMINATION","By default, the maximum notes per denomination when change-making for users"],["MINT_E_CASH_TYPE_CHILD_ID",""]],"enum":[["CombineError",""],["MintClientStateMachines",""],["MintError",""],["PeerErrorType",""]],"mod":[["config",""],["db",""],["issuance",""],["redemption",""]],"struct":[["BackupRequest",""],["BlindNonce","[`Nonce`] but blinded by the user key"],["MintClientContext",""],["MintClientGen",""],["MintClientModule",""],["MintCommonGen",""],["MintConsensusItem","Data structures taking into account different amount tiers A consenus item from one of the federation members contributing partials signatures to blind nonces submitted in it"],["MintInput",""],["MintModuleTypes",""],["MintOutput",""],["MintOutputBlindSignatures","Result of Federation members confirming [`MintOutput`] by contributing partial signatures via [`MintConsensusItem`]"],["MintOutputOutcome",""],["MintOutputSignatureShare","Blind signature share from one Federation peer for a single [`MintOutput`]"],["MintShareErrors","Represents an array of mint indexes that delivered faulty shares"],["Nonce","Unique ID of a mint note."],["Note","An verifiable one time use IOU from the mint."],["NoteIndex","An index used to deterministically derive [`Note`]s"],["SignedBackupRequest",""],["SpendableNote","A [`Note`] with associated secret key that allows to proof ownership (spend it)"]]};